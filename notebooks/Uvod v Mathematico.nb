(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    557998,      11642]
NotebookOptionsPosition[    527492,      11109]
NotebookOutlinePosition[    528127,      11131]
CellTagsIndexPosition[    528020,      11126]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"April", " ", "2019"}], "\[IndentingNewLine]", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
G8Umx/4sdozPDYNO4rmj4fAbx2vjvP6LtQrr2GyOg9aqs50zF4vnTlyfsqbs
pLYPb25u4vcEsfzatCM+59lS9z4WxjQkn9Pu41zrvCemZWm7Obu2z0eD35tn
x1pA6iKeX/kYEX6HH4CYfZ5JVb51IYQYZxizGRus/8TeRN9p65fMr4u2IH6A
cdHGP3xlTfbwYszy43XVPg307T42pSrmL7bP5WwJKSxnYS5vry8P45S/jtkk
0L6Mg2hExkLGm1hz4fvyGrtuzV2cmzHWKTwP7EHkyzUfqL9vbw/le3xlPCP+
9X5vr305J7qjqf/cE++tjL0IuwtaBdtfPFb3iu2R7O8BTYveiHU39039ow9o
c9ausMuldIe36+VsydyPvzbzD8oTz2n8uWyuwXuVWieB7TDWbMA9mT2SuI+c
Pzr3PNBzPAvb0zg+lvqxsqHVUnXi5ws8X9on7YrymE3X55PieL7jmujNeJ7k
7YlVsUA+7gO/NHVMnDU6MD7WryXkGXNt+qhe8oELIcQ4QD/p16jFxOMtdiP0
YV2+XebejHne1mZ2E7SI92OhabB1+f0cTI8ypng7Aj5HNJffVwHwF/F5lT3P
sHX+TWIg0BB+T5IUjIl+vR12G35jOS48jI9oxzjOE20R37/dF3UYP4eUfsX+
4/ODWB3yLz46NF6sZ/kePdvN+kbv//XaOBcH3G37pL6w3cX3FkPbYr2an9PE
5OKPLJ8MGjrXttE8vgxmA4uP82sreKbow6r3xdZtciw2NN4b7oGy8Num8c2W
s9yeK/o0d23s5XZsLl+K5X3xehd7nI9RIb9Q/PxzPmqzN1blHqc9+7bOe877
n9LOft8SO5aYtH7lGBJCiHGA9evs74RNC+1i+7Az7ydOgvk8dqKmYxF2P3xj
2KdYc8e4i92Kv/nc+7pYu4ZtEf8N/ip+i30AHcG6Mr+2DFsW+8iynp39gTkv
52eco/xNfD6MJayTT8VIVNUPYwsaE73HGMZ+B5Q1rhPGR8rCOEj5WCOF7QN7
HvqUMT4eI4kr4J44H2Mzv6GOPHzG+agbzkNdxeXEdsXaeZ4bZeWcXttx79jD
iMvAzkJddpsrF5sb2gyNTrvh+fZ7zy2eEW2PHCPMO6jHuF6AOuM7ykA90x6o
I/QK9Y0tLF6jaPicmHW549Ai1B3ny9Ubzx67FNer2j/O1yP+Y87Lc6Nd0T46
3SeF94Vz8O5SZxZ3krsPu+fcug/0Lm0IWy71mIrhYa5DmekzsF9WlZn3nnen
aq0u7Ye5INekbVbdA2v/OA5dSftoYiMVQgghhAByYNbZB2cS6CZbK8C/3eZ/
EkIIIYSYjuAbNX8t68earGmd7njfr9/zWgghhBBiHPD59/BhDrs8U4HPc1i1
L50QQgghxEyE9X6mheryq8wEfE5n4r6GXR4hhBBCiKkEX6/FXKOF6mLaZwI+
x1BdLnYhhBBCiJmGz0dXta/GTMJyzZAHUXEfQgghhJipYOcjT0n8OXunoIXI
ITLsMvYbcqHE+WnYi4d8eeQWbLpvihBCCCHEdMT2AyN/on1GDjp0EHtf9Huf
kmFDPkNyKJPbxWtA07vksRx2GYUQQgghBgVr+mzvN/ZLIU8w+Y7J/83avyZ7
Xk83yHvt920jroVc1PxNbuVxyHEjhBBCiPGGfSfifeDYx7CbPY+nA9j8/F7Q
th8ce5aMQ4yLEEIIIQSwrwf72ZLvmH3zOt1bbbqBBmTPNva4Zv+71PpHIYQQ
ogns/4kfif1lh12WHOwfSiwne4K+++67I1tOIYQQQohRBX/Ryy+/XFx//fVh
Db3ljhh2uWKId7z77ruL008/vfR5vfnmmyNXTiGEEEII2LdvX9h7irXZvfLR
Rx8V/Szbjh07yhy5xgUXXNDXa/SDK664YtIaLzThsMslRD9hPnb44MFiqGWo
uP7hipyChz/7bKjlFkKIUQP9x9rsSy65JOSk8BqGv9mf/qyzzgpge5s7d274
jBwPU6F53n///eILX/hCeQ201rDrLAa/LzZKXxdx/jMhpjM/e3d78e1/9svF
m5dcWvz0rW8XU339j1v9wNarfq1485cuKfa99l+T1//uohuLT/f8eNJ36Nbv
f31p8Q/3/5spL7cQQkwH/P5McNdddxW5Y8nj8NprrxU33XTTwG1elMOuQR6x
YddTCvKe+XjHg0O2kwjRT3Z87c7iW186O7DzTx8qpvr67634k/L6f/8n9yav
//599xffX7Z80ne7Vn+j2PKLlxSffNhf/4QQQswUiEv0dj3iLZr8jji/Qeq/
+++/vyzT4sWLB3KNXuHerYzkeht2eYToJ9j9TH/98P/+f4qpvv7WK3+1vP6H
T/558vo/3fZ3xbd+4Zxi/+Zvld//6C83hM/2fvObU15mIYSYTnhfK/lqm/zG
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
hDlbe71miCtK2GHC+qv2WJ3z0Xkbbs6WDn7fsTrNYvYqztc0D5OtlwmaMVqj
GmKn2jHVpplz8Q8T4tVbz5ixBlsDcyDeI3Rplc3D/HvUaSdtws/n68Ysv4ax
Sd6vMn6nwlbQhHKtRsKuSVu1vrtqHut1XW4dIs/S/PhhvHHvgV8TyDNJ/d7H
TOXWxZvPgjZZ5w+3sZa+IXXf5XjypWr/n9mkcvY1nw8AUmOTv/9UeUIbbs+r
uV7TuDmzeTOGVh0X+q52n1+ldTvB2gQaq0kOX7O/p+4trJ1s6yz6kG73t/Zr
+ngmfg2vwbvnY4yrnn0nvo8ytrrVn6XWFntfasomE9YKt+sotS7cry+1+JJc
WWzuGPruVnlSPiCzfdPewhrtaAywtYE2n89dy8fGVM1ZfEyv2V6tz62La/Mx
KLm5sJ+D9ZL71fdDub29bM1ZuFYD329Yv9TSreitKk3p1y/m9JWPxcyNOVYX
lDG2pXq7QlPNZzBvt9+mxlPLEZxq303xtvm6+H9b48v7nLK3g9nl6vrIOrzv
l77U26XqtG5YK2D5yVrvVOrd9etMcv1/qSFa5+CeU3GaZqOs87+XMSoVbbhc
a0K+j4r+Bmz+S72EfRAbjAnmE+M33g9tcWj0UTYfq3qnbRykXrwPIKwBrCmH
9+/Vre+J6WQfXJsvMjetO6/PkRr0Yo0NPIe3OcdrNUIMqVtHXKV9ve0up6PL
HDn43KIcOX7Omou/suecW5MQ1rSaviRWrmJ+z1hmY3zKDuPXCfl8XJPqz82j
vT0+7PXeblde2+XslvZOpp5DWX9tW0tubWSMt6fUzT18v90kL3dl22znVgg6
PZNrmn7J66oJ8bORbud82H5KW2wPewpSnqNa5JuTzkO7Qu/YOoM632+T2KDQ
Nt36t6ClEn7i0pfa6uNT/bYfl2O9xhjux/2c3cfw64xSPi+f553+IVVXNj7U
+b19XsWqvtbHl/HO2O+q8nmVz9WtnUhpUerHxlfLw9xL+/b9Xco24u3ufl6Q
un/vU07lBptQl+4Zp/LdlX7R9jiSWx9S5t9LzCOsbTSxW+Z+m8uhF3JUN/T7
5TBNl8r5ElP2mZk+0PffVXmQm2B9OGM9Nia/bi2VA9vTaIxw6+ZzOar9PmCp
9YXUu/nQ6mI7eEesz/J7OaSuF9v1U/ZrP8Y18V2FNQqs+Ui0U/px3sEwxrX1
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

      "], {{0, 299}, {640, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSize->{590., Automatic},
    ImageSizeRaw->{640, 299},
    PlotRange->{{0, 640}, {0, 299}}], "\[IndentingNewLine]", 
   ButtonBox[
    RowBox[{
     RowBox[{"Prof", ".", " ", "dr", ".", " ", "Janko"}], " ", 
     "Slavi\[CHacek]"}],
    BaseStyle->"Hyperlink",
    ButtonData->{
      URL["http://www.ladisk.si/~slavic"], None},
    ButtonNote->"http://www.ladisk.si/~slavic"], "\[IndentingNewLine]", 
   ButtonBox[
    RowBox[{"Repozitorij", " ", "pypinm"}],
    BaseStyle->"Hyperlink",
    ButtonData->{
      URL["http://github.com/jankoslavic/pypinm"], None},
    ButtonNote->"http://github.com/jankoslavic/pypinm"]}]}]], "Text",
 CellChangeTimes->{{3.661395860310301*^9, 3.6613958987939043`*^9}, {
  3.661395979066207*^9, 3.661396001794959*^9}, {3.661396032457633*^9, 
  3.6613960998976107`*^9}, {3.7644804262249117`*^9, 3.764480443412489*^9}},
 TextAlignment->Center,ExpressionUUID->"e865004f-fbe2-4bb7-b2de-f4934fc3c8b5"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Uvod v Mathematico",
 FontSlant->"Italic"]], "Title",
 CellChangeTimes->{{3.6061000670580564`*^9, 3.606100074958541*^9}, {
  3.6061001959466467`*^9, 3.6061002068224792`*^9}, {3.606111509609539*^9, 
  3.6061115158079157`*^9}},ExpressionUUID->"b7c29c28-5abe-439f-97a7-\
f49fa7567947"],

Cell["Licen\[CHacek]na verzija za \[SHacek]tudente FS, UNI-LJ", "Subtitle",
 CellChangeTimes->{{3.606280865717231*^9, 3.6062808798871746`*^9}, {
  3.6613986775226383`*^9, 
  3.6613986787785563`*^9}},ExpressionUUID->"32dc2d84-6daf-4cc9-9393-\
2d7c3130f5a0"],

Cell[TextData[{
 "\[CapitalSHacek]tudentje Fakultete za strojni\[SHacek]tvo, UNI-LJ imate mo\
\[ZHacek]nost pridobiti licen\[CHacek]no verzijo programa ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " na tej ",
 ButtonBox["povezavi",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.fs.uni-lj.si/studijska_dejavnost/it_podpora/programska_\
oprema_za_studente/2015071415154271/Registracija%20Mathematica/"], None},
  ButtonNote->
   "http://www.fs.uni-lj.si/studijska_dejavnost/it_podpora/programska_oprema_\
za_studente/2015071415154271/Registracija%20Mathematica/"],
 "."
}], "Text",
 CellChangeTimes->{
  3.6062809453896084`*^9, {3.6073556272116833`*^9, 3.607355633783331*^9}, {
   3.6613962253695965`*^9, 
   3.6613963149978642`*^9}},ExpressionUUID->"d7a66635-3eaa-414a-bbb4-\
fa20bc8ba8c1"],

Cell[CellGroupData[{

Cell["Uporabni\[SHacek]ki vmesnik", "Subtitle",
 CellChangeTimes->{{3.6061000987168207`*^9, 
  3.6061001074964933`*^9}},ExpressionUUID->"b09832ca-0aa2-4088-aee4-\
b154112256dd"],

Cell["\<\
Format, Palettes, Evaluation,...

pu\[SHacek]\[CHacek]ica dol -> new cell
shift+enter -> evaluate cell
klik na (+)

?Log

Mathemematica vedno posku\[SHacek]a re\[SHacek]iti splo\[SHacek]no in analiti\
\[CHacek]no (razen, \[CHacek]e definiramo druga\[CHacek]e)\
\>", "Text",
 CellChangeTimes->{
  3.6061001662014437`*^9, {3.606100210490054*^9, 3.606100240295907*^9}, {
   3.6061008470245857`*^9, 3.6061009103428173`*^9}, {3.606101275203918*^9, 
   3.606101277501583*^9}, {3.6061013517730923`*^9, 3.6061013750982804`*^9}, {
   3.6061029428107986`*^9, 
   3.6061029450141125`*^9}},ExpressionUUID->"8bafd410-cbab-42ed-8a7e-\
8548731676e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nekatere zna\[CHacek]ilnost", "Subtitle",
 CellChangeTimes->{{3.606100396901567*^9, 3.606100409096816*^9}, {
  3.606100769281974*^9, 
  3.6061007784476748`*^9}},ExpressionUUID->"247de7e3-91bd-4e67-b30b-\
689008c8e7d8"],

Cell[CellGroupData[{

Cell["Free-form input", "Subsection",
 CellChangeTimes->{{3.606100825088525*^9, 3.606100828612095*^9}, {
  3.6061010313442965`*^9, 
  3.6061010364635754`*^9}},ExpressionUUID->"c3ae06c4-6d7e-4703-b34d-\
aeaf1ed0f894"],

Cell[TextData[{
 "cell se za\[CHacek]ne z \[OpenCurlyDoubleQuote]",
 StyleBox["=",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote], bolj podrobno: wolframAlpha se za\[CHacek]ne z \
\[OpenCurlyDoubleQuote]",
 StyleBox["==",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote]"
}], "Text",
 CellChangeTimes->{{3.6061010391835203`*^9, 3.606101059438413*^9}, {
   3.606103711077627*^9, 3.6061037268950424`*^9}, 
   3.606103763523281*^9},ExpressionUUID->"a57260df-2d2e-4ffa-bb81-\
6c967dda4009"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "integrate sin(x)", Typeset`newq$$ = 
   "integrate sin(x)", Typeset`chosen$$ = "Integrate[Sin[x], x]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "integrate sin(x)", 
                  Defer[
                   Integrate[
                    Sin[Global`x], Global`x]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Integrate", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], ",", " ", "x"}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Integrate", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], ",", " ", "x"}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", "x"}], "]"}]], 
                   "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "integrate sin(x)", 
                    Defer[
                    Integrate[
                    Sin[Global`x], Global`x]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", "x"}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", "x"}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", "x"}], "]"}]], 
                    "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], 
            PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"d2120484-4385-4b73-8a1c-a3bfea44e5e6"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.6061009918774195`*^9, 3.606101014457762*^9}, {
  3.606101908446023*^9, 
  3.606101921919198*^9}},ExpressionUUID->"c868f234-c290-4dfc-938c-\
d51eb49b247e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "plot x^x", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Plot", "Plots", 1, 2, "Input", "Plot[x^x, {x, -1, 2}]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"plot\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    SuperscriptBox["x", "x"]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              Global`TagBoxWrapper["Separator" -> " | "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Plots", "scanner" -> "Plot", "id" -> "Plot", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[x^x, {x, -1, 2}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max744$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`min743$$ = -0.5,
                  CalculateUtilities`GraphicsUtilities`Private`more$$ = False,
                  Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min743$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max744$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$506694$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min743$\
506699$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max744$506700$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max744$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min743$$\
 = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$506694$$\
, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min743$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min743$\
506699$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max744$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max744$\
506700$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    Labeled[
                    CalculateUtilities`GraphicsUtilities`Private`post$506686[
                    Plot[{
                    Re[Global`x^Global`x], 
                    Im[Global`x^Global`x]}, 
                    SlotSequence[2], PlotStyle -> {{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]]}, 
                    Directive[
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]]}]], 
                    Column[{
                    Row[{
                    Graphics[{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    Line[{{0, 0}, {10, 0}}]}, ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)], 
                    Style[" real part", Smaller, 
                    GrayLevel[0.3]]}], 
                    Row[{
                    Graphics[{
                    Directive[
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    Line[{{0, 0}, {10, 0}}]}, ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)], 
                    Style[" imaginary part", Smaller, 
                    GrayLevel[0.3]]}]}, Spacings -> 0], {{Right, Bottom}}], 
                    HoldAll][Global`x^Global`x, {Global`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min743$$], 
                    (
                    Piecewise[{{
                    0.5 + 1.6035674514745462` Tan[1.5040801783846716` #], # < 
                    0}}, 0.5 + 
                    1.6035674514745462` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min743$$], \
-1], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min743$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max744$$]], 
                    (
                    Piecewise[{{
                    0.5 + 1.6035674514745462` Tan[1.5040801783846716` #], # < 
                    0}}, 0.5 + 
                    1.6035674514745462` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min743$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max744$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min743$$ + 
                    Rational[3, 1000], 
                    CalculateUtilities`GraphicsUtilities`Private`max744$$]], 
                    2]}, LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    WorkingPrecision -> MachinePrecision, PlotRange -> 
                    Automatic, Ticks -> Automatic, ImageSize -> {300.}, 
                    AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min743$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max744$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   TrackedSymbols -> True, ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, Global`UnitNumberForm, NumberForm] -> (#& )], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[Global`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    Map[
                    Global`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = Global`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    Global`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Global`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$506686] = \
{"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$506686[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$506686[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVm1v0zAQbinv7+MfIPEZAYNJSEiIvTAmDShJ+\
d5b7DQWrh1sZxv8efDZTdKsXaWYDtCUfjjVl+bx3XPPXe/xkYzSfq/X01et+SA5SW/\
g6ZE1O3Kay0KQvdNcUa2ZFOkVfHbbmpiaXcrhByXed92a91JNwfjzG3wfeFJwMPSrYZwZRvV4X0Ges\
UTXnqFix/YnYy4T4OwnffLq2dbW602PgqEMwRiqhN5si5hnCjRNewh0zZptDuKbP26Ux08F5zH9XlC\
RUP3AekcKiIWRAjimE3zrpSbqLuZlQBBQ5MJZcuLcbnuBNoqJyYhOc3zjXK6et8UFNdGemnslNav04\
6O/iQ9k7ELyHpezOzv+wsK4XOydFdU/p26A57dt4ZU8WcobpveOI21g2DHVi2w+\
bV0lT0jVsi74GVUXNFvWGuP5E6b+Rzpk2iyG8aJtGHR6ZCu8XHmL8C/\
bwsscW34m7fvWfPaOEnDZZKjk9lGSgs+\
iaKY88AJtn67OrcNj3Kn4jtEZUsEKJ7Jxlt3iuuNhBV7vCDHWbrwG6Yh6AkQ0p9ZFHLe7bMLMTgYKE\
gs8u65f9thI1qEE3Nm+9kwQZseXJ2TV2oTmIJ2rO5gk+/\
JHxa3kcqbJkPcDYeiEqpWiv4X1UZZcQUYyMJIYL2jqNZjDKqkhqGDZD0qQOAfBEJL9sh/3zT+\
crwRSta9QXcqzOHClOQ1Pol8W+\
JCKicma23Xg6ApuW8wmkie16iKWpvPTZn1M95tMN25oDvRQEkJLEj7Quz2h2xP+\
4p6wsAN3S0K3JHRLQrckdEvC/7skuIjxX+k3KNe2/g=="]]}; Typeset`initDone$$ = True), 
                DynamicModuleValues :> {}, Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output"]}], 
       XMLElement["dataformats", {}, {"minput"}], 
       XMLElement["states", {"count" -> "1"}, {
         XMLElement[
         "statelist", {
          "count" -> "2", "value" -> "Complex-valued plot", "delimiters" -> 
           ""}, {
           XMLElement[
           "state", {
            "name" -> "Complex-valued plot", "input" -> 
             "Plot__1_Complex-valued plot"}, {}], 
           XMLElement[
           "state", {
            "name" -> "Real-valued plot", "input" -> 
             "Plot__1_Real-valued plot"}, {}]}]}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[x^x, {x, -8.5, 9.5}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max746$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`min745$$ = -0.5,
                  CalculateUtilities`GraphicsUtilities`Private`more$$ = False,
                  Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min745$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max746$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$506760$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min745$\
506761$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max746$506762$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max746$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min745$$\
 = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$506760$$\
, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min745$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min745$\
506761$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max746$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max746$\
506762$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    Labeled[
                    CalculateUtilities`GraphicsUtilities`Private`post$506752[
                    Plot[{
                    Re[Global`x^Global`x], 
                    Im[Global`x^Global`x]}, 
                    SlotSequence[2], PlotStyle -> {{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]]}, 
                    Directive[
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]]}]], 
                    Column[{
                    Row[{
                    Graphics[{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    Line[{{0, 0}, {10, 0}}]}, ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)], 
                    Style[" real part", Smaller, 
                    GrayLevel[0.3]]}], 
                    Row[{
                    Graphics[{
                    Directive[
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    Line[{{0, 0}, {10, 0}}]}, ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)], 
                    Style[" imaginary part", Smaller, 
                    GrayLevel[0.3]]}]}, Spacings -> 0], {{Right, Bottom}}], 
                    HoldAll][Global`x^Global`x, {Global`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min745$$], 
                    (Piecewise[{{
                    0.5 + 9.621404708847276 Tan[1.5040801783846716` #], # < 
                    0}}, 0.5 + 
                    9.621404708847276 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min745$$], \
-8.5], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min745$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max746$$]], 
                    (
                    Piecewise[{{
                    0.5 + 9.621404708847276 Tan[1.5040801783846716` #], # < 
                    0}}, 0.5 + 
                    9.621404708847276 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min745$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max746$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min745$$ + 
                    0.018000000000000002`, 
                    CalculateUtilities`GraphicsUtilities`Private`max746$$]], 
                    9.5]}, LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    WorkingPrecision -> MachinePrecision, PlotRange -> 
                    Automatic, Ticks -> Automatic, ImageSize -> {300.}, 
                    AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min745$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max746$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   TrackedSymbols -> True, ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, Global`UnitNumberForm, NumberForm] -> (#& )], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[Global`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    Map[
                    Global`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = Global`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    Global`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Global`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$506752] = \
{"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$506752[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$506752[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVm1v0zAQbikw3mH8AyQ+\
I94GQkJCbIMxaUBJyvd68SW1cO1gO9vgz4PPbpJm7SrFdICm9MOpvjSP75577noPDmWU9nu9nr5szQ\
fJabqBp/vW7MhpLgtB353kCrRmUqSX8NkNa2Iwu8DJD6Ded9Wa91JNifHn1/g+\
4UnBiYGvhnFmGOjxniL5hCW69gwVO7I/GXOZEM5+\
wsOtxy9ebr3yKBjKkBgDSuhnbRHziSIa0h4CXbFmmxPxzR83y+\
OngvMYvhcgEtB3rXekCLUwUhCO6QTfeqGJuoV5GSIoUfTcWXLi3G57gTaKiWwE0xzfOJOrJ21xicq0\
p+Z2Sc0q/fjor+\
EDGbuQvMfl7M6Ov7AwLhZ7p0X1z6kb4PlNW3glj5fyhum95UgbMewI9CKbj1pXyRNStawLfkbVOc2W\
tcZ49oSp/5EOmDaLYTxtGwZMD22FlytvEf55W3iZY8vPpH3Hms/\
eUQIumwyV3D5KWvBZFM2UB16g7dPVuXV4jJsV3zE6QypY4UQ2zrJbXHfcq8DrHSHG2o3XIB1RT4AIc\
rAu6rjdZRkzOxOiSGKBZ9f1yx4byTqUgDvb154Jyuz48oSsWpvQ7KdzdScmmXz5o+\
JWcjnVZMj7vjCQgVop+utYH2XJFXQkAyOJ8YKmXoM5rJIaEhUs+0EJEudEMIRkv+\
zHffMP5yuBVO0pVJfyLA5caU7Ck+iXBT4AkZlJc7sOHF3BbYvZRPK4Vl3E0nR+\
2qyP6X6T6cYNzYEeSkJoScIHercndHvCX9wTFnbgbknoloRuSeiWhG5J+H+XBBcx/iv9BpXLtxY="]\
]}; Typeset`initDone$$ = True), DynamicModuleValues :> {}, Deinitialization :> 
                None, UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output"]}], 
       XMLElement["dataformats", {}, {"minput"}], 
       XMLElement["states", {"count" -> "1"}, {
         XMLElement[
         "statelist", {
          "count" -> "2", "value" -> "Complex-valued plot", "delimiters" -> 
           ""}, {
           XMLElement[
           "state", {
            "name" -> "Complex-valued plot", "input" -> 
             "Plot__2_Complex-valued plot"}, {}], 
           XMLElement[
           "state", {
            "name" -> "Real-valued plot", "input" -> 
             "Plot__2_Real-valued plot"}, {}]}]}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "Plot", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.573", 
    "parsetiming" -> "0.245", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa61311e4de18gghh0ge5100005g9gia1637i7586g", "host" -> 
    "http://www4c.wolframalpha.com", "server" -> "39", "related" -> 
    "http://www4c.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa61321e4de18gghh0ge51000012hga174e9174dhc&s=39", "version" -> "2.6"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 2., 
    "Date" -> {2014, 4, 10, 8, 47, 20.429678`9.06283645621365}, "Line" -> 20, 
    "SessionID" -> 23788251085071752815}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Plot", "Plots", 1, 2, "Input", "Plot[x^x, {x, -1, 2}]"}, Typeset`open$$ = 
   False, Typeset`newq$$ = "plot x^x"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{185., {47., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"9bf3e8b5-1922-4d40-8bd3-40d920027809"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.6000000000000001},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 2}, {0.6922006458105129, 3.9999995853517367`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.606101240495741*^9, 3.606101925327813*^9, 
  3.6613964952096376`*^9},ExpressionUUID->"38560d46-6b68-4ea0-ab62-\
3d0641656ab7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["plot x^x", "WolframAlphaLong",
 CellChangeTimes->{{3.6061037412734785`*^9, 
  3.6061037470835905`*^9}},ExpressionUUID->"d4812d2c-9666-456f-b7ff-\
911fc742f496"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "plot x^x", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"plot\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    SuperscriptBox["x", "x"]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              $CellContext`TagBoxWrapper["Separator" -> " | "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Plots", "scanner" -> "Plot", "id" -> "Plot", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[x^x, {x, -1, 2}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max4438$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`min4437$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min4437$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max4438$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$5675352$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min4437$\
5675353$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max4438$5675354$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max4438$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min4437$\
$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$5675352$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min4437$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min4437$\
5675353$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max4438$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max4438$\
5675354$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    Labeled[
                    CalculateUtilities`GraphicsUtilities`Private`post$5675338[
                    Plot[{
                    Re[$CellContext`x^$CellContext`x], 
                    Im[$CellContext`x^$CellContext`x]}, 
                    SlotSequence[2], PlotStyle -> {{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]]}, 
                    Directive[
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]]}]], 
                    Column[{
                    Row[{
                    Graphics[{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    Line[{{0, 0}, {10, 0}}]}, ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)], 
                    Style[" real part", Smaller, 
                    GrayLevel[0.3]]}], 
                    Row[{
                    Graphics[{
                    Directive[
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    Line[{{0, 0}, {10, 0}}]}, ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)], 
                    Style[" imaginary part", Smaller, 
                    GrayLevel[0.3]]}]}, Spacings -> 0], {{Right, Bottom}}], 
                    HoldAll][$CellContext`x^$CellContext`x, {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min4437$$], 
                    (
                    Piecewise[{{
                    0.5 + 1.6035674514745462` Tan[1.5040801783846716` #], # < 
                    0}}, 0.5 + 
                    1.6035674514745462` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min4437$$], \
-1], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min4437$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max4438$$]], 
                    (
                    Piecewise[{{
                    0.5 + 1.6035674514745462` Tan[1.5040801783846716` #], # < 
                    0}}, 0.5 + 
                    1.6035674514745462` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min4437$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max4438$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min4437$$ + 
                    Rational[3, 1000], 
                    CalculateUtilities`GraphicsUtilities`Private`max4438$$]], 
                    2]}, LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    WorkingPrecision -> MachinePrecision, PlotRange -> 
                    Automatic, LabelStyle -> {}, Ticks -> Automatic, 
                    ImageSize -> {300.}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min4437$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max4438$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   TrackedSymbols -> True, ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, $CellContext`UnitNumberForm, NumberForm] -> (#& )],
                     Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$5675338]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$5675338[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[CalculateUtilities`GraphicsUtilities`Private`lines, 
                    Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[CalculateUtilities`GraphicsUtilities`Private`pt, 1, 
                    1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$5675338[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === L\
ength[CalculateUtilities`GraphicsUtilities`Private`intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVm1v0zAQbikw3t/+\
ARKfkWArfEJidGNMGlCS8r1eckksXDvYzjb48+Czm6RZu0oxHaAp/XCqL83ju+eeu97TYxEk/\
V6vp64b80GwONnC0xNjRmKWi4LH+\
2e5BKWo4Mk1fHbHmBD0HjDyA2Lnu2nMeyFnRLvzG3yfsKhgRMNXTRnVFNT0QJI8o5GqPWNJT8xPpkx\
EhNGf8Gz46vVwe2foYDCWMdEaJFfbbSHzTBIFSQ+BbhjzjhH+zR0fl8dPBWMhfC+\
AR6AeGu9EktjACE4Y5uN969Vm6h4mpgmPiYwvnSYrz1HbC5SWlKcTmOX4xsVkvWgLTGSqHDf3S27WK\
ciFfwsfiNDG5Dw2aXu2BPqFccXoOy+rf87dAM9v28JLcbqaOMxvlyFvRNMTUMt0Pm9dJ8dI1bU2+\
jlXlzVfNhrkxVOm/l86okovh/GybRgwOzY1Xq29ZfidtvAix66fi/uBMZ+\
dowRcNRwqwX0UccHmUTRTHjiJtk9X5cbhMO5WfIfo9KlghROYOMt+\
sf3xqAKvN4UQazfdgHR4PQMCyMG4YsvtHk2pHmVEksgAz6/\
rl002EXUoHne2rz3lMTUDzBGybnlCc5gs1J3oKPvyR8Wt5HKuyZD3Q64hBblW9LexPtKQy+\
OJ8IwkxAuaevXmsEpqTKS37AclSJgTThGS/jIf+\
809XKwEUnUgUV3SsTiwpTnzT6JfFvgIeKqz5o7tObq82xazCcRprbqAJsnitNkc0/\
0m040bmgPdlwTfkvgP9G5T6DaFv7opLO3B3ZrQrQndmtCtCd2a8P+uCTZi/Ff6DbQauLY="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {Background -> None}]}], 
       XMLElement["dataformats", {}, {"minput"}], 
       XMLElement["states", {"count" -> "1"}, {
         XMLElement[
         "statelist", {
          "count" -> "2", "value" -> "Complex-valued plot", "delimiters" -> 
           ""}, {
           XMLElement[
           "state", {
            "name" -> "Complex-valued plot", "input" -> 
             "Plot__1_Complex-valued plot"}, {}], 
           XMLElement[
           "state", {
            "name" -> "Real-valued plot", "input" -> 
             "Plot__1_Real-valued plot"}, {}]}]}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[x^x, {x, -8.5, 9.5}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max4440$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`min4439$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min4439$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max4440$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$5675425$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min4439$\
5675426$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max4440$5675427$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max4440$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min4439$\
$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$5675425$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min4439$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min4439$\
5675426$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max4440$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max4440$\
5675427$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    Labeled[
                    CalculateUtilities`GraphicsUtilities`Private`post$5675411[
                    Plot[{
                    Re[$CellContext`x^$CellContext`x], 
                    Im[$CellContext`x^$CellContext`x]}, 
                    SlotSequence[2], PlotStyle -> {{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]]}, 
                    Directive[
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]]}]], 
                    Column[{
                    Row[{
                    Graphics[{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    Line[{{0, 0}, {10, 0}}]}, ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)], 
                    Style[" real part", Smaller, 
                    GrayLevel[0.3]]}], 
                    Row[{
                    Graphics[{
                    Directive[
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    Line[{{0, 0}, {10, 0}}]}, ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)], 
                    Style[" imaginary part", Smaller, 
                    GrayLevel[0.3]]}]}, Spacings -> 0], {{Right, Bottom}}], 
                    HoldAll][$CellContext`x^$CellContext`x, {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min4439$$], 
                    (
                    Piecewise[{{
                    0.5 + 9.621404708847276 Tan[1.5040801783846716` #], # < 
                    0}}, 0.5 + 
                    9.621404708847276 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min4439$$], \
-8.5], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min4439$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max4440$$]], 
                    (
                    Piecewise[{{
                    0.5 + 9.621404708847276 Tan[1.5040801783846716` #], # < 
                    0}}, 0.5 + 
                    9.621404708847276 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min4439$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max4440$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min4439$$ + 
                    0.018000000000000002`, 
                    CalculateUtilities`GraphicsUtilities`Private`max4440$$]], 
                    9.5]}, LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    WorkingPrecision -> MachinePrecision, PlotRange -> 
                    Automatic, LabelStyle -> {}, Ticks -> Automatic, 
                    ImageSize -> {300.}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min4439$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max4440$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   TrackedSymbols -> True, ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, $CellContext`UnitNumberForm, NumberForm] -> (#& )],
                     Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$5675411]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$5675411[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$5675411[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVm1v0zAQbinv7/APkPiMNNiAL0hAB2PSgJKU7/\
XiS2Ph2sF2tsGfB5/dJM3aVYrpAE3ph1N9aR7fPffc9R4dyijt93o9fdmaD5LT9BqeHlozlLNcFoK+\
O8kVaM2kSC/hs5vWxGB2gZMfQL3vqjXvpZoR48+v8H3Ck4ITA18N48ww0JM9RfKMJbr2jBQ7sj+\
ZcJkQzn7C453nL3a2t156GIxlRIwBJfSztpB5poiGtIdAV6x5y4n45o8PyuOngvMYvhcgEtD3rHesC\
LUwUhCO+QTferGZuo2JGSIoUfTcaXLyHLa9QBvFxHQMsxzfOJusrbbARE215+ZOyc06Bfnwr+\
MDGbuYvMcl7c6OwLAwLhh9p2X1z7kb4Pl1W3glj1cTh/\
m94cgbMewI9DKdT1rXyTNSda2Lfs7Vec2XjQZ59pSp/\
5cOmDbLYTxtGwbMDm2NV2tvGX67LbzMsevn4r5rzWfvKAFXDYdKcB8lLfg8imbKAy/\
R9unq3Do8xq2K7xidIRWscCIbZ9kvrj/uV+D1phBj7SYbkI6oZ0AEOVgXddzusikzw4wokljg+\
XX9ssnGsg4l4M72tWeCMjvAPCHrlic0++lC3YlJsi9/VNxKLqeaDHnfFwamoNaK/\
gbWR1lyBR3LwEhivKCp12AOq6RGRAXLflCCxDkRDCHZL/tx3/\
zDxUogVXsK1aU8iwNXmpPwJPplgQ9ATE3W3LEDR1dw22I2kTyuVRexNF2cNptjut9kunFDc6CHkhBa\
kvCB3m0K3abwVzeFpT24WxO6NaFbE7o1oVsT/t81wUWM/0q/AS3kuL4="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {Background -> None}]}], 
       XMLElement["dataformats", {}, {"minput"}], 
       XMLElement["states", {"count" -> "1"}, {
         XMLElement[
         "statelist", {
          "count" -> "2", "value" -> "Complex-valued plot", "delimiters" -> 
           ""}, {
           XMLElement[
           "state", {
            "name" -> "Complex-valued plot", "input" -> 
             "Plot__2_Complex-valued plot"}, {}], 
           XMLElement[
           "state", {
            "name" -> "Real-valued plot", "input" -> 
             "Plot__2_Real-valued plot"}, {}]}]}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False, False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "Plot", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.681", 
    "parsetiming" -> "0.305", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa8401chb699908f1fihc0000153beafb588hhg76", "host" -> 
    "http://www3.wolframalpha.com", "server" -> "24", "related" -> 
    "http://www3.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa8411chb699908f1fihc00001d156e5i9ggf53f5&s=24", "version" -> "2.6"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2016, 1, 10, 7, 35, 0.3047125`7.236465259495768}, "Line" -> 3, 
    "SessionID" -> 28319349809188355589}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "plot x^x"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1194., {349., 355.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print",
 CellMargins->{{20, 10}, {Inherited, Inherited}},
 CellChangeTimes->{
  3.6613965004908657`*^9},ExpressionUUID->"a8a09fe9-6375-4b1c-ae40-\
b85b99dfa85a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " input"
}], "Subsection",
 CellChangeTimes->{{3.6061010718862734`*^9, 
  3.606101075808054*^9}},ExpressionUUID->"e3219830-b293-430f-950c-\
0db6d6587420"],

Cell[TextData[{
 "Vse funkcije z ",
 StyleBox["veliko in z oglatimi oklepaji",
  FontWeight->"Bold"],
 "; ni presledkov so pa velike za\[CHacek]etnice (npr. TrigExpand, \
LogPlot,...)"
}], "Text",
 CellChangeTimes->{{3.6061011049432344`*^9, 3.606101151615286*^9}, {
  3.6061029873840203`*^9, 
  3.606102992766824*^9}},ExpressionUUID->"7fc4c027-9942-4d21-9dd7-\
2216e8e9195b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6061010783238635`*^9, 
  3.606101098651005*^9}},ExpressionUUID->"5f3b77b0-98dc-429a-8708-\
d8aaf1b6f566"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.6061010996504793`*^9, 3.606101929326771*^9, 
  3.66139658771315*^9},ExpressionUUID->"0779d4f8-1996-44c9-a52c-db38aa56bc8e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Poljubna natan\[CHacek]nost", "Subsection",
 CellChangeTimes->{{3.6061007847623987`*^9, 
  3.606100791393645*^9}},ExpressionUUID->"a3072b64-93f1-47b4-951e-\
274748af93e5"],

Cell[CellGroupData[{

Cell[BoxData["Pi"], "Input",
 CellChangeTimes->{{3.606100794358973*^9, 
  3.6061007972160053`*^9}},ExpressionUUID->"d0f37529-24a3-48e4-a302-\
34754bdff9d6"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{{3.6061007950574727`*^9, 3.6061007976903477`*^9}, 
   3.6061019309479094`*^9, 
   3.661396591219208*^9},ExpressionUUID->"f862c636-c0e9-4b61-9dc3-\
ae4decf844e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", "Pi", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"komentar", ":", " ", 
    RowBox[{"N", " ", "pods", " ", "numeri\[CHacek]no", " ", "vrednost"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6061008022300234`*^9, 3.606100813999293*^9}, {
   3.6061015446329403`*^9, 3.6061015462671337`*^9}, 
   3.6061015801445103`*^9},ExpressionUUID->"7827f5bc-bd91-4bac-a3a4-\
04f8ec4d9d38"],

Cell[BoxData["3.141592653589793`"], "Output",
 CellChangeTimes->{{3.6061008049645205`*^9, 3.606100816815737*^9}, 
   3.606101932435983*^9, 
   3.6613965931351776`*^9},ExpressionUUID->"d9dd6fa8-f985-4ee8-a884-\
2c18eb853d76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "N"}]], "Input",
 CellChangeTimes->{{3.606101595530361*^9, 
  3.606101596462002*^9}},ExpressionUUID->"c5b542e7-1bc1-46f9-9cf3-\
8a4a2874ecef"],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"N\\\", \\\"[\\\", StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\"]\\\"}]\\) gives the numerical value of \\!\\(\\*StyleBox[\\\
\"expr\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"N\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) attempts to give a result with \\!\\(\\*StyleBox[\
\\\"n\\\", \\\"TI\\\"]\\)\[Hyphen]digit precision. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/N"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.661396597766536*^9},
 CellTags->
  "Info-b521dcfc-9df4-4393-b202-c38112e4badc",ExpressionUUID->"a6d1403b-a73c-\
4d23-9001-07bd7b6f9c67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Pi", ",", "30"}], "]"}]], "Input",
 CellChangeTimes->{{3.6061008195811996`*^9, 
  3.606100820216667*^9}},ExpressionUUID->"e982beaa-2876-4318-a217-\
2adf62571660"],

Cell[BoxData["3.1415926535897932384626433832795028841971693993751058151208`30.\
"], "Output",
 CellChangeTimes->{3.606100820634948*^9, 3.606101934933744*^9, 
  3.6613966012363067`*^9},ExpressionUUID->"e3baaad4-94e1-4e80-8851-\
b39b08b45d09"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Velika \[SHacek]tevila", "Subsection",
 CellChangeTimes->{{3.6061014417569532`*^9, 
  3.6061014436142783`*^9}},ExpressionUUID->"0330d605-38f9-49a8-9abf-\
e3cfeb37843d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "^", "200"}]], "Input",
 CellChangeTimes->{{3.6061013912174983`*^9, 3.6061013942042336`*^9}, {
  3.6061032028645144`*^9, 
  3.606103223627853*^9}},ExpressionUUID->"3568433e-108e-453b-ba1a-\
ae73d3678530"],

Cell[BoxData["1606938044258990275541962092341162602522202993782792835301376"],\
 "Output",
 CellChangeTimes->{
  3.606102012582222*^9, {3.6061032034419365`*^9, 3.6061032241302094`*^9}, 
   3.6613966027926493`*^9},ExpressionUUID->"f61ad23d-370b-40a0-a53a-\
93be3ec1cae9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"%", 
  RowBox[{"(*", 
   RowBox[{"zadnji", " ", "rezultat"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"%%", 
  RowBox[{"(*", 
   RowBox[{"predzadnji", " ", "rezultat", " ", "itd"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"%1", 
  RowBox[{"(*", 
   RowBox[{"rezultat", " ", "pod", " ", "out", " ", "1"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.606101647003051*^9, 3.6061016564949975`*^9}, {
  3.6061018629561987`*^9, 3.6061018921214314`*^9}, {3.606101978137149*^9, 
  3.606101978786663*^9}},ExpressionUUID->"ee12062d-2229-4d23-842a-\
be12ef45fd0b"],

Cell[BoxData["1606938044258990275541962092341162602522202993782792835301376"],\
 "Output",
 CellChangeTimes->{3.606101647546459*^9, 3.606101894117852*^9, 
  3.6061019385373273`*^9, 3.606101979458087*^9, 3.6061020137840953`*^9, 
  3.6061032311131754`*^9, 
  3.6613966056768584`*^9},ExpressionUUID->"fbca967c-7b1a-46fa-a833-\
2abda14dd81e"],

Cell[BoxData["1606938044258990275541962092341162602522202993782792835301376"],\
 "Output",
 CellChangeTimes->{3.606101647546459*^9, 3.606101894117852*^9, 
  3.6061019385373273`*^9, 3.606101979458087*^9, 3.6061020137840953`*^9, 
  3.6061032311131754`*^9, 
  3.661396605678877*^9},ExpressionUUID->"b74f033a-45a1-459b-9e45-\
bdb400743a85"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["x", "2"], "2"]], "Output",
 CellChangeTimes->{3.606101647546459*^9, 3.606101894117852*^9, 
  3.6061019385373273`*^9, 3.606101979458087*^9, 3.6061020137840953`*^9, 
  3.6061032311131754`*^9, 
  3.661396605680859*^9},ExpressionUUID->"ddc0d519-7887-4447-9a19-\
df775537c6b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%%", "//", "N", 
  RowBox[{"(*", 
   RowBox[{
   "nekatere", " ", "funkcije", " ", "imajo", " ", "kratke", " ", "oblike"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6061014469035997`*^9, 3.6061014827490993`*^9}, {
   3.6061015564103155`*^9, 3.6061016334799185`*^9}, 
   3.6061019937898693`*^9},ExpressionUUID->"b6676321-abcf-4601-8117-\
d8fe35274b89"],

Cell[BoxData["1.6069380442589903`*^60"], "Output",
 CellChangeTimes->{
  3.6061014502519803`*^9, {3.606101634033279*^9, 3.6061016375933666`*^9}, {
   3.606101985673519*^9, 3.606102017679866*^9}, 3.606103234833661*^9, 
   3.6613966139370317`*^9},ExpressionUUID->"0fc81e5b-7f29-4965-b160-\
91823ffe699e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Enakosti in prirejanje vrednosti", "Subtitle",
 CellChangeTimes->{{3.606103266258514*^9, 
  3.60610327289515*^9}},ExpressionUUID->"45a49e91-9b43-49d3-9ef8-\
fa9eedca4b72"],

Cell[CellGroupData[{

Cell["Razlika med = in :=", "Subsection",
 CellChangeTimes->{{3.606103538855541*^9, 
  3.606103543108405*^9}},ExpressionUUID->"7ac042c4-d5bb-4576-bd0d-\
f7a59a6c06cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", "1", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"prirejanje", " ", "vrednost"}], " ", "-", " ", 
    RowBox[{"se", " ", "tudi", " ", "takoj", " ", "izvede"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.606103278814931*^9, 3.606103398221689*^9}, {
  3.606103480605928*^9, 
  3.6061034851224194`*^9}},ExpressionUUID->"5bd51afd-81a6-4d4f-af17-\
ce11f3e85f48"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.606103361961579*^9, 3.606103398600938*^9}, 
   3.606103487615136*^9, 
   3.6613966227553444`*^9},ExpressionUUID->"3c69072b-f8b0-4550-a197-\
71404f78a88b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"b", ":=", 
  RowBox[{"2", " ", "a", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"delayed", " ", 
      RowBox[{"evaluation", ":", " ", 
       RowBox[{"izvede", " ", "se", " ", "\[SHacek]ele"}]}]}], ",", " ", 
     RowBox[{"ko", " ", "se", " ", "kli\[CHacek]e"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.606103437272436*^9, 
  3.606103467782658*^9}},ExpressionUUID->"dd37c008-bb6c-485f-8901-\
299ac77abeed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"a", "+", "b"}]}]], "Input",
 CellChangeTimes->{{3.606103405980184*^9, 3.6061034127199836`*^9}, {
  3.6061034625469413`*^9, 
  3.6061034748536944`*^9}},ExpressionUUID->"4c8438ba-78a0-412c-8ce2-\
de0cd7a53218"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.6061034129251223`*^9, 3.6061034896922364`*^9}, 
   3.661396625486438*^9},ExpressionUUID->"ee539b9c-22a3-4478-ad78-\
b847d62d0854"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "2"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"podpi\[CHacek]je", " ", "prepre\[CHacek]i", " ", "prikaz"}], 
   "*)"}]}], "\[IndentingNewLine]", "c"}], "Input",
 CellChangeTimes->{{3.6061034908570476`*^9, 
  3.6061035104997697`*^9}},ExpressionUUID->"33ca6cfe-67a3-4dd3-aad8-\
23e7a8952343"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.6061035111192274`*^9, 
  3.6613966475501204`*^9},ExpressionUUID->"70b32893-e0e6-46c6-8eb6-\
71f552c858ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["b"], "Input",
 CellChangeTimes->{
  3.606103521648301*^9},ExpressionUUID->"a0c75aff-d4dc-4f82-8f98-\
daa342c8185b"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.606103521835452*^9, 
  3.6613966523972216`*^9},ExpressionUUID->"17cb773c-3e20-4896-bfce-\
0c3857f01e15"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Brisanje prirejanja", "Subsection",
 CellChangeTimes->{{3.6061072631637316`*^9, 
  3.6061072737916756`*^9}},ExpressionUUID->"9c750316-394c-4533-8189-\
d4d1f2617a7d"],

Cell[CellGroupData[{

Cell[BoxData["c"], "Input",
 CellChangeTimes->{
  3.6061072805544815`*^9},ExpressionUUID->"6a39a7e8-de04-467d-ac44-\
1656b0f8f75e"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.606107281242992*^9, 
  3.661396655081974*^9},ExpressionUUID->"f4f17b92-cb68-4a00-82d8-\
2aaa90f19971"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"c", "=."}]], "Input",
 CellChangeTimes->{{3.6061072817573566`*^9, 
  3.6061072854069347`*^9}},ExpressionUUID->"23356890-9359-4c2d-972c-\
53ff8e997792"],

Cell[CellGroupData[{

Cell[BoxData["c"], "Input",
 CellChangeTimes->{
  3.606107286693863*^9},ExpressionUUID->"d60d749d-0819-485e-836f-\
eedb691cedec"],

Cell[BoxData["c"], "Output",
 CellChangeTimes->{3.6061072870421143`*^9, 
  3.6613966599817643`*^9},ExpressionUUID->"badd78b5-b9ad-433d-a994-\
0420c27ba3c9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Enakost ==", "Subsection",
 CellChangeTimes->{{3.6061035569689193`*^9, 
  3.606103559701863*^9}},ExpressionUUID->"a10850c8-4d82-447e-b007-\
d222ce8dc6f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5", "\[Equal]", "5"}]], "Input",
 CellChangeTimes->{{3.6061035650591707`*^9, 
  3.6061035663933764`*^9}},ExpressionUUID->"34ae822a-49f1-4f72-99c5-\
a2f9472c53a9"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6061035667698812`*^9, 
  3.6613966616259546`*^9},ExpressionUUID->"ca40af49-8d64-41bc-b87e-\
b192024ed48f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sqrt", "[", 
   SuperscriptBox["x", "2"], "]"}], "\[Equal]", "x"}]], "Input",
 CellChangeTimes->{{3.6061035702324114`*^9, 
  3.606103591168972*^9}},ExpressionUUID->"717ee7c0-e25d-4074-8634-\
b1c5306fd33c"],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   SuperscriptBox["x", "2"]], "\[Equal]", "x"}]], "Output",
 CellChangeTimes->{{3.6061035819974194`*^9, 3.606103591796386*^9}, 
   3.6613966635435443`*^9},ExpressionUUID->"c8c830a5-22d5-4717-84b2-\
aabf2c9f6a90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"enacba", "=", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    SuperscriptBox["x", "2"], "]"}], "\[Equal]", "x"}]}]], "Input",
 CellChangeTimes->{{3.6061036015913715`*^9, 
  3.6061036047636075`*^9}},ExpressionUUID->"8c9cba17-762a-4400-a01e-\
7e4c062b7f41"],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   SuperscriptBox["x", "2"]], "\[Equal]", "x"}]], "Output",
 CellChangeTimes->{3.6061036058703938`*^9, 
  3.66139666562614*^9},ExpressionUUID->"d6f059f8-472c-4721-9823-00ab86d55f42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"enacba", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"x", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6061036076836905`*^9, 
  3.6061036294323034`*^9}},ExpressionUUID->"49351a34-daa8-48c0-be9a-\
e53c638a1e1e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6061036130090084`*^9, 3.606103629981704*^9}, 
   3.6613966687788687`*^9},ExpressionUUID->"d8c78770-96ae-4c46-b167-\
fdfbf1125e01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"True", "===", "True"}]], "Input",
 CellChangeTimes->{{3.606103774147753*^9, 
  3.606103785550068*^9}},ExpressionUUID->"42176845-15a7-452e-97cc-\
a9fdddcd641d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.606103781503186*^9, 3.6061037863336425`*^9}, 
   3.661396678066744*^9},ExpressionUUID->"4a7dcde0-9d60-40b3-8291-\
6d4c881ed5d2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Enakost izrazov ===", "Subsection",
 CellChangeTimes->{{3.6061038251771107`*^9, 3.6061038295264807`*^9}, {
  3.6061038631951632`*^9, 
  3.60610386443802*^9}},ExpressionUUID->"55ba6754-44b9-4f2b-8c19-\
e63d8ee2fda8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sqrt", "[", 
     SuperscriptBox["x", "2"], "]"}], "===", "x"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"x", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.606103846198903*^9, 
  3.6061038514166045`*^9}},ExpressionUUID->"62f11d13-1afd-4114-92c4-\
95091a604f23"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.6061038520590563`*^9, 
  3.6613966815699434`*^9},ExpressionUUID->"a2e876ee-84b2-4a36-b263-\
b84407e1ba81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"x", "===", "x"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"x", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6061038585717163`*^9, 
  3.6061038607013597`*^9}},ExpressionUUID->"1116eb9e-5b5f-4bd2-8200-\
287ad36112bf"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.606103860956558*^9, 
  3.6613966846426105`*^9},ExpressionUUID->"10c7b16e-e856-4aa7-9d04-\
7ff36f08e23a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pravila in zamenjave", "Subtitle",
 CellChangeTimes->{{3.6061043596499023`*^9, 
  3.606104363970395*^9}},ExpressionUUID->"dcbad1d4-cedb-405d-962f-\
34bc36b63eae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zamenjaj", "=", 
  RowBox[{"\[Omega]", "\[Rule]", "1", " ", 
   RowBox[{"(*", 
    RowBox[{"priredi", " ", "zamenjavo"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6061043913353586`*^9, 3.6061045435090528`*^9}, {
  3.606104586408537*^9, 
  3.606104601305173*^9}},ExpressionUUID->"500d7fcd-601d-432a-a2a4-\
c39afea87629"],

Cell[BoxData[
 RowBox[{"\[Omega]", "\[Rule]", "1"}]], "Output",
 CellChangeTimes->{
  3.661396697493657*^9},ExpressionUUID->"55d3b98a-6c22-4da8-b425-\
2f45bb671726"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Omega]", "\[Rule]", "1"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"\[Omega]", ":>", 
    RowBox[{"1", " ", "zakasnjena", " ", "zamenjava"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.606104688895725*^9, 
  3.606104729023776*^9}},ExpressionUUID->"cccf3b68-8535-40ee-b501-\
402570ed3924"],

Cell[BoxData[
 RowBox[{"\[Omega]", "\[Rule]", "1"}]], "Output",
 CellChangeTimes->{
  3.661396699216235*^9},ExpressionUUID->"dc6822d7-24fb-4146-a02d-\
574c2c72f03f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[Omega]"], "Input",
 CellChangeTimes->{{3.6061045004793215`*^9, 3.6061045023696747`*^9}, {
  3.606104607071596*^9, 
  3.6061046073958225`*^9}},ExpressionUUID->"0aeaa867-fc70-457e-84bc-\
7d124fdac377"],

Cell[BoxData["\[Omega]"], "Output",
 CellChangeTimes->{3.606104502587823*^9, 3.6061046078141365`*^9, 
  3.606104730616945*^9, 
  3.661396702099535*^9},ExpressionUUID->"ac186e35-c369-4434-a4ed-\
c4221c6118a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Replace", "[", 
   RowBox[{"\[Omega]", ",", "zamenjaj"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"ReplaceAll", " ", "-", " ", 
    RowBox[{
    "zamenjuje", " ", "dokler", " ", "se", " ", "ena\[CHacek]ba", " ", 
     "\[SHacek]e", " ", "spreminja"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6061046086360226`*^9, 3.606104618251251*^9}, {
  3.606104754629696*^9, 
  3.6061047703245573`*^9}},ExpressionUUID->"5dc07ca4-5be4-40a5-a18b-\
94612ec11fd7"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.606104618761614*^9, 3.606104731535579*^9, 
  3.6613967040922136`*^9},ExpressionUUID->"b3209676-3a0f-42da-abea-\
78b0f54efcda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Omega]", "/.", "zamenjaj", " ", 
  RowBox[{"(*", 
   RowBox[{"kratka", " ", "oblika", " ", "ReplaceAll"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6061046215595026`*^9, 3.6061046517020063`*^9}, {
  3.606105417852212*^9, 
  3.60610542115359*^9}},ExpressionUUID->"c14e38bb-981e-40a4-ac09-\
ab0234814706"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.606104632474465*^9, 3.606104732195049*^9, 
  3.6613967114919124`*^9},ExpressionUUID->"5b6ebe1a-896c-4d2d-9700-\
23122598ec61"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Patterns / vzorci", "Subtitle",
 CellChangeTimes->{{3.6061054425186024`*^9, 
  3.6061054613874407`*^9}},ExpressionUUID->"94687cb6-a037-401d-b050-\
bea65e5663dc"],

Cell["\<\
_ kateri koli izraz

Ne bomo obravnavali:
_ _ katera koli sekvenca izrazov
_ _ _ ni\[CHacek] ali ve\[CHacek] argumentov

x_ kateri koli izraz imenovan x

Ne bomo obravnavali:
x_h kateri koli izraz imenovan x z Head[x]==h\
\>", "Text",
 CellChangeTimes->{{3.6061054738222814`*^9, 3.606105594734315*^9}, {
  3.6061056729895935`*^9, 
  3.606105716197878*^9}},ExpressionUUID->"c8e49172-87e2-4f3a-ae49-\
9cf0b4c052c4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Head", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", "x", "]"}]}], "Input",
 CellChangeTimes->{{3.6061056648047667`*^9, 3.606105681527299*^9}, {
  3.6061057213855605`*^9, 
  3.606105723951413*^9}},ExpressionUUID->"00b2585d-a01e-4698-a425-\
d02213b5a9ae"],

Cell[BoxData["Integer"], "Output",
 CellChangeTimes->{{3.6061056678101034`*^9, 3.60610568198081*^9}, 
   3.606105724453758*^9, 
   3.6613967566367264`*^9},ExpressionUUID->"f2639845-3908-4882-9211-\
e2ba410ec219"],

Cell[BoxData["Symbol"], "Output",
 CellChangeTimes->{{3.6061056678101034`*^9, 3.60610568198081*^9}, 
   3.606105724453758*^9, 
   3.661396756639732*^9},ExpressionUUID->"7befcee8-fc4b-4d07-8aeb-\
defd56136221"]
}, Open  ]],

Cell["Preprosta funkcija", "Text",
 CellChangeTimes->{{3.606105902847207*^9, 
  3.606105905620981*^9}},ExpressionUUID->"e96d41af-6959-4ec4-b667-\
aa86580af819"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   SuperscriptBox["2", "x"]}]}]], "Input",
 CellChangeTimes->{{3.606105763934965*^9, 3.60610579276886*^9}, {
  3.6061061226726437`*^9, 
  3.606106128704933*^9}},ExpressionUUID->"43d308d9-8ca1-462c-ba41-\
912382657a9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.6061058245943804`*^9, 
  3.6061058270396743`*^9}},ExpressionUUID->"202f5263-ae33-4d5e-9919-\
a4139ada1e24"],

Cell[BoxData["32"], "Output",
 CellChangeTimes->{3.606105827253838*^9, 3.606106130018858*^9, 
  3.6613967677526655`*^9},ExpressionUUID->"be270845-10d9-4b3e-81c1-\
d8dcae40c9c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "k", "]"}]], "Input",
 CellChangeTimes->{{3.6061061800114965`*^9, 
  3.6061061831367173`*^9}},ExpressionUUID->"b52c4cbe-7605-4569-abb4-\
a1ca40eca6a8"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["2", "k"], "+", 
  SuperscriptBox["k", "2"]}]], "Output",
 CellChangeTimes->{3.606106183679096*^9, 
  3.661396769873674*^9},ExpressionUUID->"83928800-1a87-4b5b-8c9e-\
b4ace36ec421"]
}, Open  ]],

Cell["Tako funkcij ne definiramo", "Text",
 CellChangeTimes->{{3.606105908941337*^9, 
  3.606105926440733*^9}},ExpressionUUID->"6f2b903f-0995-42f8-88c0-\
516d486de3aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "x", "]"}], ":=", "x"}]], "Input",
 CellChangeTimes->{{3.606105778957292*^9, 3.60610581571109*^9}, 
   3.6061058478228345`*^9},ExpressionUUID->"d9e3b368-2e23-4010-861f-\
d197b0f37efc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.6061058214724236`*^9, 
  3.606105860889966*^9}},ExpressionUUID->"64a6cc16-29cb-4f37-914e-\
e8580fd722a1"],

Cell[BoxData[
 RowBox[{"h", "[", "4", "]"}]], "Output",
 CellChangeTimes->{{3.6061058305878396`*^9, 3.6061058611761775`*^9}, 
   3.606105932214861*^9, 3.606106133524358*^9, 
   3.661396779429158*^9},ExpressionUUID->"cdddbd71-8f05-4d3d-a64a-\
28ad8a26e065"]
}, Open  ]],

Cell["\<\
Funkcija ve\[CHacek] spremenljivk z neobvezno spremenljivko privzete vrednosti\
\>", "Text",
 CellChangeTimes->{{3.6061059340681686`*^9, 3.6061059433256598`*^9}, {
  3.606105979414315*^9, 
  3.60610600295233*^9}},ExpressionUUID->"5b7671d2-35ff-4909-ae19-\
49c57c8e8501"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"a_", ",", "b_", ",", 
    RowBox[{"c_:", "5"}]}], "]"}], ":=", 
  RowBox[{"a", "+", "b", "+", "c"}]}]], "Input",
 CellChangeTimes->{{3.606105946297318*^9, 
  3.6061059670732117`*^9}},ExpressionUUID->"0f23520b-87be-4009-8288-\
312fa9fff70d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"1", ",", "2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.6061059686858816`*^9, 
  3.60610597660594*^9}},ExpressionUUID->"fbf5e581-a17f-4178-ac27-\
de6c156f01b0"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{{3.606105972332841*^9, 3.606106005638208*^9}, 
   3.6061061359640903`*^9, 
   3.6613967992795763`*^9},ExpressionUUID->"4a62d1f1-50b9-4d38-84a4-\
ba3810439ff9"]
}, Open  ]],

Cell["Uporaba zamenjav", "Text",
 CellChangeTimes->{{3.6061060403770475`*^9, 
  3.6061060427497654`*^9}},ExpressionUUID->"20f42e75-eadc-4f6c-81c0-\
a6e9cde20d91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "k", "]"}]], "Input",
 CellChangeTimes->{{3.6061061608159237`*^9, 
  3.606106164924198*^9}},ExpressionUUID->"e6b48728-ec2b-447c-846a-\
6c210e688a38"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["2", "k"], "+", 
  SuperscriptBox["k", "2"]}]], "Output",
 CellChangeTimes->{{3.6061061654315305`*^9, 3.6061061892736917`*^9}, 
   3.661396802239904*^9},ExpressionUUID->"f07a1ea8-808f-4dd1-af18-\
7afee933b005"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "k", "]"}], "/.", 
  RowBox[{"x", "\[Rule]", "4"}]}]], "Input",
 CellChangeTimes->{{3.6061060346875277`*^9, 3.60610606317587*^9}, {
  3.6061061451117873`*^9, 
  3.606106219540786*^9}},ExpressionUUID->"837ecb7b-eb18-4fc7-bc8f-\
d3daa328f93c"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["2", "k"], "+", 
  SuperscriptBox["k", "2"]}]], "Output",
 CellChangeTimes->{{3.606106036804971*^9, 3.6061060564150305`*^9}, {
   3.606106137621271*^9, 3.6061061534587092`*^9}, {3.606106193240513*^9, 
   3.6061062198069496`*^9}, 
   3.6613968081749835`*^9},ExpressionUUID->"2befab07-d18d-4b0d-8aec-\
f95040ba9b94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "k", "]"}], "/.", 
  RowBox[{"k", "\[Rule]", "4"}]}]], "Input",
 CellChangeTimes->{{3.606106210252207*^9, 
  3.6061062142169075`*^9}},ExpressionUUID->"c5ca046a-0731-41cd-8268-\
fbaf0373220f"],

Cell[BoxData["32"], "Output",
 CellChangeTimes->{{3.606106214436062*^9, 3.606106220866707*^9}, 
   3.6613968432645407`*^9},ExpressionUUID->"10f6f1dc-e966-4abb-a7bc-\
fd650bd13c78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "k", "]"}], "/.", 
  RowBox[{
   SuperscriptBox["k", "2"], "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.606106225748176*^9, 
  3.606106231444292*^9}},ExpressionUUID->"2f67ebec-98a1-460a-b4ee-\
129c79ea52fd"],

Cell[BoxData[
 SuperscriptBox["2", "k"]], "Output",
 CellChangeTimes->{3.6061062318924007`*^9, 
  3.6613968460178885`*^9},ExpressionUUID->"e9a92ba1-e423-4c12-a8ef-\
1e8b3d481f7d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Seznami", "Subtitle",
 CellChangeTimes->{{3.606107059227518*^9, 
  3.606107079756281*^9}},ExpressionUUID->"85486743-7e37-46fc-8938-\
03c796e52844"],

Cell["Preprosti seznam", "Text",
 CellChangeTimes->{{3.6061072028080554`*^9, 
  3.606107206918998*^9}},ExpressionUUID->"df62daec-d26f-4403-b9d8-\
20cc5146f9ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seznam", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", "4"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.606107208798266*^9, 
  3.6061072148555927`*^9}},ExpressionUUID->"a19e2fa4-8047-49b0-8472-\
bf95b10eac10"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.6061072154620223`*^9, 
  3.6613968499826384`*^9},ExpressionUUID->"b7867d66-8a82-4f0a-8e67-\
ef3ac205a549"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"a", "=."}], "\[IndentingNewLine]", 
 RowBox[{"b", "=."}]}], "Input",
 CellChangeTimes->{{3.606107305115315*^9, 
  3.6061073132362194`*^9}},ExpressionUUID->"5eb96504-c5f4-4f92-94f5-\
1a3c04352a90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"podatki", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "1"}], ",", 
    RowBox[{"b", "\[Rule]", "2"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.606107219132614*^9, 
  3.6061072298392954`*^9}},ExpressionUUID->"454fa910-7fbe-46fb-8a5b-\
1f7914ed713d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6061072305047555`*^9, 3.606107314832336*^9, 
  3.661396855109485*^9},ExpressionUUID->"08979879-e2ac-480e-a7d1-\
58866e3ca80c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Input",ExpressionUUID->"6714bffd-63f0-44b1-803d-1bbe090449b7"],

Cell[BoxData[
 RowBox[{"5", "+", "a", "+", "b"}]], "Output",
 CellChangeTimes->{3.6061073311910143`*^9, 
  3.661396856511645*^9},ExpressionUUID->"1938606a-1301-475d-ab8a-\
876063ae9635"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"a", ",", "b"}], "]"}], "/.", "podatki"}]], "Input",
 CellChangeTimes->{{3.6061072333732157`*^9, 3.6061072390967107`*^9}, {
  3.606107321620163*^9, 
  3.6061073254048734`*^9}},ExpressionUUID->"a154d02f-bf9c-4ae9-96a6-\
c6a0206d391e"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{
  3.6061072397231426`*^9, {3.6061073175632973`*^9, 3.606107332989874*^9}, 
   3.66139685791777*^9},ExpressionUUID->"1845c96b-fcd1-483e-8ecf-\
7f8c2cb6fa2f"]
}, Open  ]],

Cell["Seznam vrednosti", "Text",
 CellChangeTimes->{{3.606107344115766*^9, 
  3.606107355148691*^9}},ExpressionUUID->"eed2325a-83d6-4f19-ae0e-\
7fc8868f6bb0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"f", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.606107098621522*^9, 
  3.6061071411534524`*^9}},ExpressionUUID->"9ad8bbf0-0171-484e-8462-\
6f9feafce5ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "8", ",", "17", ",", "32", ",", "57", ",", "100", ",", "177", ",",
    "320", ",", "593", ",", "1124"}], "}"}]], "Output",
 CellChangeTimes->{{3.606107112445946*^9, 3.6061071444177933`*^9}, {
   3.606107356815897*^9, 3.606107363368534*^9}, 
   3.661396860882264*^9},ExpressionUUID->"2767e056-466a-40d2-ab40-\
2c3b1b570638"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", "+", "i"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6061071474379215`*^9, 
  3.6061071483245516`*^9}},ExpressionUUID->"6e9e3103-9158-4cbc-80c7-\
3f1bbb72e9b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"1", "+", "x"}]], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "2"]}], ",", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"2", "+", "x"}]], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "+", "x"}], ")"}], "2"]}], ",", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"3", "+", "x"}]], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"3", "+", "x"}], ")"}], "2"]}], ",", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"4", "+", "x"}]], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", "x"}], ")"}], "2"]}], ",", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"5", "+", "x"}]], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"5", "+", "x"}], ")"}], "2"]}], ",", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"6", "+", "x"}]], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"6", "+", "x"}], ")"}], "2"]}], ",", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"7", "+", "x"}]], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"7", "+", "x"}], ")"}], "2"]}], ",", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"8", "+", "x"}]], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"8", "+", "x"}], ")"}], "2"]}], ",", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"9", "+", "x"}]], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"9", "+", "x"}], ")"}], "2"]}], ",", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"10", "+", "x"}]], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"10", "+", "x"}], ")"}], "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.606107148798908*^9, 3.606107357773575*^9, 
  3.661396863325326*^9},ExpressionUUID->"5434b85d-bb73-4d18-8249-\
681a9349d96d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", 
   RowBox[{"[", "1", "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"prvi", " ", "element"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6061071588452845`*^9, 
  3.6061071745123672`*^9}},ExpressionUUID->"c4543714-a88a-482a-9f26-\
70a1eaca185b"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["2", 
   RowBox[{"1", "+", "x"}]], "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "x"}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{3.6061071671434793`*^9, 3.606107359606862*^9, 
  3.661396866319723*^9, 
  3.6613971925703173`*^9},ExpressionUUID->"4ab45e10-9756-4dcb-b90a-\
1f92975617f4"]
}, Open  ]],

Cell["Seznam seznama", "Text",
 CellChangeTimes->{{3.6061073940889606`*^9, 3.606107397001461*^9}, {
  3.6613973877949324`*^9, 
  3.6613973886196175`*^9}},ExpressionUUID->"140b6377-aaa1-43bf-ad1a-\
bed6751d2108"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"f", "[", "i", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.606107369151679*^9, 
  3.6061073767610903`*^9}},ExpressionUUID->"27c2c609-733e-4742-a0c9-\
fe94d7a07287"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "57"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "177"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "320"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "593"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "1124"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6061073773715086`*^9, 
  3.661397390169798*^9},ExpressionUUID->"8511aa52-72f7-4bf9-8143-\
8d85245f9672"]
}, Open  ]],

Cell["Vzami od za\[CHacek]etka do konca vsakega drugega:", "Text",
 CellChangeTimes->{{3.661397427822212*^9, 
  3.6613974498551626`*^9}},ExpressionUUID->"27d513b9-e773-4b0c-b8b8-\
6f403135986e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"data", ",", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}], ",", " ", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.661397402755887*^9, 
  3.6613974247845974`*^9}},ExpressionUUID->"14d3be5d-9d41-4fdc-9a07-\
93046d39fedf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "57"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "177"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "593"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.661397414424324*^9, 
  3.6613974515646152`*^9},ExpressionUUID->"9d0b3a74-34db-4adb-8e64-\
adbc46949bc2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.6061073843734818`*^9, 
  3.60610738981433*^9}},ExpressionUUID->"bba64775-30fe-4986-8d9c-\
a2688c813782"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "3"},
     {"2", "8"},
     {"3", "17"},
     {"4", "32"},
     {"5", "57"},
     {"6", "100"},
     {"7", "177"},
     {"8", "320"},
     {"9", "593"},
     {"10", "1124"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6061073900525255`*^9, 3.606107405546792*^9}, 
   3.6613974532411413`*^9},ExpressionUUID->"9608240b-0ab7-4ed9-9bca-\
0d183819dcbd"]
}, Open  ]],

Cell["Vnos matrike", "Text",
 CellChangeTimes->{{3.606107412450429*^9, 
  3.6061074172475758`*^9}},ExpressionUUID->"5460b0cc-70ed-4df1-bebc-\
92efd0fbdda7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M", "=", 
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"0", "1", "0"},
     {"0", "0", "1"}
    }], "\[NoBreak]", ")"}]}]], "Input",
 CellChangeTimes->{{3.6061074183413105`*^9, 
  3.6061074451654253`*^9}},ExpressionUUID->"4bdcd823-2ace-4b99-bd48-\
ef9707070a2c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.606107446139124*^9, 
  3.661397459693634*^9},ExpressionUUID->"0aa62cf3-61a1-43d0-a048-\
b0a37bf9904f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "M", "]"}]], "Input",
 CellChangeTimes->{{3.606107450039891*^9, 
  3.606107454096125*^9}},ExpressionUUID->"a86b2d23-b0f5-4713-9a76-\
9cf0bf60cb2f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"0", "1", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.606107454602482*^9, 
  3.6613974621091366`*^9},ExpressionUUID->"fddf234f-49b9-4f22-86bc-\
ddeddb3f6591"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", "M", "]"}]], "Input",
 CellChangeTimes->{{3.6061074553850355`*^9, 
  3.606107462020984*^9}},ExpressionUUID->"790437f7-4cc0-4c4a-8fb1-\
8d5204c2c00f"],

Cell["\<\
\\left(
\\begin{array}{ccc}
 1 & 0 & 0 \\\\
 0 & 1 & 0 \\\\
 0 & 0 & 1 \\\\
\\end{array}
\\right)\
\>", "Output",
 CellChangeTimes->{3.606107462441264*^9, 
  3.6613974664585543`*^9},ExpressionUUID->"f8a0e673-b6ea-43c4-979a-\
4f479889185a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nekatere pogosto uporabljene funkcije", "Subtitle",
 CellChangeTimes->{{3.6061030267777104`*^9, 
  3.6061030427004786`*^9}},ExpressionUUID->"43623bb2-6e24-43f4-b77f-\
ac62a157e947"],

Cell[CellGroupData[{

Cell["Integriranje in odvajanje", "Subsection",
 CellChangeTimes->{{3.606107636936472*^9, 
  3.6061076462587967`*^9}},ExpressionUUID->"2bb18477-abbc-4ae4-baa2-\
d6c971435b7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{"x", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.606107608883432*^9, 
  3.6061076161764956`*^9}},ExpressionUUID->"552db1bb-1f93-4dfb-b34c-\
dc64e00b5514"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["x", "2"], "2"]], "Output",
 CellChangeTimes->{{3.606107617065134*^9, 3.606107647848024*^9}, 
   3.661397471567213*^9},ExpressionUUID->"0d4a4134-7cc5-4522-8d66-\
9b3a359cc60a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", "x"}], " ", "+", "b"}], ",", "x"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"totalni", " ", "odvod"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6061076221092005`*^9, 3.6061077020107875`*^9}, {
   3.6613975105959406`*^9, 3.6613975500578985`*^9}, {3.661397607918442*^9, 
   3.661397610302705*^9}, {3.6613976434512143`*^9, 3.6613976443078227`*^9}, 
   3.661397772046196*^9},ExpressionUUID->"2605aeac-0fc0-468b-b6b4-\
eb41bcc65cc7"],

Cell[BoxData[
 RowBox[{"a", "+", 
  RowBox[{"x", " ", 
   RowBox[{"Dt", "[", 
    RowBox[{"a", ",", "x"}], "]"}]}], "+", 
  RowBox[{"Dt", "[", 
   RowBox[{"b", ",", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.6061076712215548`*^9, 3.6061077028834267`*^9}, 
   3.6613974765340357`*^9, {3.6613975137944593`*^9, 3.6613975503852034`*^9}, 
   3.6613976109907284`*^9, 3.6613976446730824`*^9, 
   3.661397772773763*^9},ExpressionUUID->"17f1614f-aa5b-4c1b-9a03-\
899558958da1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", "x"}], " ", "+", "b"}], ",", "x"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"parcialni", " ", "odvod"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6061076796490316`*^9, 3.6061076841496615`*^9}, {
   3.661397525029786*^9, 3.6613975253670406`*^9}, 
   3.6613979872550797`*^9},ExpressionUUID->"c5d86372-b7c3-4846-af20-\
b054d5675bc7"],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{{3.6061076848131456`*^9, 3.6061077039580693`*^9}, 
   3.6613974840479517`*^9, {3.661397525931495*^9, 3.6613975530129304`*^9}, 
   3.661397988110778*^9},ExpressionUUID->"f3ad1295-07b6-4026-bf01-\
54d67838efe3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["a", "x"], " ", "+", "b"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "3"}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"parcialni", " ", "odvod", " ", "vi\[SHacek]je", " ", "stopnje"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.606107708162013*^9, 3.6061077249239607`*^9}, {
  3.6613979995961933`*^9, 
  3.661398029648658*^9}},ExpressionUUID->"b970eca6-f8f9-48b4-b310-\
06c3e9d6ab5c"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", "x"], " ", 
  SuperscriptBox[
   RowBox[{"Log", "[", "a", "]"}], "3"]}]], "Output",
 CellChangeTimes->{
  3.6061077254413276`*^9, 3.6613974977147813`*^9, {3.6613980073690643`*^9, 
   3.6613980299788833`*^9}},ExpressionUUID->"39591c02-b1fc-43d0-8a3d-\
d96129ac08c8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Uporabne funkcije", "Subsection",
 CellChangeTimes->{{3.6061077973568482`*^9, 
  3.6061078043064923`*^9}},ExpressionUUID->"f39a4ebe-a9b5-41f2-af44-\
ad3a88583de6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "t_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"t", "<", "5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "t"}], ",", 
       RowBox[{"t", "\[GreaterEqual]", "5"}]}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.606107833499774*^9, 
  3.606107908121781*^9}},ExpressionUUID->"0057952e-9489-4e9d-8f51-\
16f9628fcf61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"h", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6061079365894604`*^9, 
  3.6061079455188603`*^9}},ExpressionUUID->"520e4e75-27be-476c-a8d9-\
43a8623ffd0f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAmIQPbcuic0wpdsORs+LemMVrpBpD6Nv+nYVKShUwuly
90g+VoVOOO12xCHmu/xMOL22yaT5g/xKOP0wcZ3YW/mdcLo6MDvhtfxJOM35
c/bJHL1bcLrwUH3Pm6LHcFpvyeSLW9a9hNNP/TJk7lt8gNPTpdpkFyZ8htOW
RTvWM5/5BqcPX58dkK/+C04b9vyzk/D8C6fdn1ndNwhncIDRz3W3uX55wwin
q/90Gu+pYobT7IIvMkO0WOE061lWd+69bHD697m1OZMKOeD00/B1knJyXHDa
sSMv98Rabjg99d8OTud4XjgdLXPY585nPjjNc0D7jVKoAJxONV30NVJHEE6X
11UEKXxF0K2vJl8+d04ITrdcf3rq90Uk+oj5IY2rCLpp3u0NTbcRdF2Qcp/Z
CwRdtmuTxzxGYTid0XVxb64Jgk4vV946yxxBp6WUrjluhaBT7CRnKzoi6MRP
CRVXfRF0VNQHI9t0BO2jxb+CZxaCjjyRv0JzLoJOS7uwwm0Bgm5YNHFlwzIE
vUVKZPWXTQhahlty3Z3TCFpzZeW6n+cQtJn7rXVilxB0QPPs9QE3EHTLb9mN
R54g6Ikz6zY+fI6g55nf3/jvFYLeUbxgk8VHBH1UkHFz6BcEfWl94uai7wj6
vu+hzf2/EPTyB09F9vxB0ADIoJ7x
      "]], LineBox[CompressedData["
1:eJwtz11IFXYABfCbtyyiouyv05vatb80i1qzKFZRnTJIsxqV26qN5c2rSZDC
DAbDh1mQfdmXkQSJUulDZVFLretyh7Sceq/F2hpsaw/NFLWPa85yYTmj83D4
cV4OnLhtuRsyQxwOR9Jw3rl5qqsnyWkgGZrQfq1juEtOvrOy2jnaQNLtrah2
jzWQnB0SWrNkvIHkovKsmi0TDSTT/vqw9kSEgaTnu321V6IMJHMiu2rbog0k
96Wdvz7GGkj+6J/ly59jINm8o8h3aq6B5IMxz3w18w0kgysv1wUXG0jG30y8
6U02kCyqWsA1HgPJ6ekJniqvgWR9mCtkQraBZPDbN0l3c4b33su0FY1N6/OH
/7yX0b+vv/t5iYHkRcfOv9MDBpItG88O7loYDkkGcg/NckZA8uqOAvgfRkAy
NnXZJznXPoBk0tBXe8ryIyHpffDTi+ufRUFyacHuao/bBcnjub114zpdkHz0
fUVHWf0USPZk3vDeKoyGZHBn2OiAJwaSl1JaB7Nmx0KyI/vjBc7+WEi6LvxR
XBiYCsk96d+cCaS6IflqMKoo9YYbkgl1Jada4uMgOT/j9qeT9sdBkqfDI/39
cZBMYPiBdV9Og+TaUU9ifqmfBsngn+0NzTMtJHNPF03ef8RC0j8i/vnqYxaS
M7f7WsYVW0i2J3YWHD1pIbmpCcGSUgvJFS/6/JUXLCQjkrfsbWyykMyrCnr2
NltI3gsrXJLcaiF58OEP/7a2WUg68sZn3P/NQrK7lMse/WMhucr5xZRzjy0k
z2U/fZnZaSG5dZ7rUle3heSvP+dF9/ZaSCZ+NHbgap+F5OHi8vu7+i0kU74O
HBgYsJCsbMjI8r22kBw54/Xy/EELSc/hozFL31pI1vdN/29oyELyfxQp8wo=

      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {-9.999999795918367, 4.996811224489796}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6061079459911637`*^9, 3.6061081522627244`*^9, {3.6613980381822205`*^9, 
   3.6613980432735467`*^9}},ExpressionUUID->"570f37b4-5753-4c34-be6b-\
ed1767dc942a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Re\[SHacek]evanje ena\[CHacek]b", "Subtitle",
 CellChangeTimes->{{3.6061080072522078`*^9, 
  3.60610800975394*^9}},ExpressionUUID->"5207843b-5fdf-4567-93f7-\
8ff45d796a28"],

Cell[CellGroupData[{

Cell["Algebrajske ena\[CHacek]be", "Subsection",
 CellChangeTimes->{{3.606108156322601*^9, 
  3.606108164365611*^9}},ExpressionUUID->"dc73b888-4f0e-4542-9535-\
e47bd065ff71"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"x", "+", "y"}], ")"}], "2"], "]"}]], "Input",
 CellChangeTimes->{{3.606103045556531*^9, 
  3.606103055170434*^9}},ExpressionUUID->"934ed2c7-ef25-4f9b-8871-\
e617126893f3"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "2"], "+", 
  RowBox[{"2", " ", "x", " ", "y"}], "+", 
  SuperscriptBox["y", "2"]}]], "Output",
 CellChangeTimes->{3.606103055499653*^9, 3.606107806581106*^9, 
  3.6061081680145025`*^9, 
  3.6613980495256624`*^9},ExpressionUUID->"ac22a710-c720-46df-b03b-\
f7b747bb5ebf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.6061030615569572`*^9, 
  3.6061030698338437`*^9}},ExpressionUUID->"df88dda9-7283-44d7-b72f-\
cf76f9260259"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"x", "+", "y"}], ")"}], "2"]], "Output",
 CellChangeTimes->{3.606103070053584*^9, 3.6061078075738273`*^9, 
  3.606108168816092*^9, 
  3.66139805080964*^9},ExpressionUUID->"fa1afe0c-bab1-4b26-b8d6-9bf0af0bf1c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "^", "3"}], "+", "1"}], ")"}]}], ",", "x"}], "]"}], ",", 
   "x"}], "]"}]], "Input",ExpressionUUID->"6547cc4a-22a8-4414-a72c-\
dabbf7c39508"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", "x"}]}], 
   RowBox[{"6", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "x", "+", 
      SuperscriptBox["x", "2"]}], ")"}]}]], "+", 
  FractionBox["2", 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "x"}]}], ")"}], "2"]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.6061082179893045`*^9, 
  3.66139805186941*^9},ExpressionUUID->"738ca559-21fc-413d-b284-af8b8584dcc4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "^", "3"}], "+", "1"}], ")"}]}], ",", "x"}], "]"}], ",",
     "x"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6061081877520914`*^9, 
  3.6061082099340067`*^9}},ExpressionUUID->"415e9341-318c-4966-ba3e-\
3980a3a3eaf0"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "+", 
   SuperscriptBox["x", "3"]}]]], "Output",
 CellChangeTimes->{{3.6061082113740253`*^9, 3.6061082193662624`*^9}, 
   3.6613980560726385`*^9},ExpressionUUID->"1cec9b07-acd4-4c96-bed3-\
d30d9531f4a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", "x"}], "\[Equal]", "1"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6061030755129766`*^9, 3.6061031087436724`*^9}, {
  3.6061031684828434`*^9, 
  3.6061031704452114`*^9}},ExpressionUUID->"fa556c0f-c90b-42e3-a4ff-\
6cb86959517e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["5"]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.606103094980734*^9, 3.606103171091669*^9, 
  3.606107810981251*^9, 3.6061080131314106`*^9, 3.6061082228607492`*^9, 
  3.661398057160418*^9},ExpressionUUID->"fe167ad4-be2d-4808-82d6-\
031d45883a7a"]
}, Open  ]],

Cell["Obravnanjve re\[SHacek]itev", "Text",
 CellChangeTimes->{{3.60610802785489*^9, 3.606108050917975*^9}, {
  3.60610823142875*^9, 
  3.6061082320241814`*^9}},ExpressionUUID->"93847ebb-4e01-4bff-949c-\
0ae9a186de26"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", "sol"}]], "Input",
 CellChangeTimes->{{3.6061080365066977`*^9, 
  3.6061080421146684`*^9}},ExpressionUUID->"65f1e1df-d0bc-4e05-a505-\
5faec40313eb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SqrtBox["5"]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SqrtBox["5"]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.606108042578416*^9, 3.6061080543045487`*^9}, 
   3.6061082331019382`*^9, 
   3.661398060119695*^9},ExpressionUUID->"1ed6a074-1579-47c5-957c-\
1db2a30005c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", 
  RowBox[{"sol", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.606108055907686*^9, 
  3.60610806132313*^9}},ExpressionUUID->"28031c24-f5f0-4597-841c-\
7e161bb4eb7e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "-", 
    SqrtBox["5"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.6061080618024616`*^9, 3.6061082339795623`*^9, 
  3.6613980617310457`*^9},ExpressionUUID->"eff4e361-b0d3-40f1-a80b-\
9a009a1a2174"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Iskanje ni\[CHacek]el", "Subsection",
 CellChangeTimes->{{3.6061101466832457`*^9, 
  3.606110152106072*^9}},ExpressionUUID->"79c343fd-b002-455d-b4e9-\
7399ccec1d9a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], "+", 
   RowBox[{"Exp", "[", "x", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"k", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.606110230451209*^9, 
  3.6061102656074243`*^9}},ExpressionUUID->"fdddded0-f72e-4c44-bf07-\
00b65b194b8a"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
fb9HQ///fxNJ4OKUVz+iof8HqEhVhw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {-0.8102206121539498, 8.29835295653927}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6061102557838583`*^9, 3.606110266151814*^9}, 
   3.66139806879292*^9},ExpressionUUID->"1c377547-73bd-4bbb-a88b-\
df4753a17c8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "+", 
     RowBox[{"Exp", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6061102162900543`*^9, 
  3.606110217742112*^9}},ExpressionUUID->"83bd9ac5-4e20-4aa8-bccc-\
1e39165d8d93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", 
   RowBox[{"-", "0.5885327439818611`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6061102182792287`*^9, {3.606110270307276*^9, 3.606110275572606*^9}, 
   3.6613980720531387`*^9},ExpressionUUID->"2095c90f-c091-4226-a6f0-\
b1dfe9088aff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Diferencialne ena\[CHacek]be", "Subsection",
 CellChangeTimes->{{3.606108119250253*^9, 
  3.6061081236232886`*^9}},ExpressionUUID->"7a2e21d8-111b-4e60-9b5d-\
b8ddb35f62b5"],

Cell["Brez za\[CHacek]etnih pogojev", "Text",
 CellChangeTimes->{{3.6061088922552233`*^9, 
  3.6061088951232643`*^9}},ExpressionUUID->"a3096f3b-b3dd-4a9a-946e-\
ad396748823f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "''"}], "[", "t", "]"}], "+", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "t", "]"}], "+", 
     RowBox[{"y", "[", "t", "]"}]}], "\[Equal]", 
    RowBox[{"a", " ", 
     RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
   RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.6061080740141783`*^9, 3.6061081080801682`*^9}, {
   3.606108240243764*^9, 3.606108258796886*^9}, {3.606108401152923*^9, 
   3.606108407414404*^9}, 3.606108672684679*^9, {3.6061088399474373`*^9, 
   3.6061088437571535`*^9}, {3.6061088878921227`*^9, 
   3.606108889374178*^9}},ExpressionUUID->"026a6c45-c3e8-4339-9730-\
145fb63f8714"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "2"}]], " ", 
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", "t"}], "2"], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "2"}]], " ", 
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", "t"}], "2"], "]"}]}], "-", 
     RowBox[{"a", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{
             SqrtBox["3"], " ", "t"}], "2"], "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{
             SqrtBox["3"], " ", "t"}], "2"], "]"}], "2"]}]}], ")"}]}]}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.606108091513026*^9, 3.606108098796009*^9}, 
   3.606108235776605*^9, 3.606108407769627*^9, 3.6061086742217565`*^9, 
   3.6061088456144648`*^9, 
   3.661398077344189*^9},ExpressionUUID->"fc062527-7e4d-48ac-b381-\
3daa740103c2"]
}, Open  ]],

Cell["Z za\[CHacek]etnimi pogoji", "Text",
 CellChangeTimes->{{3.60610890236791*^9, 
  3.6061089041197834`*^9}},ExpressionUUID->"d62e074e-c431-414d-a8f0-\
6e76bcbe3c08"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"y", "''"}], "[", "t", "]"}], "+", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "t", "]"}], "+", 
       RowBox[{"y", "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eqs", ",", 
    RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.606108268738593*^9, 3.6061082769739985`*^9}, {
  3.606108396444729*^9, 3.606108570513788*^9}, {3.6061086507927074`*^9, 
  3.606108667816185*^9}, {3.606108698325914*^9, 3.6061087199723063`*^9}, {
  3.6061088301709495`*^9, 3.606108854898075*^9}, {3.6061088985015945`*^9, 
  3.6061088996214066`*^9}},ExpressionUUID->"6d1525d5-38dc-4deb-9451-\
70093dd56049"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "3"]}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "t"}], "/", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{
           SqrtBox["3"], " ", "t"}], "2"], "]"}]}], "-", 
       RowBox[{"3", " ", "a", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{
           SqrtBox["3"], " ", "t"}], "2"], "]"}]}], "+", 
       RowBox[{"3", " ", "a", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"t", "/", "2"}]], " ", 
        RowBox[{"Cos", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", "t"}], "2"], "]"}], "2"]}], "-", 
       RowBox[{
        SqrtBox["3"], " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{
           SqrtBox["3"], " ", "t"}], "2"], "]"}]}], "-", 
       RowBox[{
        SqrtBox["3"], " ", "a", " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{
           SqrtBox["3"], " ", "t"}], "2"], "]"}]}], "+", 
       RowBox[{"3", " ", "a", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"t", "/", "2"}]], " ", 
        RowBox[{"Cos", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], " ", "t"}], "2"], "]"}], "2"]}]}], ")"}]}]}], "}"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.60610844396029*^9, {3.606108484070535*^9, 3.606108564601068*^9}, {
   3.6061086597124224`*^9, 3.606108720800889*^9}, 3.606108855555552*^9, 
   3.606108906243307*^9, 3.606108975810789*^9, 
   3.661398086662655*^9},ExpressionUUID->"6bd36cbb-93b0-4c8b-b0c5-\
46758ca7fa0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ySol", "[", "t_", "]"}], "=", 
  RowBox[{
   RowBox[{"y", "[", "t", "]"}], "/.", 
   RowBox[{"sol", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6061087014100924`*^9, 
  3.606108726613315*^9}},ExpressionUUID->"65b96d4c-84d9-4e51-bb7e-\
2da93b89fa14"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "3"]}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "t"}], "/", "2"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "3"}], " ", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "]"}]}], "-", 
    RowBox[{"3", " ", "a", " ", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "]"}]}], "+", 
    RowBox[{"3", " ", "a", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", "/", "2"}]], " ", 
     RowBox[{"Cos", "[", "t", "]"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", "t"}], "2"], "]"}], "2"]}], "-", 
    RowBox[{
     SqrtBox["3"], " ", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "]"}]}], "-", 
    RowBox[{
     SqrtBox["3"], " ", "a", " ", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "]"}]}], "+", 
    RowBox[{"3", " ", "a", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", "/", "2"}]], " ", 
     RowBox[{"Cos", "[", "t", "]"}], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", "t"}], "2"], "]"}], "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.6061087276460514`*^9, 3.6061088571997037`*^9, 
  3.6061089769956307`*^9, 
  3.661398092146269*^9},ExpressionUUID->"6979962e-012a-4b8b-a0dd-\
d632a2d29c7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"ySol", "[", "t", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.606108730692425*^9, 
  3.6061087479373674`*^9}},ExpressionUUID->"238351cb-12be-44da-b9f0-\
71e64cfa6d44"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "t"}], "/", "2"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "3"}], " ", "a", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", "/", "2"}]], " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{
           SqrtBox["3"], " ", "t"}], "2"], "]"}]}], "+", 
       RowBox[{
        SqrtBox["3"], " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{
           SqrtBox["3"], " ", "t"}], "2"], "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.6061087357886915`*^9, 3.6061087483001213`*^9}, 
   3.606108858885922*^9, 3.606108977836248*^9, 
   3.661398101536998*^9},ExpressionUUID->"7e17edb1-c0f4-4a82-b376-\
49bd34db2dc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ySol", "[", "t", "]"}], "/.", 
    RowBox[{"a", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.606108756047062*^9, 3.6061088024213142`*^9}, 
   3.6061088627026267`*^9},ExpressionUUID->"371fa98c-5119-4ce4-b55a-\
6ab95abcadf6"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwUl3k8VV8Xxs0ZM2aIyhgyk1n2Ml5TJaGiTKVkKKkQIZIUSVJJyE9FhqSU
kGxDJSpjg3l2Xdx7jzIUGd773n/OZ33OPmutvc4+9/s8Mj6nnXxZmJiYqBuY
mP5/lb25+ihna73pu4p1xo9ApDMFXEF+D9H+4Dd5hisE2jeielPJ7znaJ/4x
Xu8XgdbZGh34Ut6g++Wp1YFDBHK9T+zj8MMo4buYtWMTgX6IphSv5zaiv0fU
Vp0KCcTiLa++cqMJ/R1aDx6/QiC14uqyvxGf0ffM5R9njhDo4IKjzsKJNpT7
6O9vX00CNTyc6w0v6kCPbjezKK/T0c/3plJ/crtQSRN7sXQLHbHwf8+Zu/ET
tefIEHqudCS+U3r4THwPykzBxsLidKR+KEBmNqIPHY6aO/bwJw0desT8mHpi
CHm/j1GV20dD+sfyQ3SfD6N7gvwu9Tw01LBof/tc0Qi60WjmfvgDFXVL3vv2
O3cM3SoY/fBKj4pYj6sdIG5MIt+4SLVzEjMo5W9nmPo1Csp8RHp9u2saiSeF
ZwTFT6Gltk/NFSnTSL2ssWcmYgaxGymGtXFOI7flQ4cpJwhk2/nvjrDgFAr5
GFN7W2sWHVif91TvpqDKm517dJ7PIt2WOb7k/yjIXDb8dEjRL5Qj9Vsv1JiC
Emda1gWVfiMRwfUwdV4K+vpqS+qLJ7+RG8d209ihSXSQ1Fg2mzuHTJKu1ain
TKIcAVGz1K3zKMSZ3ppzchKN9fh1aGTNo27rAN1vpEmk9Oitd5vEAvpzfp2l
S2kSnQrc+PvUvQV0BXXXZfFOole63nEbNy2ipF8tUZpzZLS0Vi5UmraIRszd
Bq/3k5HpJ45HuwX+oCcnQC3/ExnF3zqkQ7vxB3FdCw2MeENGLW4ljck8f5Hp
iZfHV5+SEb/8+n7Va39RIs2pXjabjJxp+8Y/cyyh5bhXG/tvk1FmxeNzAfFL
6Cp5Ylj8BhkNxfxh42FZRh/9K/o/JpKRvK3dnaKYZfQvUPRrRwIZ+QtlK9it
LqP4mYYKuatk9LyPeD0V8Q/1KOtSH18jo/nH5tbX/v5D+e5tMiYpZGR06s4P
pdAV9OEIimtNJ6MYfcrxT3MryPyWQCNi9POeyfjPiTOrSGrV1zCkgIy4W25c
3UCsIs2Z73TrcjLae3tYrCBwDb0meVVk15FR+mGdp9bTa2jvlgtmLm1k1KuQ
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
NO/vorZ3Lfja5pbfFl84kOU5kpt+tRWXrnDbibJJfEs56dhw2vDBrlDJtXkk
XnRzRnZ0t2M/j8Ib00UccE+5LLAt78KFtjzhUAkHsiuzIhwvdWNZ6KL1lZH3
JRpyvmv24KfSkot/VnGg0cTzsJxDL+4T3nX/8ZMDS86rfE8c6cUGFWrVuJYD
p8tUYqRIPZQTgR4mNZL1/0/07MZdAZ7nWzoa84sDZwIi3rsvJPWWg73N/d9k
vPfSJmMDhPjxXuHnG60cqPdecfLfHyFuX+uzwq+dA71rVoUc3i/C6xbNu3y+
kwOr1reGZX8U4XODj1qOd3PgiMjMcVpOjDNrV+861MsB+YM+UdJHxFgyMy2e
I+BAYP+q+4X/ibEmLdbivIgDyzf8Mrw6KsZmzcFEOEHGn3uAEmRKYCe3s/dT
/5DvScGFokw3AgfMsN9aPcgBn9IKHcVoAsfd2ds6+Jd8X27bMK/lknpZfWPQ
klEO+O/v+TSzhdSv75X0No1xYPSwqW3AIIFn7plVxZzggGB6Y+pMUk+r1wg9
3afI+4xOlV8i+XeXS83KuzO40MZfumeI1NMOozjv3UwuLPsxoX+0m8BXgl8e
r5DkgpTiNDSXEDhW+Z7sn9lciDD/8sz+FdkPvLqYJjuXCx3P7yr2XyZwyzZn
u43zubBYvqzqqSWBZ5Raz6Qv4MLe2VaPrywk8KqDmxPdFnGB12rxLLZQjKFf
3er2Yi7IzvaPl/MW40NXZIbeLOHCrd+vP4vUxfiy3HBEqQIX+q+ii5RcEY6O
/43ES7mwMt2jfretCH8x/N65QJkLesolmiN9QjzFjdSnreSCQajPCZkBAV7Z
c7X25CouZM7UvZV6TIB3eLldClXngmdnc31cfR++9GTX9yJtLlDfPfUcjuvF
kevWuQl0uLDkZbbN+4kenJmloDBflwt5xdwTR6x78MTvnkOUDVxI39R45FRL
F15+pnL2cX0uzDlsnrlOtQtvm5mZHLyJC/rBkpNveJ3YR/P2aKEJF0rO+1e3
prXjsaNGYfuAC/U+GbRbhi149M8VbMYg17fY+a0qLseDs1RWorNcuDuVb+Je
WI6eSXKStpznwqxFuRFL31YirtRtY2MPLkSGZOVq3atGGbNnWev5kPU47DQ7
3qIOXZwruKwSwIXWoXADnxO/kd48LZmlV7lwSKm6uCmsBTXPO/hILogL+Xus
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 100}, {-1.0024388970595894`, 1.0046046043212693`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6061087626233287`*^9, 3.6061088030617623`*^9}, {
   3.606108860282915*^9, 3.6061088632189856`*^9}, {3.60610898055216*^9, 
   3.60610898555472*^9}, 
   3.6613981031556683`*^9},ExpressionUUID->"de5be73a-f35a-4e0e-b7e6-\
ac0139fbc773"]
}, Open  ]],

Cell["Numeri\[CHacek]no re\[SHacek]evanje", "Text",
 CellChangeTimes->{{3.6061088748342457`*^9, 
  3.6061088776959925`*^9}},ExpressionUUID->"0bd7cd45-9386-4380-beed-\
bfc9e869b14d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{"eqs", ",", 
    RowBox[{"y", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.606108928929845*^9, {3.606109012706025*^9, 
   3.6061090165909557`*^9}},ExpressionUUID->"ea72e6b3-bac6-4f2f-8e90-\
b85c71104d9f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "nlnum"}], "MessageName"], ":", 
  " ", "\<\"The function value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.0001451523696443304`\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.9998548476303557`\\\"}], \\\"+\\\", RowBox[{\
\\\"0.00014515236913462275`\\\", \\\" \\\", \\\"a\\\"}]}]}], \\\"}\\\"}]\\)\
\[NoBreak] is not a list of numbers with dimensions \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"2\\\", \\\"}\\\"}]\\)\[NoBreak] at \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"t\\\", \\\",\\\", \
RowBox[{\\\"y\\\", \\\"[\\\", \\\"t\\\", \\\"]\\\"}], \\\",\\\", \
RowBox[{SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, \
None]], \\\"[\\\", \\\"t\\\", \\\"]\\\"}]}], \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.0001451523696443304`\\\", \
\\\",\\\", \\\"1.`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.0001451523696443304`\\\"}]}], \\\"}\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::nlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.606109017249443*^9, 
  3.6613981101466737`*^9},ExpressionUUID->"04ddd713-3788-4b22-8afe-\
4436284f70d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{}, {{{}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[2.5]], 
                    PointBox[{{0., 0.}, {0., 0.}}]}, {}}}, {}}, {
                   DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
                    PlotRange -> {{-1., 1.}, {-1., 1.}}, DisplayFunction -> 
                    Identity, AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Method -> {}, 
                    PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{}, {{{}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[2.5]], 
                    PointBox[{{0., 0.}, {0., 0.}}]}, {}}}, {}}, {
                   DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
                    PlotRange -> {{-1., 1.}, {-1., 1.}}, DisplayFunction -> 
                    Identity, AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Method -> {}, 
                    PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 0.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "[", "t", "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.606108930075656*^9, 3.60610898696072*^9, 
  3.6061090172504444`*^9, 
  3.661398110295485*^9},ExpressionUUID->"83be7b0c-c05d-4b86-b2df-\
baad94638650"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqs", "/.", 
  RowBox[{"a", "\[Rule]", "1", 
   RowBox[{"(*", 
    RowBox[{
    "vse", " ", "konstante", " ", "morajo", " ", "biti", " ", "definirane"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6061090404145637`*^9, 
  3.6061090677244973`*^9}},ExpressionUUID->"176bb8b9-fcd5-4fc9-a4e8-\
fe12b1efe190"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], "+", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "+", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
    RowBox[{"Sin", "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.606109045011349*^9, 3.606109070013239*^9}, 
   3.661398120657504*^9},ExpressionUUID->"b79a2011-03e1-4aa9-af8f-\
2eb3e9cea0a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"eqs", "/.", 
     RowBox[{"a", "\[Rule]", "1"}]}], ",", 
    RowBox[{"y", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6061090754110804`*^9, 
  3.6061090796965322`*^9}},ExpressionUUID->"baad59fe-8595-45df-8fd5-\
88be6ae7c21b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4ixf/////vP/BdXF00
Ffo/cUTyzFOI5j/OO7mkBi4LQBqtDZ9F0uQ/ZDHLW8wwFECYaUOmDxLev0XB
TstvqRpA93q/OIRX7L8alh9oPtcgQKZV5NhJJOI/GlLMUc4dJECrARGmQKLp
P6F7LwaTqidAEJGHwJD3579aI53txCYrQJ4p6f57BOG/nFE/PABnLkBi+J3V
wgPsP7P2yyq49jBAkMq8RPvT0z/chxLr9JsyQPyYg5o6Fu+/H1jeROg4NEBu
xBeVfzDJvyVfBQT2+DVAKCUQwOD+7z9vqcZ2CJs3QJLD3nLHVqa/fSrjTjVg
OUDg0kYnOw/vv6TqhMAYHTtAN5Woc5yE2T8P7sDlALw8QHaMDUdFrOw/PihY
cAN+PkD3adJ20Erjv9jSRFcFEUBAB2/0HrUe6L/zLAsplvRAQI9xP5foiek/
miaURwLUQUASasMTOxndP+RB6r9wpEJAMlFdRYtK7b+P+O1qbIZDQBIjq6Uj
5su/3NC+b2pZREBFL1RVYa3vP7ZIUsFDKEVAy/DSkanGuD/yW5NFqghGQNsm
qmgl4u+/0JChIxPaRkCfw2nWuzTDPxBhXTQJvUdAvi/Z1QIH7j/c0NuR2ptI
QDHxRMRj9t+/SmInSa5rSUBGxm3DNtfqvxqPIDMPTUpAglxL8a0t5j+M3eZ2
ch9LQCEwykZbZOU/i8tvB7HtS0AnAgG9KKXov+xUpsp8zUxAvlUeOcJ437/v
/6nnSp5NQBqetc2Ww+w/VEZbN6aATkAZCVceZDTQP1uu2eADVE9ABCMABjCC
77/4Wo1rnhFQQBgMp1bnQcC/c6wEgAGCUEAzUUlCRvLvP7+OYsHl6lBAuSf/
5NwWwL+7PheckFxRQKUvwcGNQu6/fj4tHSnMUUAtNfhR3erePxLPKctCNFJA
p2w3N/Mc6z9XLX0SI6VSQNBckZP54OW/bRy3hoQOU0Dw3h/28qDlv0lbUqHT
dVNAb0VQ4gyA6D/WZ0RV6eVTQFRBdmLvs98/NAUdNoBOVEBntehDJ7/sv0Nw
TLDdv1RAYnPIrq4Z0L8YK93QKC9VQMnTWSKh4e8/vnZUHvWWVUDs9MTB//Wh
PxWQIgWIB1ZA2gJIUjOg7789OtcYnHBWQCBA3VAsc8w/FrLixXbiVkAzBuK5
VA7tP7V5Txk/UldAMMbx70hI4r8m0qKZiLpXQLwPgwpGJem/R/hMs5grWECn
nQZJOU7oPzmv3fkplVhA/UxQdtfW4j8+GeT4//9YQDmEg/cbmOu/O1fP6A==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.9963557285529662, 
                    0.9999999999983269}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4ixf/////vP/BdXF00
Ffo/cUTyzFOI5j/OO7mkBi4LQBqtDZ9F0uQ/ZDHLW8wwFECYaUOmDxLev0XB
TstvqRpA93q/OIRX7L8alh9oPtcgQKZV5NhJJOI/GlLMUc4dJECrARGmQKLp
P6F7LwaTqidAEJGHwJD3579aI53txCYrQJ4p6f57BOG/nFE/PABnLkBi+J3V
wgPsP7P2yyq49jBAkMq8RPvT0z/chxLr9JsyQPyYg5o6Fu+/H1jeROg4NEBu
xBeVfzDJvyVfBQT2+DVAKCUQwOD+7z9vqcZ2CJs3QJLD3nLHVqa/fSrjTjVg
OUDg0kYnOw/vv6TqhMAYHTtAN5Woc5yE2T8P7sDlALw8QHaMDUdFrOw/PihY
cAN+PkD3adJ20Erjv9jSRFcFEUBAB2/0HrUe6L/zLAsplvRAQI9xP5foiek/
miaURwLUQUASasMTOxndP+RB6r9wpEJAMlFdRYtK7b+P+O1qbIZDQBIjq6Uj
5su/3NC+b2pZREBFL1RVYa3vP7ZIUsFDKEVAy/DSkanGuD/yW5NFqghGQNsm
qmgl4u+/0JChIxPaRkCfw2nWuzTDPxBhXTQJvUdAvi/Z1QIH7j/c0NuR2ptI
QDHxRMRj9t+/SmInSa5rSUBGxm3DNtfqvxqPIDMPTUpAglxL8a0t5j+M3eZ2
ch9LQCEwykZbZOU/i8tvB7HtS0AnAgG9KKXov+xUpsp8zUxAvlUeOcJ437/v
/6nnSp5NQBqetc2Ww+w/VEZbN6aATkAZCVceZDTQP1uu2eADVE9ABCMABjCC
77/4Wo1rnhFQQBgMp1bnQcC/c6wEgAGCUEAzUUlCRvLvP7+OYsHl6lBAuSf/
5NwWwL+7PheckFxRQKUvwcGNQu6/fj4tHSnMUUAtNfhR3erePxLPKctCNFJA
p2w3N/Mc6z9XLX0SI6VSQNBckZP54OW/bRy3hoQOU0Dw3h/28qDlv0lbUqHT
dVNAb0VQ4gyA6D/WZ0RV6eVTQFRBdmLvs98/NAUdNoBOVEBntehDJ7/sv0Nw
TLDdv1RAYnPIrq4Z0L8YK93QKC9VQMnTWSKh4e8/vnZUHvWWVUDs9MTB//Wh
PxWQIgWIB1ZA2gJIUjOg7789OtcYnHBWQCBA3VAsc8w/FrLixXbiVkAzBuK5
VA7tP7V5Txk/UldAMMbx70hI4r8m0qKZiLpXQLwPgwpGJem/R/hMs5grWECn
nQZJOU7oPzmv3fkplVhA/UxQdtfW4j8+GeT4//9YQDmEg/cbmOu/O1fP6A==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 100.}, {-0.9963557285529662, 
                    0.9999999999983269}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "[", "t", "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.606109080323966*^9, 
  3.661398149078102*^9},ExpressionUUID->"8ecde13c-2fec-4f6a-8c06-\
33c9f03514a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ySol2", "[", "t_", "]"}], "=", 
  RowBox[{
   RowBox[{"y", "[", "t", "]"}], "/.", 
   RowBox[{"sol", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.6061089536118193`*^9},ExpressionUUID->"cbb0af53-0b39-4b12-960c-\
1980d16fcdbb"],

Cell[BoxData[
 RowBox[{
  TagBox[
   TemplateBox[{RowBox[{
       StyleBox[
        TagBox["InterpolatingFunction", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{}, {}, {
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4ixf/////vP/BdXF00
Ffo/cUTyzFOI5j/OO7mkBi4LQBqtDZ9F0uQ/ZDHLW8wwFECYaUOmDxLev0XB
TstvqRpA93q/OIRX7L8alh9oPtcgQKZV5NhJJOI/GlLMUc4dJECrARGmQKLp
P6F7LwaTqidAEJGHwJD3579aI53txCYrQJ4p6f57BOG/nFE/PABnLkBi+J3V
wgPsP7P2yyq49jBAkMq8RPvT0z/chxLr9JsyQPyYg5o6Fu+/H1jeROg4NEBu
xBeVfzDJvyVfBQT2+DVAKCUQwOD+7z9vqcZ2CJs3QJLD3nLHVqa/fSrjTjVg
OUDg0kYnOw/vv6TqhMAYHTtAN5Woc5yE2T8P7sDlALw8QHaMDUdFrOw/PihY
cAN+PkD3adJ20Erjv9jSRFcFEUBAB2/0HrUe6L/zLAsplvRAQI9xP5foiek/
miaURwLUQUASasMTOxndP+RB6r9wpEJAMlFdRYtK7b+P+O1qbIZDQBIjq6Uj
5su/3NC+b2pZREBFL1RVYa3vP7ZIUsFDKEVAy/DSkanGuD/yW5NFqghGQNsm
qmgl4u+/0JChIxPaRkCfw2nWuzTDPxBhXTQJvUdAvi/Z1QIH7j/c0NuR2ptI
QDHxRMRj9t+/SmInSa5rSUBGxm3DNtfqvxqPIDMPTUpAglxL8a0t5j+M3eZ2
ch9LQCEwykZbZOU/i8tvB7HtS0AnAgG9KKXov+xUpsp8zUxAvlUeOcJ437/v
/6nnSp5NQBqetc2Ww+w/VEZbN6aATkAZCVceZDTQP1uu2eADVE9ABCMABjCC
77/4Wo1rnhFQQBgMp1bnQcC/c6wEgAGCUEAzUUlCRvLvP7+OYsHl6lBAuSf/
5NwWwL+7PheckFxRQKUvwcGNQu6/fj4tHSnMUUAtNfhR3erePxLPKctCNFJA
p2w3N/Mc6z9XLX0SI6VSQNBckZP54OW/bRy3hoQOU0Dw3h/28qDlv0lbUqHT
dVNAb0VQ4gyA6D/WZ0RV6eVTQFRBdmLvs98/NAUdNoBOVEBntehDJ7/sv0Nw
TLDdv1RAYnPIrq4Z0L8YK93QKC9VQMnTWSKh4e8/vnZUHvWWVUDs9MTB//Wh
PxWQIgWIB1ZA2gJIUjOg7789OtcYnHBWQCBA3VAsc8w/FrLixXbiVkAzBuK5
VA7tP7V5Txk/UldAMMbx70hI4r8m0qKZiLpXQLwPgwpGJem/R/hMs5grWECn
nQZJOU7oPzmv3fkplVhA/UxQdtfW4j8+GeT4//9YQDmEg/cbmOu/O1fP6A==

                    "]]}}}, {
                DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                 PlotRange -> {{0., 100.}, {-0.9963557285529662, 
                  0.9999999999983269}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{}, {}, {
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4ixf/////vP/BdXF00
Ffo/cUTyzFOI5j/OO7mkBi4LQBqtDZ9F0uQ/ZDHLW8wwFECYaUOmDxLev0XB
TstvqRpA93q/OIRX7L8alh9oPtcgQKZV5NhJJOI/GlLMUc4dJECrARGmQKLp
P6F7LwaTqidAEJGHwJD3579aI53txCYrQJ4p6f57BOG/nFE/PABnLkBi+J3V
wgPsP7P2yyq49jBAkMq8RPvT0z/chxLr9JsyQPyYg5o6Fu+/H1jeROg4NEBu
xBeVfzDJvyVfBQT2+DVAKCUQwOD+7z9vqcZ2CJs3QJLD3nLHVqa/fSrjTjVg
OUDg0kYnOw/vv6TqhMAYHTtAN5Woc5yE2T8P7sDlALw8QHaMDUdFrOw/PihY
cAN+PkD3adJ20Erjv9jSRFcFEUBAB2/0HrUe6L/zLAsplvRAQI9xP5foiek/
miaURwLUQUASasMTOxndP+RB6r9wpEJAMlFdRYtK7b+P+O1qbIZDQBIjq6Uj
5su/3NC+b2pZREBFL1RVYa3vP7ZIUsFDKEVAy/DSkanGuD/yW5NFqghGQNsm
qmgl4u+/0JChIxPaRkCfw2nWuzTDPxBhXTQJvUdAvi/Z1QIH7j/c0NuR2ptI
QDHxRMRj9t+/SmInSa5rSUBGxm3DNtfqvxqPIDMPTUpAglxL8a0t5j+M3eZ2
ch9LQCEwykZbZOU/i8tvB7HtS0AnAgG9KKXov+xUpsp8zUxAvlUeOcJ437/v
/6nnSp5NQBqetc2Ww+w/VEZbN6aATkAZCVceZDTQP1uu2eADVE9ABCMABjCC
77/4Wo1rnhFQQBgMp1bnQcC/c6wEgAGCUEAzUUlCRvLvP7+OYsHl6lBAuSf/
5NwWwL+7PheckFxRQKUvwcGNQu6/fj4tHSnMUUAtNfhR3erePxLPKctCNFJA
p2w3N/Mc6z9XLX0SI6VSQNBckZP54OW/bRy3hoQOU0Dw3h/28qDlv0lbUqHT
dVNAb0VQ4gyA6D/WZ0RV6eVTQFRBdmLvs98/NAUdNoBOVEBntehDJ7/sv0Nw
TLDdv1RAYnPIrq4Z0L8YK93QKC9VQMnTWSKh4e8/vnZUHvWWVUDs9MTB//Wh
PxWQIgWIB1ZA2gJIUjOg7789OtcYnHBWQCBA3VAsc8w/FrLixXbiVkAzBuK5
VA7tP7V5Txk/UldAMMbx70hI4r8m0qKZiLpXQLwPgwpGJem/R/hMs5grWECn
nQZJOU7oPzmv3fkplVhA/UxQdtfW4j8+GeT4//9YQDmEg/cbmOu/O1fP6A==

                    "]]}}}, {
                DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                 PlotRange -> {{0., 100.}, {-0.9963557285529662, 
                  0.9999999999983269}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
         Baseline], DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", "t", "]"}]], "Output",
 CellChangeTimes->{{3.6061089489531727`*^9, 3.6061089579799113`*^9}, 
   3.6061089888910894`*^9, 3.606109082514504*^9, 
   3.661398155254677*^9},ExpressionUUID->"7a709b0b-8ed6-430e-b47e-\
2e15e1b4107a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ySol2", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.606108964296026*^9, 3.60610896562955*^9}, {
  3.606109086733515*^9, 
  3.6061090868245707`*^9}},ExpressionUUID->"458d37b1-a0e6-427d-8746-\
14557779400a"],

Cell[BoxData["0.7790979975350963`"], "Output",
 CellChangeTimes->{
  3.606108966027851*^9, {3.606109084282761*^9, 3.60610908713579*^9}, 
   3.6613981606534033`*^9},ExpressionUUID->"10d7fb7d-ae70-4735-8030-\
ba3632348769"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ySol2", "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{"ySol", "[", "t", "]"}], "/.", 
      RowBox[{"a", "\[Rule]", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.606108997632307*^9, {3.6061090982465324`*^9, 
   3.6061091216424894`*^9}},ExpressionUUID->"69f84d5f-4544-429d-82af-\
18be36787940"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
0ZS9V5tw0Yje1MICA6K8n6XUaTbh/wH6L8uM
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
lKD3gPIsutEx6mVKcu6xzITRNbModJBRlHeVju4c3vJuwWYWHbp14q0FyaF7
O/8I+80i5sgGuZloOnLfdmFR7uos2qEs97KC5B1rFTXVM8j9l36Z5ZFM0c/f
aVQ8izos7cPfkiy/yi5gw59ZNF2cvOsXyfMyRJLF+Czam5V7QIi8v1cgvshO
Yg4l55b5HSK5alan21mX5Cq5HRUk53K+8ftun0PhD8Wzd5P+3ul11w9xmUMv
GfqOQySHNi/ZRJ6fQ9mjcvwZZLzuP1LOXL8zhx6x75wNIvXYUbI+5eHrOVTp
m+p3mNTL6G1zWdbPOfRfhWWqE6mn7LNTjHf0OURcb/92mtR77r6UeCn3PPrI
9zv9GZmPqohdB/6snUfaDXn2e8j85Z5mXOy3m0chI5Ep5WR+7xyPejJyYh7F
a985Z0vm3922hCOUOY/w+uLvr5JJ++aHZeXwPNLTTM4KJeuHsn56vVrrPLq5
Zj3hStbXvCr1ynqpBaSviWK8H5F6yNa9NNdfQC3b4yHuMR19F/L7ZWuxgJSF
zul/eULW/8jT5T6hC8hQ28HZ9zkdGZcqvX3AXEBRjjZuGW9Jvd9/aHnGu4jk
qsr7juTT0UKW/cLblYvo9CJDTL+Ajn5cT9jx02ERiaS/4poppiMPF+6uudJF
lG3IJ3roBx3tsk/jE2pfRJPBKzzv15D3W/6nJzu1iJL1HuQxfpH+Gp0+bWC4
hBKchArzWkh/FpmiR+4vIZpm/Me+AToa2OO9omsdF0ztmv8by8dAshV+mpfM
ueBzTdmznUIMtHXTSQMVOy6okrkSJCXGQOn65zce9uUCrgv5Ne+XMZCTULxT
SyoXvHuxemyvBgP9LstLqePhhkf/7inFbmOgEtOpFaXV3IDu1iw2XGEgdvac
pstfbtiufypmMoaBVmhwGS4OcEOcwatu+UQGOictvGnjEjfw8K96uvcuA5ly
lI8UmPBAT6WLw71nDPQya3Pq67s8kH0rJG1jBQP9Xbnt6d4nPOD+Kfiy7A8G
Erpr+YqTxwNhigTRX8NAR6Nsig2+88DRl/Hy/k0MpOrm3vF8jgceeqq7KPYz
ULJytMpjV15QZ78PiVxioMm+2qw9/rwg9fzoCm5eJnJ4pUCdv8ALWXva6wIE
mEgGXljsT+aFn3ZOxSvFmSj+aHWAeC0v5Jw7uOajEhMNGcnNFrXxgmVpcf2b
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
eq/diQrrt1tq6+xiYdug9898nKmwwePiJis3Fj6vaf812o0KVuYTThWJLFx9
7cZ8yTEqCJWKngqls3B3T5eI9XEqdFVa1X2aY+GJDRSlNh8qKC6WKeVLsfFK
ds2aqRNU+HfdJK9xPRuftBUNoARToUb/6/kv5PwU/fLQxeLTVGgRe9r78yEb
P+B9Gbc7hApcjvT8hFw2Ls/f8fzYeSqc6+8ZXN/AxvLK0T2PwqnwQXlLMUWJ
g4t6uRykEqhgbxcx75fMwbX/2binJVIhsHP6wOBTDu5LehRocIMKCbHvUpe/
52Axy80JO25TobzUd//jOg52yb5QEX6fCrfM4qYMeQkczPezUeIhFaYz2+Yd
yXnz2hHlvpQUKoz55gxTlxP4rWThUsEjKhi4tC4TpRKYL3hy3ehTKvhZxNwz
cSKwYo25ZVgWGd+CELFwlMCGWnccxV9Q4TQt88ilAALv+0ML0s2hQvUaSZ2H
EeQ8bRIZ/vEVFbSvLD+wNpbAYbG/E83zqDBb9nnH1VsEfr7xZLbbWyqcElRb
sTWDwJ/vlBYS78h4l3r/5LwgcD1HsupiPhUkV60T+fmawLPpuf33C6iw7Edc
tFoJgSVnF8a0i6ggE2j75mA5gTXtrbk/fCLPl62TMv9BYGt+lsrvEir5/R43
WdNE2mNGzkeUUsFWuN7/SSuBeaqXt5l8oQIjJ0zgYxeBj+S9K+z5SoW+ghtD
Af0ELri1+97Nb1TQuZAsXssksMyZvjNbKqlgGKrrUc8i8ImDFxxHq8j3kNHZ
dW6EnO83LjN9/IMKo3a25yrHyXleNVvGtpoKZYkrtYomCRzKu22Uq5a0J07v
sJ0hcAu9te51HRX09++6nzhHYOqPoFzXeirINY3YBi4QOP6VSIJUAxVUmBE8
U4sEpt/I8C1tpMLIeQd7aa4RvCV4w67AZjLfG2JTz5Gcsv+3juofMt75Iuf3
JE9u8BH89ZcKnspb7paRbLOShx7WRoWs8Oltj0nO5n5QTumgglLeZm97kgUG
TJ50dVJhzn9A8PUSgV2rvkdc76aC/5khY2fSflG2myvqpcKfWpu9b+YJLHd9
ZjPRRwXU1XXsxSyBA4NuqjwaoAKvhHu4xTSBfzjqzu9hkO/3deajaxNkftaX
tS4yqRA/GVITMEbWw4qDhblDVKA358rMcwjcujSS7MyiQtj4ynOGwwQ27bt2
RoJDhb+X0kX5GAROrFB1LCGoIKAi0RzWS+DBFwU0/1Eq/CzbPpDeQeC0QOZI
zT8qHH0UJ9Lwm8DT9uF1FyepkD7lgvqrCWy/VjHXcJrUa9OVyQcVBBZatPRN
mCPf70kn05kCArv3dO3ctECFBZvOnvQ3BC4uD9FhL1Ih4qaNC4esx6C4rAEr
Hhq8j89Vv3CfwNX+qHyelwaumgHJRTcIrG3XkpHDT4Mddt/Xp18lcLuioKuY
MA3iQkcDnIMJbPnMq/WnJA10/hz/8GIngTNiFgsuSNPA08XmqcpmAs/73U3W
X0aDs8WzOevI9/eWVuEQJ08Djwa+655KBF5RtrpulwoNsq8uXk/u4+AzmcWv
ZlfSIIdXy3hHEwfXX3WMf6lKgwGeM8seV3Bw9J4rO0U0aUClHN5t9ZyDR9r6
v37Xo0HyPZp1wjEOHrukUeZkQAPJeT7F7P0c/E/NvYQwpMGTqe73Fy05ePpY
V4GcCQ3ajtfxb9XiYK5/f1+5raWBi0xB0u5uNpYSq0ue2UaDiz/jtsdYsLFM
nvideHMabEm5myhEZWNZO6tbqyxpcJJr/2WkwsaK977Hm++iwYzJuzVNYyys
qllOSksDU6uR+08fsLDxxkJf3SM0CEXhYqIdw5jaNeX92ZkGjwfkHqwsH8am
l8289rrSgLZOzYn9chivq3rnetqDBv+ap0KKQ4YxOOQ6lh2ngcqXrWIUiWFs
4/cEHTxDg7Vm4wU3jYZwQErCspjrZD7KlmtaIiau5tYkdt2kQVSwBfJTZmK9
Y0U/xG7T4KPcC8JigoH7TRgRN+6SXFXRtvIlAx+ohJHkVBrYXe7KPCrFwFvH
xqufZdOg0mnTyMe6ASy/41B0eSUNHslsbO5d0YdPvRpxi/5Og6dJyOYF0Yt/
yVzdtOMnDVaGDNiv+dKL4zre/ftZS4M1e4310r16MdcpcY+GJhqozWnf+5XT
g4dSS1FvHw1e0f60KFO6sSXv/uWZAzSoGkl0m53vwpne7MmjDPJ8BmHr9LAL
u9CUcweHaKDAkH4639yJG6tOrRgdJfX9xXb8tbMDmxiJTL8dp0HnQrhp+kA7
Tryd3hA8QYNlSgod8hHteKdzTez0NA3eSsgfW/jQhp999fAqmqVBpsfVggDb
NsynO7sldJ4GX5bxv08YbsVuiTdUNi+S8dNXJx240opLxrVmlpZowN4YkVS/
shX/DyQlsSs=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 20}, {-1.002571963940836, 1.0046340852457114`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6061089938216157`*^9, 3.6061089980676355`*^9}, {
   3.606109089559267*^9, 3.606109123693939*^9}, 
   3.661398162115943*^9},ExpressionUUID->"ca0e2878-4d63-41f3-bbde-\
382a9755b1f3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nekateri detajli dela z matrikami", "Subtitle",
 CellChangeTimes->{{3.6061091452716646`*^9, 
  3.606109154766943*^9}},ExpressionUUID->"6681ef0d-ced5-4a6f-8a41-\
9938ac97b883"],

Cell["Vektor", "Text",
 CellChangeTimes->{{3.606109349134865*^9, 
  3.606109349886368*^9}},ExpressionUUID->"36d24ece-a396-4a1d-8d71-\
a3d6bda713be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", "=", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.606109353385225*^9, 3.6061093985458436`*^9}, {
  3.606109449440591*^9, 
  3.6061094589293613`*^9}},ExpressionUUID->"de9656ff-ccce-4fe7-8c20-\
83a3496f68f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "y", ",", "z"}], "}"}]], "Output",
 CellChangeTimes->{3.606109399128225*^9, 3.6061094594447155`*^9, 
  3.6613981705553465`*^9},ExpressionUUID->"43fe9318-0a36-49cc-9a51-\
5c966afe8ede"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "v", "]"}]], "Input",
 CellChangeTimes->{{3.6061096071923714`*^9, 
  3.606109613526723*^9}},ExpressionUUID->"c73320b4-6f96-46fb-a6f5-\
a82895e63b7d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"x"},
      {"y"},
      {"z"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6061096138909817`*^9, 
  3.6613981718708444`*^9},ExpressionUUID->"7d83b900-b227-43fa-a204-\
9b2816e1b5f3"]
}, Open  ]],

Cell["Matrika", "Text",
 CellChangeTimes->{
  3.41381560978568*^9, {3.606109390811967*^9, 3.6061093923980894`*^9}, {
   3.661398172972028*^9, 
   3.661398175341817*^9}},ExpressionUUID->"cebf7073-ebc4-4574-9f1d-\
cbd16f12c4c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M", "=", 
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"J", "0", "J"},
     {"0", "J", "0"},
     {"0", "0", "J"}
    }], "\[NoBreak]", ")"}]}]], "Input",
 CellChangeTimes->{{3.4138152550255594`*^9, 3.413815269726699*^9}, {
   3.4138153385456553`*^9, 3.4138153505128636`*^9}, {3.4138154348541403`*^9, 
   3.4138154360258255`*^9}, 3.41381560978568*^9, {3.60610941517028*^9, 
   3.6061094319451513`*^9}, {3.6061098763197174`*^9, 
   3.6061098774284925`*^9}},ExpressionUUID->"7fb77cce-eda5-4394-a3d8-\
28a2f9dc562b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"J", ",", "0", ",", "J"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "J", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "J"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.606109432956879*^9, 3.6061094614961567`*^9}, 
   3.6061096163887568`*^9, 3.606109878175005*^9, 3.606109954808326*^9, 
   3.6613981766769047`*^9},ExpressionUUID->"2365bd38-813b-4f67-a408-\
246017f77ece"]
}, Open  ]],

Cell["Mno\[ZHacek]enje matrike in vektorja", "Text",
 CellChangeTimes->{{3.606109575659753*^9, 
  3.6061095811091413`*^9}},ExpressionUUID->"f5ea5920-e030-4d07-8fac-\
0aeec536f44f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M", ".", "v"}]], "Input",
 CellChangeTimes->{{3.606109436515402*^9, 3.606109438442763*^9}, {
  3.6061095982983646`*^9, 
  3.6061096237249813`*^9}},ExpressionUUID->"6018baa7-400d-41ca-86e2-\
1facaa4fa474"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"J", " ", "x"}], "+", 
    RowBox[{"J", " ", "z"}]}], ",", 
   RowBox[{"J", " ", "y"}], ",", 
   RowBox[{"J", " ", "z"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6061094387399917`*^9, 3.6061094622276745`*^9}, {
   3.6061095823600006`*^9, 3.6061096241132507`*^9}, 3.606109879977289*^9, 
   3.6061099575953045`*^9, 
   3.661398178649349*^9},ExpressionUUID->"f10863f9-6b82-4dad-956b-\
30f4c749ea82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.6061096271744266`*^9, 
  3.6061096282181997`*^9}},ExpressionUUID->"3bd86f0f-9b6f-4787-8ce4-\
897853e51477"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"J", " ", "x"}], "+", 
        RowBox[{"J", " ", "z"}]}]},
      {
       RowBox[{"J", " ", "y"}]},
      {
       RowBox[{"J", " ", "z"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6061096285834465`*^9, 3.6061098828863544`*^9, 
  3.606109958483937*^9, 
  3.661398181824159*^9},ExpressionUUID->"bacb3058-5f2f-4b5e-8efd-\
78616ce51f11"]
}, Open  ]],

Cell["Vektorski produkt", "Text",
 CellChangeTimes->{{3.6061096341784067`*^9, 
  3.606109636677622*^9}},ExpressionUUID->"63f42505-a62f-4b92-ab35-\
56135854a321"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cross", "[", 
  RowBox[{"v", ",", "v"}], "]"}]], "Input",
 CellChangeTimes->{{3.6061095846646385`*^9, 3.6061095850459404`*^9}, {
  3.6061096445309963`*^9, 
  3.6061096865576863`*^9}},ExpressionUUID->"ca05f6c8-f96c-4956-b662-\
e1ffdbe98fea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6061095854602222`*^9, {3.606109649551569*^9, 3.606109686890922*^9}, 
   3.6061098851359744`*^9, 3.606109960114116*^9, 
   3.66139818453959*^9},ExpressionUUID->"f2a0c4ec-e462-47e2-b685-\
a85f5ea745aa"]
}, Open  ]],

Cell["Transponiranj vektorja", "Text",
 CellChangeTimes->{{3.606109796961397*^9, 
  3.606109806152841*^9}},ExpressionUUID->"44bb3d06-9331-49be-bd46-\
9b1d009e694d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", "v", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6061097341032543`*^9, 
  3.606109768466888*^9}},ExpressionUUID->"2d793ac1-adcd-40d1-879a-\
88a3b4db6ed3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"x", "y", "z"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6061097376929216`*^9, 3.6061097689212036`*^9}, {
   3.6061099316985483`*^9, 3.606109961638199*^9}, 
   3.6613981879103584`*^9},ExpressionUUID->"7a91adb8-8a04-46d3-9f56-\
bf1f51bec617"]
}, Open  ]],

Cell["Transponiranje matrike", "Text",
 CellChangeTimes->{{3.60610994090231*^9, 
  3.60610994451443*^9}},ExpressionUUID->"457a5a8b-0103-48e4-9dda-\
a19f8c4c5534"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Transpose", "[", "M", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.606109811746394*^9, 3.606109818264511*^9}, {
  3.6061099466689863`*^9, 
  3.6061099475571995`*^9}},ExpressionUUID->"a920f238-44e8-41ef-841e-\
524133e6773e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"J", "0", "0"},
     {"0", "J", "0"},
     {"J", "0", "J"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6061098188669405`*^9, {3.6061099327272944`*^9, 3.606109963484493*^9}, 
   3.6613981924611673`*^9},ExpressionUUID->"fd38cb78-7dcb-4091-afd4-\
5247f28b0521"]
}, Open  ]],

Cell["Inverz", "Text",
 CellChangeTimes->{{3.606109970608591*^9, 
  3.6061099714261737`*^9}},ExpressionUUID->"7050d49b-5dd8-491f-8caf-\
ca2ecdd204ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inverse", "[", "M", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.606109835238597*^9, 
  3.6061098488255577`*^9}},ExpressionUUID->"50acc6f3-1c7a-483b-9690-\
b48ac1a20a2a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "J"], "0", 
      RowBox[{"-", 
       FractionBox["1", "J"]}]},
     {"0", 
      FractionBox["1", "J"], "0"},
     {"0", "0", 
      FractionBox["1", "J"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6061098385380754`*^9, 3.6061098496271286`*^9}, 
   3.606109934379488*^9, {3.60610996637255*^9, 3.606109974534351*^9}, 
   3.6613981951982718`*^9},ExpressionUUID->"826a3479-0fba-4501-a10b-\
21b02136add5"]
}, Open  ]],

Cell["Lastne vrednosti in vektorji", "Text",
 CellChangeTimes->{{3.606110022200696*^9, 
  3.606110030216282*^9}},ExpressionUUID->"1256b8b3-76cb-4629-9eee-\
73d6faefe665"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"values", ",", "vectors"}], "}"}], "=", 
  RowBox[{"Eigensystem", "[", "M", "]"}]}]], "Input",
 CellChangeTimes->{{3.606110031771389*^9, 
  3.6061100615214844`*^9}},ExpressionUUID->"bf2abdfa-0ad4-449d-aea9-\
bbb58949025d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"J", ",", "J", ",", "J"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6061100371757946`*^9, 3.6061100629374857`*^9}, 
   3.661398198297621*^9},ExpressionUUID->"8b2e438a-de5d-4587-9c6c-\
2e81b42286fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["values"], "Input",
 CellChangeTimes->{{3.6061100638621397`*^9, 
  3.606110064650733*^9}},ExpressionUUID->"8366cbf5-f4f4-4cd7-86c2-\
45f8446dd4ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"J", ",", "J", ",", "J"}], "}"}]], "Output",
 CellChangeTimes->{3.606110065155079*^9, 
  3.6613982036944776`*^9},ExpressionUUID->"61004107-9f75-47e2-986b-\
93760cc81b5f"]
}, Open  ]],

Cell["Determinanta", "Text",
 CellChangeTimes->{{3.6061100786889925`*^9, 
  3.6061100802210813`*^9}},ExpressionUUID->"0102cb8b-1025-4109-bc67-\
de590af328bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "M", "]"}]], "Input",
 CellChangeTimes->{{3.6061100814729805`*^9, 
  3.606110083331293*^9}},ExpressionUUID->"295a89b4-7529-4e01-9069-\
4b3796a8e50a"],

Cell[BoxData[
 SuperscriptBox["J", "3"]], "Output",
 CellChangeTimes->{3.6061100851734924`*^9, 
  3.6613982050301003`*^9},ExpressionUUID->"0ccf967f-63d7-4e09-b94f-\
fe42a843f04f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prikazovanje rezultatov", "Subtitle",
 CellChangeTimes->{{3.6061102898737907`*^9, 
  3.606110293430717*^9}},ExpressionUUID->"59e96f67-5df9-4938-a8f6-\
bd38d96ff111"],

Cell[CellGroupData[{

Cell["Plot", "Subsection",
 CellChangeTimes->{{3.606110751859401*^9, 
  3.6061107534233046`*^9}},ExpressionUUID->"acf8a2c1-7440-4b23-b14e-\
0133b227365d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      SuperscriptBox["x", "3"], "-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.606110294858731*^9, 
  3.606110317114377*^9}},ExpressionUUID->"0e749c10-837a-4ab2-9cd3-\
0159c6bc3860"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxF1GtLk3EcgOEddFqWKbpQK3MuC1ke0CJLyTXmqVSYozIxLc9I2VNZ05nC
TDFRcAw12EpFXzgnaqcpyXJTlz1DzWAQiiFOM5k5lDm35ZZW0H7/FzfXN7hp
OffS8kkEAiHlb//MHRBu7O25qByqmo6djLYjj2KyzMdW5NdwtWZ9E5n4xtI1
p0OGyrPS344jrcOnRwvqkI0TuGjaHRngp8M4+yggFsPlBFOdwVvd5vjJICdQ
kcrn0QPJoFZ9XTYTRgKv8qg+EcFEsOyBkyTrFAHsLxMzR+7uKh2yatdVjDw7
mBpmjLtUuQNKijO219qtoNL/qR9RbAYzsGy2ctAETl6wL+tlRrCq1dYnlW6C
nOM3f/mLDCCXzK7+KNCD7ECRt2JwBdRF3BY1iHUgeWpNQ6HPg3SpTtAq0YJR
M+9or5YnwObVAy3TLf1gdVyhR0d4X6xDE/WhMrv6E1gw9FzWy9GC5YTStkc1
8yCLlFvKw3XgDc0Jj7z6FVDdlq/iSfQg83xsYXSRAXwx25P5U7gJjkm2mpJb
jSA2Wj/iXG4CE0uyeWk1ZrCnUsCw3LGCuI0pd0neAT2JTE0v1w4uFTXMdkft
ghsMt/dH6ASmw6mMdsw3iAgahueCxqkksGshsmPQjwy+jDzjc83dCTTHkisY
v5HfDxk7LxMo4GHPOpxqRDado99PMSNds5S+tTtIm8xSbCK5gIvsooNaL2RP
WVKa8CwyZtHt2/5ypJwirWFVIkND2CF8AZLGf1Klr0dSvA0BuBj5JeFzfq0C
mVRS7P5BhRxrpgyZ1Ei57qJr3jRSXDEgYy0gvTqvcPlLyEZ81fb6B7KKGpBC
20BaohXb6VtILCe9TWhBrj0zxeM25P9vgX8AA0VQww==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-3, 3}, {-16.941708579719684`, 13.006885017752747`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.606110311315509*^9, 3.6061103204533987`*^9}, 
   3.661398207227085*^9},ExpressionUUID->"6c04c193-e4db-41f0-a3e2-\
968bdb66aa68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      SuperscriptBox["x", "3"], "-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"42d32fd3-2d81-43d5-af36-688edfe804da"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxF1GtLk3EcgOEddFqWKbpQK3MuC1ke0CJLyTXmqVSYozIxLc9I2VNZ05nC
TDFRcAw12EpFXzgnaqcpyXJTlz1DzWAQiiFOM5k5lDm35ZZW0H7/FzfXN7hp
OffS8kkEAiHlb//MHRBu7O25qByqmo6djLYjj2KyzMdW5NdwtWZ9E5n4xtI1
p0OGyrPS344jrcOnRwvqkI0TuGjaHRngp8M4+yggFsPlBFOdwVvd5vjJICdQ
kcrn0QPJoFZ9XTYTRgKv8qg+EcFEsOyBkyTrFAHsLxMzR+7uKh2yatdVjDw7
mBpmjLtUuQNKijO219qtoNL/qR9RbAYzsGy2ctAETl6wL+tlRrCq1dYnlW6C
nOM3f/mLDCCXzK7+KNCD7ECRt2JwBdRF3BY1iHUgeWpNQ6HPg3SpTtAq0YJR
M+9or5YnwObVAy3TLf1gdVyhR0d4X6xDE/WhMrv6E1gw9FzWy9GC5YTStkc1
8yCLlFvKw3XgDc0Jj7z6FVDdlq/iSfQg83xsYXSRAXwx25P5U7gJjkm2mpJb
jSA2Wj/iXG4CE0uyeWk1ZrCnUsCw3LGCuI0pd0neAT2JTE0v1w4uFTXMdkft
ghsMt/dH6ASmw6mMdsw3iAgahueCxqkksGshsmPQjwy+jDzjc83dCTTHkisY
v5HfDxk7LxMo4GHPOpxqRDado99PMSNds5S+tTtIm8xSbCK5gIvsooNaL2RP
WVKa8CwyZtHt2/5ypJwirWFVIkND2CF8AZLGf1Klr0dSvA0BuBj5JeFzfq0C
mVRS7P5BhRxrpgyZ1Ei57qJr3jRSXDEgYy0gvTqvcPlLyEZ81fb6B7KKGpBC
20BaohXb6VtILCe9TWhBrj0zxeM25P9vgX8AA0VQww==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwd13k4VN8fB3BERDHcO7ZvQrKEaCGSOoNUIkqltJCSihIaW0iyJGRfslT2
nVDIknPITmVfkuzr2BMi/O78/prn9bzvfc+5cz733mdEbz3Sv8PEwMAQzcjA
QP+sCTsewXCaCSmpU5qw+f2otfJy+nd5JkStt5AugPvRJXsy/8G9jGhn+ML3
zs/7kIMNc7SRJAOizYTcAPbSKNshilL2cAP6B8YKVJRLInXPKSRj+g92lAUX
pciKI135BU01l1WIfZa+Z4KJoWjzq38m361AowenhB3PiCK4y12QMWoJqq/b
SZqdFEZbA6UxavAS/FlXwiB0VBjpMLZwjPksQYZFqmmPvDDqGhJZb3RagvFg
X7mlgDBaSC3re31jCVIbsJezU7uQxKHVxP2iS5BkmSZ0OWwX8jtlLX8z9Q/M
SHLOzaQJoatWxidgwSJM5ZkHw1k7kcdQ70xA9iK8Hr7b8m3CTpRtcD3yZvIi
XPWJLb4ZuRMxHjOcYQxfhFJNKXHrHjtR6rYLr0/YLsJF9pmzr6/vREvxJ6fq
Di3C5ZMZero7dqLg9n2hbTm/YdiGw5Nk6n+oQeXf0ET6ArwdPeh24aogUlHe
09cfvwAHJKUWdusLolRFnR+dUQtQ8JvOo79agshrf0xTlc8C3JXI7lFyRBCp
S6h+jjNfgLxCRytCBATRJ27ncEPpBSju4DEe9EMAJY6vna5Lm4fZLrfC3psI
oKfha1mpqXOwRihSsdqdH926dVhLOm4ODpt7HMl14Uen5KyHMyLnoK+qYkGc
PT8iVY8KvveZg15e7KQQC36U8Kf5Rf6DOdhh6shQeIEf1V5MNanYPweDa8iZ
jOL8SEIiXfqT9SxM5cinBTbwobnPwiYlt2ahGem8mkQ1Hyq6FBZRdmEWXr3V
gBDiQzqez5irFGfh5tanh1gK+JD1sMGv5r8zsI6pOb4hlg+Vxm8JprnNQGm1
nmc69nzovPCNv7uCpyEFTi1vl+JDg8XPQnrdpqG7ocixnt18yMYgcV+M9TSU
Vzqh/F6IDwW/opkInJ+GMyo1GvcwPtSy5liPkaahZmfC5V2bvEi/KzyazX8K
Sqwz5UV0Eg5qOrbwkgblGvNl0vx40aDsYmeOIw2envfilfLmRTa1fDaP7tPg
Ie0Y/Ux3XhS8aZQ8dZoGE/7byK18wotaHk5zjrHSoGz8i3yF+0TfGfb+Hs9J
WNi3zsl1ihdd2HLieZXbBNxFa2WJ2MqLvh19dT3SZgLGt/GWrTHxojPUjsMP
b09APQGETDfJSH3kHg3XnIAJe9ijNVbI6GDNq4umbBPwjUHPNYVJMiL5dkps
CRiH0l/Mm/u+kVEjj0UDJWYMGkQyJepEk9Fp7Y9J+KsxGGyq9FHxNRlVuq+7
jruMwT7OpdLdYWRUshigEGg8BqWs27PYAsgovePjm77dY3Dc1alqizsZeUdt
PHqaNgofmNwI+GhBRid2B+OlBSNQgetY0gwgIy+jl/raySPwv6Y2XsFjZFQX
9SzwR9gIFD4Z3aylQka62KPtf6kj0DfwPblAgYyuMOswHz40Am9eaXMu30tG
FqMsi+/fD0MTV+aZWJyMgtMdWxNSh2CiZ1aIxTSO2katuA+9HoJ+tt9+CtBw
xCd2T6/ixRDkwFa2No7jKCbaoKHfbAj2h92cPzqMo2S/Q1+ExIegDvXOF60e
HBVbTudFxA1Cf2MFd8F6HA0cNAn2jRqAGWfC0hzTcZTtnmF912cAWkR+uJuc
iqMnbX/OaTwZgPPaOU87knGE2flwrRkOwLgfC+mUBBxpFn3wMxcYgI3BRsmq
MThKA1tfaL3uh2RSv12TP47sAs+ZiXv3w4p7p88feIUj9YEoTUaHfui469SF
MF8c9TyXZy663A+vv8svN/PG0Y7qK25SfP1Qhsa/IPccR4OvDZY5Zftgng7b
7Hk7HDmp0PKrOfrgGw2V5iEqjvCfrtSntF+wO7A4zeExjk4Kp81Pp/+CIbIX
D2RY4Sg9aY3WuPcX1LuRdeKQBY5s8mL7fSR7Yaoma33jTRxtaZys2yrWA0Uo
HZBLF0fUlHq2CeYeeM3/0er2szgafp5+qmH0B9yQvvN4uw6Oqo6YVwWk/4CZ
Xqa8PGdw9CJlAvEf/AH5zmT/UDqJIw738UJptW54H1eXpR3HkbNR7dJ2sW64
u9xbhIPw1JFUxVnmbkiKlJLZdwxHX+fufvhQ2wUR42NH+6M4CjAay1Y91wW7
lPd93KNM/N4qo0m6xp1Q6jyHTd8BHHmQq4f3q3VCyt6v74QJL84liWFinfD6
tpESk/04ak+5E9c52gGb+XnzaXI4iiCPxNy07IA7l+3v8Mri6L/5oRAbl3Zo
X8npXymBI7/GLy0XjdthU6iA7W7C/1ISuJXU2uGalv3u5+I46jW6HbDG3A5X
IqWrT+7B0bvGQR8Pvzb4T9+CNiyKI7HUAbfw6FZoqbrXxUYIRyK+Qt6zT1ph
bkrRxf6dONplaeh/+mortDbgxs4RFlRojlrlb4Wh9QZKiv/hiAehD0bhLTBg
979KsgCOGLvejUgENcNclXLpfWQcbRT30FytmmF9ve5cIU6s7w3fQpdeM2T/
nnj/BOGV2wEbPpzNUO7ZpPktDEdzs0/5Zn2boGzUW908bhxBrtJgyx3f4VWD
4qa3nMT8tx96J9L4Df4hX7moQbggOiOjxecbvPUEXpnYQcy/ZHTlYbZvcMBF
pvMI4bfgydIG01cY5qFyfooDR1EsC0y55Y1w3nXMLYZweMN9rtvPGqHdp18C
uoRfXTaUqllvgGL7pmzy2Yn9f6R8NWClHh5W0bQK3YYjB8UcM7XCerh5aOtz
PcLUNcnHv23r4cktwQMchC1e8Pld/l0HHSzPuHiz4ejqu6XPwjO1MNyP4Vsg
K46Uv38UzRmqhpxBwew9LDgaYvsiV5hcDYUuW5RkEvZXbz5adr8aCqys3HKl
5/nTlxpnq2CLbYuvJD2PkfAZX6uEpB0/154zE30dChGzZZXw0uUigeuEh7g0
EpfcKqF9i4/AYXrublzGzFYJ9bamf5zaQuT3Xy+I4F8gN7cSyZSwf0LypmRn
BSQFYH80CCv3ftwuH1UBf4WIpeyh5+eaJY6JVMDeny73xplwdESJ/ZqhbDlU
FHDkcyQ8bMV/7+Ysgo+f6AkZE/ZPl7C9m4eg1afXPZr0XEgjwFYZwVhbMXsy
YaFtK15iL8tgXJz9QCkjcT8743EHuMpgfJj6rVTCtbP7S0DYZ3ihFHqF0vOO
+7PX4kphqY5VjiU91/LaZi5ZCud8H+dcJyz0OV7MIasEfk2t1dKm5wk9l0OL
iqGdBNtxacK7+Fas40ExRNcrQgQJP/bB/XKqimDaf5YOHPTc+ixqbP4EL/06
MjzDQOzncSjFMlkAe8QY1ksI1+f2qGNWBXBOO9Eth7Cw+Mp10aV8GKHv+CyJ
nnMcCDrGlA/9ky8NBtJz17MZ2t4f4bU6WcoLet/C/SpDzo8w17Ztx1N63h3/
11bwA1wgK848oOc6EPOIzYNX+j6vmdL7YM++YIk8SOktsLxBz5PxW9kHc6Gv
aOQTPXoucMC59FMOfHBMn1OL3vfqbHj98RxYrfzfujrh0LHtYV/DsmGfg/OA
EuF+XvtfH5KzoF2N3+RBwjInBySjCjOh2oCimhxhO1tt62e1GZB1x9ahvYQr
EvOLzbrTYVCQ71dxwpxtwsxnJ9NgWv7FDVHCV7f4nD20lgoF0KzNLsLzJkb9
mztToHBCmxA/YdWg2r2j+5Kh1rajemTC3ujg48bjSXDaKrOYh3DbbExpnl4i
bBcpvEEiLCLMujXyZgJsMJ5Q5CT8QNdaz9U6HoZTmynbCRe69Ly+8zwOMiSv
O7ET3pKlOagdEgtbVP4NsxF+88n4sunpd7Dd8ZojK2EFPoXJ/eZvYEta2uGt
hBtt2VzWfaNhMLetIAvh220/ueqzImHfsvZuZsKrB3Pjw79HwGcJpdpbCAcH
eSreng+DlGuXQpkI750zrJXHQuHoncS/jISRrty1fwrB8Bi7siPdV7KYZmoN
AuGOgLckun/xZTPKzPtBkaNmnxkI72g3kKxUeAmPXRJyoVs1eFPnhoMnlN+j
f5Zuc71Um6USN1g2EyxD9wGB+P3Cm07w49pDMt3+Ib+dzntRYXeQNRvdHf/5
+LP+Zw6XlmWY6BYRvXqmS98AtlOJ0wlntruKPlE7Do7rbWxubmJojeVVVn3R
LbD29eD/Hctmy/Gh3Qq0KV1eo1vDXww903UAIa1/5+kexVqoujWugGE8tZ/u
Sh2Ec8a6g5GShUq6wwP4ZqnXXwD28DsxdN9tsazr4fcFRz4HmNKtTK5OUG/3
B0cdNgXpZsnkhG2ng0DXDo3PG4Qtz6rIskmGgB+V46fp7pi5E3mUJQywDz8t
WScMAoO2PhoKB/vzQnjoTj3w+XF8+WvAa5ev/Y8wqXW8v/1dFPC0szFdI+xI
xXW3PY0BJ1evXF0lPEimlKhefwt2n16W/ks4qUcRVxaKBYPJPa3LhK9mNtSf
3x4HdG+E6i8R5nQxcbNYiyO+733iIuGKs8tKnpPxQH+qpGaBsN2uVzNvuxOA
k/6pojnC0rO7kz7VJgI7mX67GcJ98NO1lsIkwF6Gb9AIhwbq8kwlJwPG8491
JgifNhmuZQlPAeIyPsajhP8deOIq7JkKjoWMKQwRzmEiHT5CTQN4k0B9H2HT
1qQp/dvpwEbq/c6fhAUSjyY80M8AIkOK0l2En2veJcXuzwJBUecefCfc2L3T
b4tCNniQ0iVfT5hs2cJ6V+k9yPG4Gl5JWJ6xUu2OUA5Q0i6MKSN8seHtJu+7
HNCDNYFPhB3CHD/XiuQC22VP51zCb4wvOj2JzwV9nMV66fR5+L1tuTcpD7xS
Fc2KIsxeNvwxQPID8PDgPRBM7/eGNmppH8CH25zgJb1vp+1MYuZHIKztM2VL
OGZUL9NALh+QPJs8LQiX50ibs+Xkg7iiNzE36X2a/SMWHwoAq935w1qE5bhK
EoQUC0Gg/GqeKuEL3WEm3wsKgcip7Fh5et9D7d6DxZ9Aye/SCozepyQRPXy0
CDwp7p5jpq+XkdEw/HMRSFb3cv+zQawvvKDtLyoGeas89W2EL94MCs5QLwEn
rufbfyHsIP3g3I3KEpA5aOGSS7iiTLQR1ZSCW+WRHr7048f8vrz4VgY0nkZI
K9GPz73rduQcBJfKHNVECL9xUge0Zgg4Jh0i2Aj/ZnW+kWKOQMNd/cWOdQyp
xhzoZrcsB48+kgTNCesyCn8ayi4H9tscW3QIm5htjyidLQcLJNZcOcJe+8cu
WlpXgNQo/rbZfxj6XhnT1Ez9AibP5Vy9S3hwr8/79PwvwHh+eEqd8KK/vb/7
0hdA5jjtJ0SY31BfR9GhEmTv2DX6fQ1Dt6ZZa187VYH7rKnZUoSp+n+SrUur
ANo7q/9vlfi+wkHPM+tVQMrvIe0b4Qy3zxr/nlaDYGrolBXhRfJjaPy8BsT6
7u1K+YuhK6z1b4bKagC1yfKaHeGSFRHnu2s1wO7IfJ8G4ec935QfUWvBJzvv
wZ4VDHHFSec9NasDAmHrXpvLGLIJdgtkSqgDGgtSX6sId7h3WXr11QEG61MM
voRjzLxk/K/Ug8lmZTEewtKyg4lvzjQAA/5JHFvCkL/QEXfRFw2AwTHDqekP
huY5A02SvjSAhBVyiR/hT/PHdmWpNgKvC+VFjIQ1CyMjSuW+giRLy0e9vzF0
U/28Tw/Pd3BxfpuH4TzxfDuUes9Y7ztwEmTV3EJYUnzz5JDvd2B2Q6AgYw5D
y+4dbrZMTUBZ/srblVkMlZl5HHdxagK5f49Sns9gSFu2v9DvYTNgG3AP0qcR
93ciR8o332ZwwdVZbHQSQ9lCSuGk9GYge3BJ1YEwD5c/NXS0Gai0nfoXMYGh
rvmjB2KMW0Aqg8mdqjEMmRVGpGecbwV9ufpp7UMY8pG622Jn0wqqzhw4pUk4
O/LwqlpIK2jER1bzBon1ObVrdbW1AseVgXDvAQx5U7AJ5ittgG1P3cmdfcR+
1vlLGhm1g8wjnB8GuzHUpGKkt9e1Hcz8bpA+SHgxY5/94rt2oN2U7+HaRcyr
f2O1z0A7CM0Qa8E6MfRNn92s0LQDCPAwOO5uw9Bcj2ciyaITxDY6i7V/xRB+
9lJjj28nGC30VmEkrFy2ZzE5sxOoFfAxyDRiyC32i8axmU5gl9r20r6euP47
jEP3rbtAoPetY4vVGFKYcRb9Yt8NVO4EnHeExPOcgfrW1qMHrKwfDo3OJq7/
9Bv3lMQeoN6YH+6chaGowOp73ZU9gDs/7e/VTAwViwgcOsbyExRe/9TGlY6h
VUpZDbPXT/Aud+SlYRKGnN3Y5kNe9ALnXvET5tEY8qs70FGV0guaea/0CUcR
88Z9rWS5phckeAilt7zGUGlcluc1tl9A1WNvhXw4htbL9QXFXv4Cxag4uSYQ
Q0+Z3mjk+fSBZ1F3wyw8iXk8Uy01nN4HqL/kShbcMfQueHYHb0Mf6LNK6bN7
Tswbt+hUKUs/CGWl8tu5YuhZ3OMCkZP9YDVt9reeI4ZQOb/2eHU/OC/Hm2z5
AEPqTLep9rUDQDVYO1T9HIaMtrVIOHUOgMTm/hV3XQw5kdS6n44OAB7KOYsK
HQx93CV83It5EITxtz46rIUh8aM9rGGUQWBYtpG7qoYhNuqF6LxPg6Bsx9vZ
+YPEfo5oVEynDgFTjad/XvJgaHIqjzpfOAQsFotP3SNhiHVRVPJP9RCQ0XK5
osGJIQoTg9+/4SHwSCc1Y3YbhnJ3lV7iEB0Ge9C+VhFG4n13WWFCKnIY7HuV
vDY4w4MM6/aQTF+OAAHN5svtNTwou3HEKDNyBKRyvDrCVcWDmJuSsxbTRsC7
CJ+JExU8KKdDStuzfgQwWSSlJJTyoK3Dsl7JHKOAMtOiIZfLgz5uKPwbfzUK
inralGwjeRCngub4w+AxELT2fuqDGQ8yVdqqVBA/BpRuWtmZ3OZBxSo1nht5
Y2DPsOZ99ps86I6allhA6xjA831cdA15UKnuWaMcfByM319kfafNg+7fv9S2
ED4O3EK5+o3keVDl2zvIPnoCmIfHOmn85kZyLIzf09MngKE3mo6a5UavLWJ6
e4smwAQZZ5uhcaMHyq2rGl0TAHu8XebFMDfCWyiKJPIkKANg0KOdG91m2Zme
6j8JOh+HtWcUcCOmBy0h3W40oNVy8nuYLXF+y8P47UE0wMKtrHPDmht1KG/L
BbE0UGRKEhZ5yI3SWSjfkspo4FCxbGmEKTfSf5fFZrNGA9GS3H66F7hRXIu3
C7vtFEi8Ya3eJc+NKEfA3aP3psG38ma2MyMk4v/8izZR+2lwQNg7MaCfhBh6
v6uxeU2DYPYs26YeEkLPbu5sT5gG6S+CsjVaSAjUujVb9k2DMsaZw3NlJHT8
cuXReIMZ4n2h6m4cQUKqtlqkbZqzwI1mhnudIKGYrrTrtMA5cDrIq71jFxdK
3bQbYIicAwcFG1ObuLlQvsQJM964OXBCdrPqMzMX+kb99Ugtdw6MKppXWU9y
IkZuzD2ieQ6cH/krTcnnRGZazmkaPPNgz6i8hPVpTiRfrLsUHTIPXq7ae62Y
7kAV0b8DdMIXQFmlh4q6LQcyXMyidr5ZAJEnnfWX73CgOZ17hreSFoCCtBRj
rAEHEtr4udvh4wJgmHHlbFTiQA43q/MTWhbAce3b1/3/siM58cieVc7fYN7u
tVHhE3YUmX1cMu3FbyBzL7/O/vE2ZFX+sozFcRFQDZ/Fvz7GivbwP5w/6LYI
dtx9xeS8lxV1Wp7bc/PlIoiM2KKvR2ZFx3fy+RRHLgItP9+kqqmtiMM+8dKj
4kVQMptuMRe1FSXLwqmutUUwura/W3mRBf2MWBTMfPoHeHMnmdyLYkanLY3t
9T2WgOVjD/OeD4zIa0me/Y/vEuAWlpcQf8OIvjxleBMRsgRMetqfGHsxouMB
cRU/45fA7XCVH0lXGJFCztCOu+VLoN/boM/hHwMSWbib6LSxBMqW3G0OqTGg
FVur5kSHZbBwTYya6bIO01zcZJYfrID40FLr69gyrF2j5LPqrAKRnLCpsOkB
yM1Iqcu48A+gyAHoEDIABu/5dqUobwB+Wq/Ln+Y1MCvDUfSfGAOFxH+rgpa6
jdJ49Z2VgDgjRUH3xwkrY4wyXdwt/oXMRJG94MTMfliQkvDrUGyB4BZKnnhG
VZyqKOXNIQV+A05myj59WHvbXZyyKWNTUrzMTJHb+9PSa4s05X8ARPjP
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-3, 3}, {-16.941708579719684`, 13.006885017752747`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6061103341994753`*^9, 
  3.661398211153147*^9},ExpressionUUID->"fc646633-0e0d-4e57-8327-\
5c4a6aab9c2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "Plot", "]"}]], "Input",
 CellChangeTimes->{{3.6061105391191983`*^9, 
  3.6061105424122367`*^9}},ExpressionUUID->"36639dd9-118e-4a6d-ad48-\
5520270d4a63"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    FractionBox["1", "GoldenRatio"]}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", "None"}], ",", 
   RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"ClippingStyle", "\[Rule]", "None"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}], ",", 
   RowBox[{"ColorOutput", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"CoordinatesToolOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Evaluated", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"EvaluationMonitor", "\[Rule]", "None"}], ",", 
   RowBox[{"Exclusions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ExclusionsStyle", "\[Rule]", "None"}], ",", 
   RowBox[{"Filling", "\[Rule]", "None"}], ",", 
   RowBox[{"FillingStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FormatType", "\[RuleDelayed]", "TraditionalForm"}], ",", 
   RowBox[{"Frame", "\[Rule]", "False"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "None"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"ImageMargins", "\[Rule]", "0.`"}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"MaxRecursion", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"#1", "&"}], "}"}]}], ",", 
   RowBox[{"MeshShading", "\[Rule]", "None"}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Full", ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotRangeClipping", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRegion", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}], ",", 
   RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"True", "&"}], ")"}]}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
   RowBox[{"TargetUnits", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"WorkingPrecision", "\[Rule]", "MachinePrecision"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6061105426684184`*^9, 3.6061105737234545`*^9, 
  3.661398214438675*^9},ExpressionUUID->"6c3905c2-1d6d-4d50-8846-\
595366dc814a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      SuperscriptBox["x", "3"], "-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thin", ",", "Blue", ",", "Dashed"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6061103600983443`*^9, 3.6061104214136524`*^9}, {
  3.6061105190779524`*^9, 3.606110526181861*^9}, {3.606110606350881*^9, 
  3.6061106313776016`*^9}, {3.606110668955448*^9, 3.606110683198943*^9}},
 NumberMarks->False,ExpressionUUID->"ae97362a-61c6-4ba7-8bb3-6e38307f45c6"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1:eJxF1GtLk3EcgOEddFqWKbpQK3MuC1ke0CJLyTXmqVSYozIxLc9I2VNZ05nC
TDFRcAw12EpFXzgnaqcpyXJTlz1DzWAQiiFOM5k5lDm35ZZW0H7/FzfXN7hp
OffS8kkEAiHlb//MHRBu7O25qByqmo6djLYjj2KyzMdW5NdwtWZ9E5n4xtI1
p0OGyrPS344jrcOnRwvqkI0TuGjaHRngp8M4+yggFsPlBFOdwVvd5vjJICdQ
kcrn0QPJoFZ9XTYTRgKv8qg+EcFEsOyBkyTrFAHsLxMzR+7uKh2yatdVjDw7
mBpmjLtUuQNKijO219qtoNL/qR9RbAYzsGy2ctAETl6wL+tlRrCq1dYnlW6C
nOM3f/mLDCCXzK7+KNCD7ECRt2JwBdRF3BY1iHUgeWpNQ6HPg3SpTtAq0YJR
M+9or5YnwObVAy3TLf1gdVyhR0d4X6xDE/WhMrv6E1gw9FzWy9GC5YTStkc1
8yCLlFvKw3XgDc0Jj7z6FVDdlq/iSfQg83xsYXSRAXwx25P5U7gJjkm2mpJb
jSA2Wj/iXG4CE0uyeWk1ZrCnUsCw3LGCuI0pd0neAT2JTE0v1w4uFTXMdkft
ghsMt/dH6ASmw6mMdsw3iAgahueCxqkksGshsmPQjwy+jDzjc83dCTTHkisY
v5HfDxk7LxMo4GHPOpxqRDado99PMSNds5S+tTtIm8xSbCK5gIvsooNaL2RP
WVKa8CwyZtHt2/5ypJwirWFVIkND2CF8AZLGf1Klr0dSvA0BuBj5JeFzfq0C
mVRS7P5BhRxrpgyZ1Ei57qJr3jRSXDEgYy0gvTqvcPlLyEZ81fb6B7KKGpBC
20BaohXb6VtILCe9TWhBrj0zxeM25P9vgX8AA0VQww==
     "]]}, 
   {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-3, 3}, {-16.941708579719684`, 13.006885017752747`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6061103970564847`*^9, 3.6061104216808224`*^9}, 
   3.6061105271895857`*^9, {3.6061106171650224`*^9, 3.6061106319510098`*^9}, {
   3.606110676227031*^9, 3.606110696303022*^9}, 
   3.661398216440269*^9},ExpressionUUID->"04187ff1-f9e5-4a40-a616-\
1e5da44ceb3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fig", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{
       SuperscriptBox["x", "3"], "-", "5"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thin", ",", "Blue", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.606110698059802*^9, 3.6061107260376244`*^9}, {
  3.606110763241482*^9, 
  3.606110764094085*^9}},ExpressionUUID->"3bd6c125-c95a-4e64-9e50-\
b1d28968c72e"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1:eJxF1GtLk3EcgOEddFqWKbpQK3MuC1ke0CJLyTXmqVSYozIxLc9I2VNZ05nC
TDFRcAw12EpFXzgnaqcpyXJTlz1DzWAQiiFOM5k5lDm35ZZW0H7/FzfXN7hp
OffS8kkEAiHlb//MHRBu7O25qByqmo6djLYjj2KyzMdW5NdwtWZ9E5n4xtI1
p0OGyrPS344jrcOnRwvqkI0TuGjaHRngp8M4+yggFsPlBFOdwVvd5vjJICdQ
kcrn0QPJoFZ9XTYTRgKv8qg+EcFEsOyBkyTrFAHsLxMzR+7uKh2yatdVjDw7
mBpmjLtUuQNKijO219qtoNL/qR9RbAYzsGy2ctAETl6wL+tlRrCq1dYnlW6C
nOM3f/mLDCCXzK7+KNCD7ECRt2JwBdRF3BY1iHUgeWpNQ6HPg3SpTtAq0YJR
M+9or5YnwObVAy3TLf1gdVyhR0d4X6xDE/WhMrv6E1gw9FzWy9GC5YTStkc1
8yCLlFvKw3XgDc0Jj7z6FVDdlq/iSfQg83xsYXSRAXwx25P5U7gJjkm2mpJb
jSA2Wj/iXG4CE0uyeWk1ZrCnUsCw3LGCuI0pd0neAT2JTE0v1w4uFTXMdkft
ghsMt/dH6ASmw6mMdsw3iAgahueCxqkksGshsmPQjwy+jDzjc83dCTTHkisY
v5HfDxk7LxMo4GHPOpxqRDado99PMSNds5S+tTtIm8xSbCK5gIvsooNaL2RP
WVKa8CwyZtHt2/5ypJwirWFVIkND2CF8AZLGf1Klr0dSvA0BuBj5JeFzfq0C
mVRS7P5BhRxrpgyZ1Ei57qJr3jRSXDEgYy0gvTqvcPlLyEZ81fb6B7KKGpBC
20BaohXb6VtILCe9TWhBrj0zxeM25P9vgX8AA0VQww==
     "]]}, 
   {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"y\"", TraditionalForm], None}, {
     FormBox["\"x\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-3, 3}, {-16.941708579719684`, 13.006885017752747`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.606110701645874*^9, 3.606110764967716*^9}, 
   3.661398219199642*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
MOn7D2tgmQw=\
\>"],ExpressionUUID->"812a5726-ec5a-4325-8c6f-fa89536ef36e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<d:\\\\tmp.pdf\>\"", ",", "fig"}], "]"}]], "Input",
 CellChangeTimes->{{3.606110765921399*^9, 
  3.6061107983019466`*^9}},ExpressionUUID->"0b7dfc1b-f392-45d2-a418-\
33a14b2ad5da"],

Cell[BoxData["\<\"d:\\\\tmp.pdf\"\>"], "Output",
 CellChangeTimes->{{3.606110786627094*^9, 
  3.606110799368693*^9}},ExpressionUUID->"7df6a107-1b49-4974-8c00-\
e8714c3e14ec"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Animacije", "Subsection",
 CellChangeTimes->{{3.606110821190776*^9, 
  3.606110823301787*^9}},ExpressionUUID->"5bfbf0be-4365-4a32-a7eb-\
23e547aa54b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Krog", "[", 
   RowBox[{"t_", ",", 
    RowBox[{"barva_:", "Red"}]}], "]"}], ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{"{", 
    RowBox[{"barva", ",", 
     RowBox[{"Opacity", "[", "t", "]"}], ",", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", "t"}], "}"}], ",", 
       RowBox[{"1", "+", "t"}]}], "]"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6061108276283693`*^9, 3.6061109725612116`*^9}, {
  3.606111160654928*^9, 
  3.606111174379507*^9}},ExpressionUUID->"3a4d238d-dd83-438f-afe1-\
80512b691814"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Krog", "[", ".1", "]"}]], "Input",
 CellChangeTimes->{{3.6061108999842663`*^9, 3.606110902045369*^9}, {
  3.606110976104701*^9, 3.606110984586731*^9}, {3.606111170371687*^9, 
  3.6061111764578867`*^9}},ExpressionUUID->"80ab641a-824f-45c1-ab65-\
c108e66969aa"],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[1, 0, 0], Opacity[0.1], CircleBox[{0.1, 0.1}, 1.1]}]], "Output",
 CellChangeTimes->{{3.60611090267784*^9, 3.6061109849780345`*^9}, 
   3.6061111768316803`*^9},ExpressionUUID->"fb88a6c1-16f6-4243-ad01-\
ac193adc9327"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Slika", "[", "t_", "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Krog", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Krog", "[", 
       RowBox[{
        RowBox[{"1", "-", "t"}], ",", "Blue"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Krog", "[", 
       RowBox[{"0.5", ",", "Green"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "5"}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.606111035836888*^9, 3.6061111265761213`*^9}, {
  3.606111180816519*^9, 3.6061111817692013`*^9}, {3.606111252379819*^9, 
  3.606111338294389*^9}},ExpressionUUID->"08409b37-e189-48ee-b5bc-\
b3cd75d11838"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Slika", "[", "0.25", "]"}]], "Input",
 CellChangeTimes->{{3.606111111467478*^9, 3.6061111135049267`*^9}, {
  3.6061112438407793`*^9, 
  3.6061112469619675`*^9}},ExpressionUUID->"25b32b47-895b-4ed1-bf28-\
3c9141399d75"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], Opacity[0.25], CircleBox[{0.25, 0.25}, 1.25]}, 
   {RGBColor[0, 0, 1], Opacity[0.75], CircleBox[{0.75, 0.75}, 1.75]}, 
   {RGBColor[0, 1, 0], Opacity[0.5], CircleBox[{0.5, 0.5}, 1.5]}},
  PlotRange->{{-2, 5}, {-2, 5}}]], "Output",
 CellChangeTimes->{{3.6061111138711853`*^9, 3.606111128947325*^9}, 
   3.6061111830530767`*^9, {3.606111244430167*^9, 3.6061112472811937`*^9}, {
   3.6061112804881516`*^9, 3.606111339794456*^9}, 
   3.661398235992653*^9},ExpressionUUID->"35cb2847-2b33-4829-9aa1-\
d5117e6d4d99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Slika", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.606110875269804*^9, 3.606110881785835*^9}, {
  3.6061109895408306`*^9, 3.6061110094199934`*^9}, {3.6061110800491257`*^9, 
  3.6061110873503275`*^9}},ExpressionUUID->"4843592b-549b-482b-9ede-\
d469e23251c4"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0.9192548751831054, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 1}}, Typeset`size$$ = {107., {3., 9.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$40435$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$40435$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`Slika[$CellContext`t$$], 
      "Specifications" :> {{$CellContext`t$$, 0, 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{333., {44., 50.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.606110882231135*^9, 3.606110910015707*^9}, 
   3.6061110098062515`*^9, {3.6061110827550516`*^9, 3.6061111356566043`*^9}, 
   3.6061111854607353`*^9, 3.606111285443119*^9, {3.6061113156940665`*^9, 
   3.6061113415862455`*^9}, 
   3.6613982398086104`*^9},ExpressionUUID->"90c525e6-3c6a-4e68-9517-\
9cf597ca1848"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nekateri viri", "Subtitle",
 CellChangeTimes->{{3.606107518725684*^9, 
  3.6061075205186234`*^9}},ExpressionUUID->"a7f8ee4a-2f2f-4b45-846b-\
f0523951bf95"],

Cell[TextData[{
 ButtonBox["Hands-on Start to ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/broadcast/screencasts/handsonstart/"], None},
  ButtonNote->"https://www.wolfram.com/broadcast/screencasts/handsonstart/"],
 StyleBox[ButtonBox["Mathematica",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/broadcast/screencasts/handsonstart/"], None},
  ButtonNote->"https://www.wolfram.com/broadcast/screencasts/handsonstart/"],
  FontSlant->"Italic"],
 ButtonBox["\n",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/broadcast/screencasts/handsonstart/"], None},
  ButtonNote->"https://www.wolfram.com/broadcast/screencasts/handsonstart/"],
 "\n",
 ButtonBox["Cheat-sheet for ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.physics.sun.ac.za/~htouchette/archive/mathematicacmds1_2.\
pdf"], None},
  ButtonNote->
   "http://www.physics.sun.ac.za/~htouchette/archive/mathematicacmds1_2.pdf"],
 StyleBox[ButtonBox["Mathematica",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.physics.sun.ac.za/~htouchette/archive/mathematicacmds1_2.\
pdf"], None},
  ButtonNote->
   "http://www.physics.sun.ac.za/~htouchette/archive/mathematicacmds1_2.pdf"],
  FontSlant->"Italic"],
 "\n\n",
 ButtonBox["Kaj vse zmore ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://blog.stephenwolfram.com/2014/03/injecting-computation-\
everywhere-a-sxsw-update/"], None},
  ButtonNote->
   "http://blog.stephenwolfram.com/2014/03/injecting-computation-everywhere-a-\
sxsw-update/"],
 StyleBox[ButtonBox["Mathematica",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://blog.stephenwolfram.com/2014/03/injecting-computation-\
everywhere-a-sxsw-update/"], None},
  ButtonNote->
   "http://blog.stephenwolfram.com/2014/03/injecting-computation-everywhere-a-\
sxsw-update/"],
  FontSlant->"Italic"],
 ButtonBox[" (predstavitev od avtorja prve verzije S.Wolfram)",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://blog.stephenwolfram.com/2014/03/injecting-computation-\
everywhere-a-sxsw-update/"], None},
  ButtonNote->
   "http://blog.stephenwolfram.com/2014/03/injecting-computation-everywhere-a-\
sxsw-update/"]
}], "Text",
 CellChangeTimes->{{3.6061075300266294`*^9, 3.606107545663512*^9}, {
  3.6613983034104753`*^9, 3.6613983034124765`*^9}, {3.6613983711546154`*^9, 
  3.6613983926570654`*^9}, {3.6613985840369377`*^9, 
  3.6613986475093203`*^9}},ExpressionUUID->"ff052e03-c870-4309-bc31-\
1569c3d86e6a"],

Cell["", "Text",
 CellChangeTimes->{{3.6066250345581474`*^9, 3.6066250642048893`*^9}, 
   3.6613986134149094`*^9},ExpressionUUID->"125abbf6-4fa0-4457-b003-\
02323285dafc"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1473, 821},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
ShowSelection->True,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info-b521dcfc-9df4-4393-b202-c38112e4badc"->{
  Cell[264957, 5135, 812, 17, 69, "Print",ExpressionUUID->"a6d1403b-a73c-4d23-9001-07bd7b6f9c67",
   CellTags->"Info-b521dcfc-9df4-4393-b202-c38112e4badc"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info-b521dcfc-9df4-4393-b202-c38112e4badc", 527839, 11120}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 41698, 694, 416, "Text",ExpressionUUID->"e865004f-fbe2-4bb7-b2de-f4934fc3c8b5"],
Cell[CellGroupData[{
Cell[42280, 718, 306, 5, 96, "Title",ExpressionUUID->"b7c29c28-5abe-439f-97a7-f49fa7567947"],
Cell[42589, 725, 256, 4, 53, "Subtitle",ExpressionUUID->"32dc2d84-6daf-4cc9-9393-2d7c3130f5a0"],
Cell[42848, 731, 813, 20, 34, "Text",ExpressionUUID->"d7a66635-3eaa-414a-bbb4-fa20bc8ba8c1"],
Cell[CellGroupData[{
Cell[43686, 755, 177, 3, 53, "Subtitle",ExpressionUUID->"b09832ca-0aa2-4088-aee4-b154112256dd"],
Cell[43866, 760, 645, 18, 210, "Text",ExpressionUUID->"8bafd410-cbab-42ed-8a7e-8548731676e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44548, 783, 224, 4, 53, "Subtitle",ExpressionUUID->"247de7e3-91bd-4e67-b30b-689008c8e7d8"],
Cell[CellGroupData[{
Cell[44797, 791, 216, 4, 53, "Subsection",ExpressionUUID->"c3ae06c4-6d7e-4703-b34d-aeaf1ed0f894"],
Cell[45016, 797, 490, 13, 34, "Text",ExpressionUUID->"a57260df-2d2e-4ffa-bb81-6c967dda4009"],
Cell[CellGroupData[{
Cell[45531, 814, 13523, 334, 64, "WolframAlphaShortInput",ExpressionUUID->"d2120484-4385-4b73-8a1c-a3bfea44e5e6"],
Cell[59057, 1150, 252, 6, 32, "Output",ExpressionUUID->"c868f234-c290-4dfc-938c-d51eb49b247e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59346, 1161, 97794, 1871, 82, "WolframAlphaShortInput",ExpressionUUID->"9bf3e8b5-1922-4d40-8bd3-40d920027809"],
Cell[157143, 3034, 6748, 122, 248, "Output",ExpressionUUID->"38560d46-6b68-4ea0-ab62-3d0641656ab7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163928, 3161, 166, 3, 44, "WolframAlphaLong",ExpressionUUID->"d4812d2c-9666-456f-b7ff-911fc742f496"],
Cell[164097, 3166, 98203, 1874, 714, "Print",ExpressionUUID->"a8a09fe9-6375-4b1c-ae40-b85b99dfa85a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[262349, 5046, 220, 7, 53, "Subsection",ExpressionUUID->"e3219830-b293-430f-950c-0db6d6587420"],
Cell[262572, 5055, 375, 10, 34, "Text",ExpressionUUID->"7fc4c027-9942-4d21-9dd7-2216e8e9195b"],
Cell[CellGroupData[{
Cell[262972, 5069, 244, 6, 28, "Input",ExpressionUUID->"5f3b77b0-98dc-429a-8708-d8aaf1b6f566"],
Cell[263219, 5077, 220, 4, 32, "Output",ExpressionUUID->"0779d4f8-1996-44c9-a52c-db38aa56bc8e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[263488, 5087, 177, 3, 53, "Subsection",ExpressionUUID->"a3072b64-93f1-47b4-951e-274748af93e5"],
Cell[CellGroupData[{
Cell[263690, 5094, 156, 3, 28, "Input",ExpressionUUID->"d0f37529-24a3-48e4-a302-34754bdff9d6"],
Cell[263849, 5099, 213, 4, 32, "Output",ExpressionUUID->"f862c636-c0e9-4b61-9dc3-ae4decf844e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264099, 5108, 421, 10, 28, "Input",ExpressionUUID->"7827f5bc-bd91-4bac-a3a4-04f8ec4d9d38"],
Cell[264523, 5120, 224, 4, 32, "Output",ExpressionUUID->"d9dd6fa8-f985-4ee8-a884-2c18eb853d76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264784, 5129, 170, 4, 28, "Input",ExpressionUUID->"c5b542e7-1bc1-46f9-9cf3-8a4a2874ecef"],
Cell[264957, 5135, 812, 17, 69, "Print",ExpressionUUID->"a6d1403b-a73c-4d23-9001-07bd7b6f9c67",
 CellTags->"Info-b521dcfc-9df4-4393-b202-c38112e4badc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265806, 5157, 207, 5, 28, "Input",ExpressionUUID->"e982beaa-2876-4318-a217-2adf62571660"],
Cell[266016, 5164, 241, 4, 32, "Output",ExpressionUUID->"e3baaad4-94e1-4e80-8851-b39b08b45d09"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[266306, 5174, 174, 3, 53, "Subsection",ExpressionUUID->"0330d605-38f9-49a8-9abf-e3cfeb37843d"],
Cell[CellGroupData[{
Cell[266505, 5181, 232, 5, 28, "Input",ExpressionUUID->"3568433e-108e-453b-ba1a-ae73d3678530"],
Cell[266740, 5188, 270, 5, 32, "Output",ExpressionUUID->"f61ad23d-370b-40a0-a53a-93be3ec1cae9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267047, 5198, 587, 14, 67, "Input",ExpressionUUID->"ee12062d-2229-4d23-842a-be12ef45fd0b"],
Cell[267637, 5214, 338, 6, 32, "Output",ExpressionUUID->"fbca967c-7b1a-46fa-a833-2abda14dd81e"],
Cell[267978, 5222, 336, 6, 32, "Output",ExpressionUUID->"b74f033a-45a1-459b-9e45-bdb400743a85"],
Cell[268317, 5230, 318, 7, 52, "Output",ExpressionUUID->"ddc0d519-7887-4447-9a19-df775537c6b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268672, 5242, 380, 9, 28, "Input",ExpressionUUID->"b6676321-abcf-4601-8117-d8fe35274b89"],
Cell[269055, 5253, 302, 5, 32, "Output",ExpressionUUID->"0fc81e5b-7f29-4965-b160-91823ffe699e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[269418, 5265, 177, 3, 53, "Subtitle",ExpressionUUID->"45a49e91-9b43-49d3-9ef8-fa9eedca4b72"],
Cell[CellGroupData[{
Cell[269620, 5272, 167, 3, 53, "Subsection",ExpressionUUID->"7ac042c4-d5bb-4576-bd0d-f7a59a6c06cf"],
Cell[CellGroupData[{
Cell[269812, 5279, 393, 10, 28, "Input",ExpressionUUID->"5bd51afd-81a6-4d4f-af17-ce11f3e85f48"],
Cell[270208, 5291, 205, 4, 32, "Output",ExpressionUUID->"3c69072b-f8b0-4550-a197-71404f78a88b"]
}, Open  ]],
Cell[270428, 5298, 438, 11, 28, "Input",ExpressionUUID->"dd37c008-bb6c-485f-8901-299ac77abeed"],
Cell[CellGroupData[{
Cell[270891, 5313, 253, 6, 28, "Input",ExpressionUUID->"4c8438ba-78a0-412c-8ce2-de0cd7a53218"],
Cell[271147, 5321, 181, 3, 32, "Output",ExpressionUUID->"ee539b9c-22a3-4478-ad78-b847d62d0854"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271365, 5329, 354, 9, 48, "Input",ExpressionUUID->"33ca6cfe-67a3-4dd3-aad8-23e7a8952343"],
Cell[271722, 5340, 156, 3, 32, "Output",ExpressionUUID->"70b32893-e0e6-46c6-8eb6-71f552c858ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271915, 5348, 129, 3, 28, "Input",ExpressionUUID->"a0c75aff-d4dc-4f82-8f98-daa342c8185b"],
Cell[272047, 5353, 154, 3, 32, "Output",ExpressionUUID->"17cb773c-3e20-4896-bfce-0c3857f01e15"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[272250, 5362, 171, 3, 53, "Subsection",ExpressionUUID->"9c750316-394c-4533-8189-d4d1f2617a7d"],
Cell[CellGroupData[{
Cell[272446, 5369, 131, 3, 28, "Input",ExpressionUUID->"6a39a7e8-de04-467d-ac44-1656b0f8f75e"],
Cell[272580, 5374, 152, 3, 32, "Output",ExpressionUUID->"f4f17b92-cb68-4a00-82d8-2aaa90f19971"]
}, Open  ]],
Cell[272747, 5380, 175, 4, 28, "Input",ExpressionUUID->"23356890-9359-4c2d-972c-53ff8e997792"],
Cell[CellGroupData[{
Cell[272947, 5388, 129, 3, 28, "Input",ExpressionUUID->"d60d749d-0819-485e-836f-eedb691cedec"],
Cell[273079, 5393, 156, 3, 32, "Output",ExpressionUUID->"badd78b5-b9ad-433d-a994-0420c27ba3c9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[273284, 5402, 160, 3, 53, "Subsection",ExpressionUUID->"a10850c8-4d82-447e-b007-d222ce8dc6f1"],
Cell[CellGroupData[{
Cell[273469, 5409, 186, 4, 28, "Input",ExpressionUUID->"34ae822a-49f1-4f72-99c5-a2f9472c53a9"],
Cell[273658, 5415, 159, 3, 32, "Output",ExpressionUUID->"ca40af49-8d64-41bc-b87e-b192024ed48f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273854, 5423, 240, 6, 32, "Input",ExpressionUUID->"717ee7c0-e25d-4074-8634-b1c5306fd33c"],
Cell[274097, 5431, 247, 6, 42, "Output",ExpressionUUID->"c8c830a5-22d5-4717-84b2-aabf2c9f6a90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274381, 5442, 272, 7, 32, "Input",ExpressionUUID->"8c9cba17-762a-4400-a01e-7e4c062b7f41"],
Cell[274656, 5451, 217, 5, 42, "Output",ExpressionUUID->"d6f059f8-472c-4721-9823-00ab86d55f42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274910, 5461, 284, 7, 28, "Input",ExpressionUUID->"49351a34-daa8-48c0-be9a-e53c638a1e1e"],
Cell[275197, 5470, 184, 3, 32, "Output",ExpressionUUID->"d8c78770-96ae-4c46-b167-fdfbf1125e01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275418, 5478, 183, 4, 28, "Input",ExpressionUUID->"42176845-15a7-452e-97cc-a9fdddcd641d"],
Cell[275604, 5484, 182, 3, 32, "Output",ExpressionUUID->"4a7dcde0-9d60-40b3-8291-6d4c881ed5d2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[275835, 5493, 221, 4, 53, "Subsection",ExpressionUUID->"55ba6754-44b9-4f2b-8c19-e63d8ee2fda8"],
Cell[CellGroupData[{
Cell[276081, 5501, 363, 10, 32, "Input",ExpressionUUID->"62f11d13-1afd-4114-92c4-95091a604f23"],
Cell[276447, 5513, 160, 3, 32, "Output",ExpressionUUID->"a2e876ee-84b2-4a36-b263-b84407e1ba81"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276644, 5521, 305, 8, 28, "Input",ExpressionUUID->"1116eb9e-5b5f-4bd2-8200-287ad36112bf"],
Cell[276952, 5531, 157, 3, 32, "Output",ExpressionUUID->"10c7b16e-e856-4aa7-9d04-7ff36f08e23a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[277170, 5541, 168, 3, 53, "Subtitle",ExpressionUUID->"dcbad1d4-cedb-405d-962f-34bc36b63eae"],
Cell[CellGroupData[{
Cell[277363, 5548, 346, 8, 28, "Input",ExpressionUUID->"500d7fcd-601d-432a-a2a4-c39afea87629"],
Cell[277712, 5558, 165, 4, 32, "Output",ExpressionUUID->"55d3b98a-6c22-4da8-b425-2f45bb671726"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277914, 5567, 339, 8, 48, "Input",ExpressionUUID->"cccf3b68-8535-40ee-b501-402570ed3924"],
Cell[278256, 5577, 165, 4, 32, "Output",ExpressionUUID->"dc6822d7-24fb-4146-a02d-574c2c72f03f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278458, 5586, 215, 4, 28, "Input",ExpressionUUID->"0aeaa867-fc70-457e-84bc-7d124fdac377"],
Cell[278676, 5592, 208, 4, 32, "Output",ExpressionUUID->"ac186e35-c369-4434-a4ed-c4221c6118a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278921, 5601, 488, 12, 28, "Input",ExpressionUUID->"5dc07ca4-5be4-40a5-a18b-94612ec11fd7"],
Cell[279412, 5615, 176, 3, 32, "Output",ExpressionUUID->"b3209676-3a0f-42da-abea-78b0f54efcda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279625, 5623, 330, 7, 28, "Input",ExpressionUUID->"c14e38bb-981e-40a4-ac09-ab0234814706"],
Cell[279958, 5632, 176, 3, 32, "Output",ExpressionUUID->"5b6ebe1a-896c-4d2d-9700-23122598ec61"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[280183, 5641, 167, 3, 53, "Subtitle",ExpressionUUID->"94687cb6-a037-401d-b050-bea65e5663dc"],
Cell[280353, 5646, 423, 15, 232, "Text",ExpressionUUID->"c8e49172-87e2-4f3a-ae49-9cf0b4c052c4"],
Cell[CellGroupData[{
Cell[280801, 5665, 296, 6, 48, "Input",ExpressionUUID->"00b2585d-a01e-4698-a425-d02213b5a9ae"],
Cell[281100, 5673, 212, 4, 32, "Output",ExpressionUUID->"f2639845-3908-4882-9211-e2ba410ec219"],
Cell[281315, 5679, 209, 4, 32, "Output",ExpressionUUID->"7befcee8-fc4b-4d07-8aeb-defd56136221"]
}, Open  ]],
Cell[281539, 5686, 160, 3, 34, "Text",ExpressionUUID->"e96d41af-6959-4ec4-b667-aa86580af819"],
Cell[281702, 5691, 328, 9, 28, "Input",ExpressionUUID->"43d308d9-8ca1-462c-ba41-912382657a9c"],
Cell[CellGroupData[{
Cell[282055, 5704, 184, 4, 28, "Input",ExpressionUUID->"202f5263-ae33-4d5e-9919-a4139ada1e24"],
Cell[282242, 5710, 177, 3, 32, "Output",ExpressionUUID->"be270845-10d9-4b3e-81c1-d8dcae40c9c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282456, 5718, 184, 4, 28, "Input",ExpressionUUID->"b52c4cbe-7605-4569-abb4-a1ca40eca6a8"],
Cell[282643, 5724, 222, 6, 34, "Output",ExpressionUUID->"83928800-1a87-4b5b-8c9e-b4ace36ec421"]
}, Open  ]],
Cell[282880, 5733, 168, 3, 34, "Text",ExpressionUUID->"6f2b903f-0995-42f8-88c0-516d486de3aa"],
Cell[283051, 5738, 228, 5, 28, "Input",ExpressionUUID->"d9e3b368-2e23-4010-861f-d197b0f37efc"],
Cell[CellGroupData[{
Cell[283304, 5747, 182, 4, 28, "Input",ExpressionUUID->"64a6cc16-29cb-4f37-914e-e8580fd722a1"],
Cell[283489, 5753, 256, 5, 32, "Output",ExpressionUUID->"cdddbd71-8f05-4d3d-a64a-28ad8a26e065"]
}, Open  ]],
Cell[283760, 5761, 280, 6, 34, "Text",ExpressionUUID->"5b7671d2-35ff-4909-ae19-49c57c8e8501"],
Cell[284043, 5769, 297, 8, 28, "Input",ExpressionUUID->"0f23520b-87be-4009-8288-312fa9fff70d"],
Cell[CellGroupData[{
Cell[284365, 5781, 214, 5, 28, "Input",ExpressionUUID->"fbf5e581-a17f-4178-ac27-de6c156f01b0"],
Cell[284582, 5788, 207, 4, 32, "Output",ExpressionUUID->"4a62d1f1-50b9-4d38-84a4-ba3810439ff9"]
}, Open  ]],
Cell[284804, 5795, 162, 3, 34, "Text",ExpressionUUID->"20f42e75-eadc-4f6c-81c0-a6e9cde20d91"],
Cell[CellGroupData[{
Cell[284991, 5802, 182, 4, 28, "Input",ExpressionUUID->"e6b48728-ec2b-447c-846a-6c210e688a38"],
Cell[285176, 5808, 251, 6, 34, "Output",ExpressionUUID->"f07a1ea8-808f-4dd1-af18-7afee933b005"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285464, 5819, 285, 7, 28, "Input",ExpressionUUID->"837ecb7b-eb18-4fc7-bc8f-d3daa328f93c"],
Cell[285752, 5828, 355, 8, 34, "Output",ExpressionUUID->"2befab07-d18d-4b0d-8aec-f95040ba9b94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286144, 5841, 235, 6, 28, "Input",ExpressionUUID->"c5ca046a-0731-41cd-8268-fbaf0373220f"],
Cell[286382, 5849, 180, 3, 32, "Output",ExpressionUUID->"10f6f1dc-e966-4abb-a7bc-fd650bd13c78"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286599, 5857, 258, 7, 28, "Input",ExpressionUUID->"2f67ebec-98a1-460a-b4ee-129c79ea52fd"],
Cell[286860, 5866, 179, 4, 34, "Output",ExpressionUUID->"e9a92ba1-e423-4c12-a8ef-1e8b3d481f7d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[287088, 5876, 153, 3, 53, "Subtitle",ExpressionUUID->"85486743-7e37-46fc-8938-03c796e52844"],
Cell[287244, 5881, 160, 3, 34, "Text",ExpressionUUID->"df62daec-d26f-4403-b9d8-20cc5146f9ac"],
Cell[CellGroupData[{
Cell[287429, 5888, 239, 6, 28, "Input",ExpressionUUID->"a19e2fa4-8047-49b0-8472-bf95b10eac10"],
Cell[287671, 5896, 211, 5, 32, "Output",ExpressionUUID->"b7867d66-8a82-4f0a-8e67-ef3ac205a549"]
}, Open  ]],
Cell[287897, 5904, 221, 5, 48, "Input",ExpressionUUID->"5eb96504-c5f4-4f92-94f5-1a3c04352a90"],
Cell[CellGroupData[{
Cell[288143, 5913, 292, 8, 28, "Input",ExpressionUUID->"454fa910-7fbe-46fb-8a5b-1f7914ed713d"],
Cell[288438, 5923, 281, 7, 32, "Output",ExpressionUUID->"08979879-e2ac-480e-a7d1-58866e3ca80c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288756, 5935, 132, 2, 28, "Input",ExpressionUUID->"6714bffd-63f0-44b1-803d-1bbe090449b7"],
Cell[288891, 5939, 186, 4, 32, "Output",ExpressionUUID->"1938606a-1301-475d-ab8a-876063ae9635"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289114, 5948, 289, 7, 28, "Input",ExpressionUUID->"a154d02f-bf9c-4ae9-96a6-c6a0206d391e"],
Cell[289406, 5957, 205, 4, 32, "Output",ExpressionUUID->"1845c96b-fcd1-483e-8ecf-7f8c2cb6fa2f"]
}, Open  ]],
Cell[289626, 5964, 158, 3, 34, "Text",ExpressionUUID->"eed2325a-83d6-4f19-ae0e-7fc8868f6bb0"],
Cell[CellGroupData[{
Cell[289809, 5971, 328, 9, 28, "Input",ExpressionUUID->"9ad8bbf0-0171-484e-8462-6f9feafce5ea"],
Cell[290140, 5982, 375, 8, 32, "Output",ExpressionUUID->"2767e056-466a-40d2-ab40-2c3b1b570638"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290552, 5995, 356, 10, 28, "Input",ExpressionUUID->"6e9e3103-9158-4cbc-80c7-3f1bbb72e9b0"],
Cell[290911, 6007, 1851, 65, 36, "Output",ExpressionUUID->"5434b85d-bb73-4d18-8249-681a9349d96d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292799, 6077, 292, 8, 28, "Input",ExpressionUUID->"c4543714-a88a-482a-9f26-70a1eaca185b"],
Cell[293094, 6087, 346, 10, 32, "Output",ExpressionUUID->"4ab45e10-9756-4dcb-b90a-1f92975617f4"]
}, Open  ]],
Cell[293455, 6100, 211, 4, 34, "Text",ExpressionUUID->"140b6377-aaa1-43bf-ad1a-bed6751d2108"],
Cell[CellGroupData[{
Cell[293691, 6108, 381, 11, 28, "Input",ExpressionUUID->"27c2c609-733e-4742-a0c9-fe94d7a07287"],
Cell[294075, 6121, 784, 25, 32, "Output",ExpressionUUID->"8511aa52-72f7-4bf9-8143-8d85245f9672"]
}, Open  ]],
Cell[294874, 6149, 194, 3, 34, "Text",ExpressionUUID->"27d513b9-e773-4b0c-b8b8-6f403135986e"],
Cell[CellGroupData[{
Cell[295093, 6156, 301, 8, 28, "Input",ExpressionUUID->"14d3be5d-9d41-4fdc-9a07-93046d39fedf"],
Cell[295397, 6166, 480, 15, 32, "Output",ExpressionUUID->"9d0b3a74-34db-4adb-8e64-adbc46949bc2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295914, 6186, 193, 4, 28, "Input",ExpressionUUID->"bba64775-30fe-4986-8d9c-a2688c813782"],
Cell[296110, 6192, 889, 28, 184, "Output",ExpressionUUID->"9608240b-0ab7-4ed9-9bca-0d183819dcbd"]
}, Open  ]],
Cell[297014, 6223, 156, 3, 34, "Text",ExpressionUUID->"5460b0cc-70ed-4df1-bebc-92efd0fbdda7"],
Cell[CellGroupData[{
Cell[297195, 6230, 308, 9, 61, "Input",ExpressionUUID->"4bdcd823-2ace-4b99-bd48-ef9707070a2c"],
Cell[297506, 6241, 384, 11, 32, "Output",ExpressionUUID->"0aa62cf3-61a1-43d0-a048-b0a37bf9904f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297927, 6257, 189, 4, 28, "Input",ExpressionUUID->"a86b2d23-b0f5-4713-9a76-9cf0bf60cb2f"],
Cell[298119, 6263, 743, 21, 65, "Output",ExpressionUUID->"fddf234f-49b9-4f22-86bc-ddeddb3f6591"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298899, 6289, 188, 4, 28, "Input",ExpressionUUID->"790437f7-4cc0-4c4a-8fb1-8d5204c2c00f"],
Cell[299090, 6295, 249, 11, 128, "Output",ExpressionUUID->"f8a0e673-b6ea-43c4-979a-4f479889185a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[299388, 6312, 187, 3, 53, "Subtitle",ExpressionUUID->"43623bb2-6e24-43f4-b77f-ac62a157e947"],
Cell[CellGroupData[{
Cell[299600, 6319, 175, 3, 53, "Subsection",ExpressionUUID->"2bb18477-abbc-4ae4-baa2-d6c971435b7b"],
Cell[CellGroupData[{
Cell[299800, 6326, 213, 5, 28, "Input",ExpressionUUID->"552db1bb-1f93-4dfb-b34c-dc64e00b5514"],
Cell[300016, 6333, 221, 5, 52, "Output",ExpressionUUID->"0d4a4134-7cc5-4522-8d66-9b3a359cc60a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300274, 6343, 519, 12, 28, "Input",ExpressionUUID->"2605aeac-0fc0-468b-b6b4-eb41bcc65cc7"],
Cell[300796, 6357, 474, 11, 32, "Output",ExpressionUUID->"17f1614f-aa5b-4c1b-9a03-899558958da1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301307, 6373, 420, 11, 28, "Input",ExpressionUUID->"c5d86372-b7c3-4846-af20-b054d5675bc7"],
Cell[301730, 6386, 257, 4, 32, "Output",ExpressionUUID->"f3ad1295-07b6-4026-bf01-54d67838efe3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302024, 6395, 486, 14, 28, "Input",ExpressionUUID->"b970eca6-f8f9-48b4-b310-06c3e9d6ab5c"],
Cell[302513, 6411, 311, 8, 32, "Output",ExpressionUUID->"39591c02-b1fc-43d0-8a3d-d96129ac08c8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[302873, 6425, 169, 3, 53, "Subsection",ExpressionUUID->"f39a4ebe-a9b5-41f2-af44-ad3a88583de6"],
Cell[303045, 6430, 493, 16, 28, "Input",ExpressionUUID->"0057952e-9489-4e9d-8f51-16f9628fcf61"],
Cell[CellGroupData[{
Cell[303563, 6450, 299, 8, 28, "Input",ExpressionUUID->"520e4e75-27be-476c-a8d9-43a8623ffd0f"],
Cell[303865, 6460, 2787, 59, 232, "Output",ExpressionUUID->"570f37b4-5753-4c34-be6b-ed1767dc942a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[306713, 6526, 178, 3, 53, "Subtitle",ExpressionUUID->"5207843b-5fdf-4567-93f7-8ff45d796a28"],
Cell[CellGroupData[{
Cell[306916, 6533, 174, 3, 53, "Subsection",ExpressionUUID->"dc73b888-4f0e-4542-9535-e47bd065ff71"],
Cell[CellGroupData[{
Cell[307115, 6540, 258, 7, 32, "Input",ExpressionUUID->"934ed2c7-ef25-4f9b-8871-e617126893f3"],
Cell[307376, 6549, 316, 8, 32, "Output",ExpressionUUID->"ac22a710-c720-46df-b03b-f7b747bb5ebf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307729, 6562, 189, 4, 28, "Input",ExpressionUUID->"df88dda9-7283-44d7-b72f-cf76f9260259"],
Cell[307921, 6568, 268, 6, 32, "Output",ExpressionUUID->"fa1afe0c-bab1-4b26-b8d6-9bf0af0bf1c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308226, 6579, 310, 10, 28, "Input",ExpressionUUID->"6547cc4a-22a8-4414-a72c-dabbf7c39508"],
Cell[308539, 6591, 776, 26, 59, "Output",ExpressionUUID->"738ca559-21fc-413d-b284-af8b8584dcc4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309352, 6622, 426, 13, 28, "Input",ExpressionUUID->"415e9341-318c-4966-ba3e-3980a3a3eaf0"],
Cell[309781, 6637, 251, 6, 50, "Output",ExpressionUUID->"1cec9b07-acd4-4c96-bed3-d30d9531f4a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310069, 6648, 353, 10, 32, "Input",ExpressionUUID->"fa556c0f-c90b-42e3-a4ff-6cb86959517e"],
Cell[310425, 6660, 698, 22, 49, "Output",ExpressionUUID->"fe167ad4-be2d-4808-82d6-031d45883a7a"]
}, Open  ]],
Cell[311138, 6685, 218, 4, 34, "Text",ExpressionUUID->"93847ebb-4e01-4bff-949c-0ae9a186de26"],
Cell[CellGroupData[{
Cell[311381, 6693, 182, 4, 28, "Input",ExpressionUUID->"65f1e1df-d0bc-4e05-a505-5faec40313eb"],
Cell[311566, 6699, 524, 18, 49, "Output",ExpressionUUID->"1ed6a074-1579-47c5-957c-1db2a30005c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312127, 6722, 229, 6, 28, "Input",ExpressionUUID->"28031c24-f5f0-4597-841c-7e161bb4eb7e"],
Cell[312359, 6730, 304, 9, 49, "Output",ExpressionUUID->"eff4e361-b0d3-40f1-a80b-9a009a1a2174"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[312712, 6745, 171, 3, 53, "Subsection",ExpressionUUID->"79c343fd-b002-455d-b4e9-7399ccec1d9a"],
Cell[CellGroupData[{
Cell[312908, 6752, 484, 14, 48, "Input",ExpressionUUID->"fdddded0-f72e-4c44-bf07-00b65b194b8a"],
Cell[313395, 6768, 5869, 108, 240, "Output",ExpressionUUID->"1c377547-73bd-4bbb-a88b-df4753a17c8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319301, 6881, 383, 11, 28, "Input",ExpressionUUID->"83bd9ac5-4e20-4aa8-bccc-1e39165d8d93"],
Cell[319687, 6894, 294, 7, 32, "Output",ExpressionUUID->"2095c90f-c091-4226-a6f0-b1dfe9088aff"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[320030, 6907, 178, 3, 53, "Subsection",ExpressionUUID->"7a2e21d8-111b-4e60-9b5d-b8ddb35f62b5"],
Cell[320211, 6912, 175, 3, 34, "Text",ExpressionUUID->"a3096f3b-b3dd-4a9a-946e-ad396748823f"],
Cell[CellGroupData[{
Cell[320411, 6919, 738, 18, 28, "Input",ExpressionUUID->"026a6c45-c3e8-4339-9730-145fb63f8714"],
Cell[321152, 6939, 1484, 46, 59, "Output",ExpressionUUID->"fc062527-7e4d-48ac-b381-3daa740103c2"]
}, Open  ]],
Cell[322651, 6988, 169, 3, 34, "Text",ExpressionUUID->"d62e074e-c431-414d-a8f0-6e76bcbe3c08"],
Cell[CellGroupData[{
Cell[322845, 6995, 1094, 29, 48, "Input",ExpressionUUID->"6d1525d5-38dc-4deb-9451-70093dd56049"],
Cell[323942, 7026, 1988, 60, 59, "Output",ExpressionUUID->"6bd36cbb-93b0-4c8b-b0c5-46758ca7fa0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325967, 7091, 344, 10, 28, "Input",ExpressionUUID->"65b96d4c-84d9-4e51-bb7e-2da93b89fa14"],
Cell[326314, 7103, 1615, 53, 59, "Output",ExpressionUUID->"6979962e-012a-4b8b-a0dd-d632a2d29c7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327966, 7161, 220, 5, 28, "Input",ExpressionUUID->"238351cb-12be-44da-b9f0-71e64cfa6d44"],
Cell[328189, 7168, 1019, 33, 60, "Output",ExpressionUUID->"7e17edb1-c0f4-4a82-b376-49bd34db2dc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329245, 7206, 383, 10, 28, "Input",ExpressionUUID->"371fa98c-5119-4ce4-b55a-6ab95abcadf6"],
Cell[329631, 7218, 43384, 723, 229, "Output",ExpressionUUID->"de5be73a-f35a-4e0e-b7e6-ac0139fbc773"]
}, Open  ]],
Cell[373030, 7944, 181, 3, 34, "Text",ExpressionUUID->"0bd7cd45-9386-4380-beed-bfc9e869b14d"],
Cell[CellGroupData[{
Cell[373236, 7951, 368, 10, 28, "Input",ExpressionUUID->"ea72e6b3-bac6-4f2f-8e90-b85c71104d9f"],
Cell[373607, 7963, 1348, 22, 23, "Message",ExpressionUUID->"04ddd713-3788-4b22-8afe-4436284f70d5"],
Cell[374958, 7987, 9408, 190, 74, "Output",ExpressionUUID->"83be7b0c-c05d-4b86-b2df-baad94638650"]
}, Open  ]],
Cell[CellGroupData[{
Cell[384403, 8182, 334, 9, 28, "Input",ExpressionUUID->"176bb8b9-fcd5-4fc9-a4e8-fe12b1efe190"],
Cell[384740, 8193, 755, 22, 32, "Output",ExpressionUUID->"b79a2011-03e1-4aa9-af8f-2eb3e9cea0a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[385532, 8220, 402, 11, 28, "Input",ExpressionUUID->"baad59fe-8595-45df-8fd5-88be6ae7c21b"],
Cell[385937, 8233, 11700, 229, 74, "Output",ExpressionUUID->"8ecde13c-2fec-4f6a-8c06-33c9f03514a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397674, 8467, 321, 10, 28, "Input",ExpressionUUID->"cbb0af53-0b39-4b12-960c-1980d16fcdbb"],
Cell[397998, 8479, 11320, 224, 74, "Output",ExpressionUUID->"7a709b0b-8ed6-430e-b47e-2e15e1b4107a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409355, 8708, 234, 5, 28, "Input",ExpressionUUID->"458d37b1-a0e6-427d-8746-14557779400a"],
Cell[409592, 8715, 221, 4, 32, "Output",ExpressionUUID->"10d7fb7d-ae70-4735-8030-ba3632348769"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409850, 8724, 475, 14, 28, "Input",ExpressionUUID->"69f84d5f-4544-429d-82af-18be36787940"],
Cell[410328, 8740, 42788, 715, 230, "Output",ExpressionUUID->"ca0e2878-4d63-41f3-bbde-382a9755b1f3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[453177, 9462, 181, 3, 53, "Subtitle",ExpressionUUID->"6681ef0d-ced5-4a6f-8a41-9938ac97b883"],
Cell[453361, 9467, 148, 3, 34, "Text",ExpressionUUID->"36d24ece-a396-4a1d-8d71-a3d6bda713be"],
Cell[CellGroupData[{
Cell[453534, 9474, 285, 7, 28, "Input",ExpressionUUID->"de9656ff-ccce-4fe7-8c20-83a3496f68f4"],
Cell[453822, 9483, 233, 5, 32, "Output",ExpressionUUID->"43fe9318-0a36-49cc-9a51-5c966afe8ede"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454092, 9493, 191, 4, 28, "Input",ExpressionUUID->"c73320b4-6f96-46fb-a6f5-a82895e63b7d"],
Cell[454286, 9499, 768, 23, 65, "Output",ExpressionUUID->"7d83b900-b227-43fa-a204-9b2816e1b5f3"]
}, Open  ]],
Cell[455069, 9525, 226, 5, 34, "Text",ExpressionUUID->"cebf7073-ebc4-4574-9f1d-cbd16f12c4c3"],
Cell[CellGroupData[{
Cell[455320, 9534, 537, 12, 61, "Input",ExpressionUUID->"7fb77cce-eda5-4394-a3d8-28a2f9dc562b"],
Cell[455860, 9548, 485, 12, 32, "Output",ExpressionUUID->"2365bd38-813b-4f67-a408-246017f77ece"]
}, Open  ]],
Cell[456360, 9563, 180, 3, 34, "Text",ExpressionUUID->"f5ea5920-e030-4d07-8fac-0aeec536f44f"],
Cell[CellGroupData[{
Cell[456565, 9570, 228, 5, 28, "Input",ExpressionUUID->"6018baa7-400d-41ca-86e2-1facaa4fa474"],
Cell[456796, 9577, 462, 12, 32, "Output",ExpressionUUID->"f10863f9-6b82-4dad-956b-30f4c749ea82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457295, 9594, 193, 4, 28, "Input",ExpressionUUID->"3bd86f0f-9b6f-4787-8ce4-897853e51477"],
Cell[457491, 9600, 957, 29, 65, "Output",ExpressionUUID->"bacb3058-5f2f-4b5e-8efd-78616ce51f11"]
}, Open  ]],
Cell[458463, 9632, 161, 3, 34, "Text",ExpressionUUID->"63f42505-a62f-4b92-ab35-56135854a321"],
Cell[CellGroupData[{
Cell[458649, 9639, 264, 6, 28, "Input",ExpressionUUID->"ca05f6c8-f96c-4956-b662-e1ffdbe98fea"],
Cell[458916, 9647, 308, 7, 32, "Output",ExpressionUUID->"f2a0c4ec-e462-47e2-b685-a85f5ea745aa"]
}, Open  ]],
Cell[459239, 9657, 164, 3, 34, "Text",ExpressionUUID->"44bb3d06-9331-49be-bd46-9b1d009e694d"],
Cell[CellGroupData[{
Cell[459428, 9664, 214, 5, 28, "Input",ExpressionUUID->"2d793ac1-adcd-40d1-879a-88a3b4db6ed3"],
Cell[459645, 9671, 780, 20, 32, "Output",ExpressionUUID->"7a91adb8-8a04-46d3-9f56-bf1f51bec617"]
}, Open  ]],
Cell[460440, 9694, 162, 3, 34, "Text",ExpressionUUID->"457a5a8b-0103-48e4-9dda-a19f8c4c5534"],
Cell[CellGroupData[{
Cell[460627, 9701, 278, 6, 28, "Input",ExpressionUUID->"a920f238-44e8-41ef-841e-524133e6773e"],
Cell[460908, 9709, 797, 22, 65, "Output",ExpressionUUID->"fd38cb78-7dcb-4091-afd4-5247f28b0521"]
}, Open  ]],
Cell[461720, 9734, 150, 3, 34, "Text",ExpressionUUID->"7050d49b-5dd8-491f-8caf-ca2ecdd204ab"],
Cell[CellGroupData[{
Cell[461895, 9741, 221, 5, 28, "Input",ExpressionUUID->"50acc6f3-1c7a-483b-9690-b48ac1a20a2a"],
Cell[462119, 9748, 966, 27, 92, "Output",ExpressionUUID->"826a3479-0fba-4501-a10b-21b02136add5"]
}, Open  ]],
Cell[463100, 9778, 170, 3, 34, "Text",ExpressionUUID->"1256b8b3-76cb-4629-9eee-73d6faefe665"],
Cell[CellGroupData[{
Cell[463295, 9785, 273, 7, 28, "Input",ExpressionUUID->"bf2abdfa-0ad4-449d-aea9-bbb58949025d"],
Cell[463571, 9794, 533, 15, 32, "Output",ExpressionUUID->"8b2e438a-de5d-4587-9c6c-2e81b42286fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[464141, 9814, 160, 3, 28, "Input",ExpressionUUID->"8366cbf5-f4f4-4cd7-86c2-45f8446dd4ac"],
Cell[464304, 9819, 209, 5, 32, "Output",ExpressionUUID->"61004107-9f75-47e2-986b-93760cc81b5f"]
}, Open  ]],
Cell[464528, 9827, 158, 3, 34, "Text",ExpressionUUID->"0102cb8b-1025-4109-bc67-de590af328bc"],
Cell[CellGroupData[{
Cell[464711, 9834, 184, 4, 28, "Input",ExpressionUUID->"295a89b4-7529-4e01-9069-4b3796a8e50a"],
Cell[464898, 9840, 179, 4, 32, "Output",ExpressionUUID->"0ccf967f-63d7-4e09-b94f-fe42a843f04f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[465126, 9850, 171, 3, 53, "Subtitle",ExpressionUUID->"59e96f67-5df9-4938-a8f6-bd38d96ff111"],
Cell[CellGroupData[{
Cell[465322, 9857, 154, 3, 53, "Subsection",ExpressionUUID->"acf8a2c1-7440-4b23-b14e-0133b227365d"],
Cell[CellGroupData[{
Cell[465501, 9864, 389, 12, 32, "Input",ExpressionUUID->"0e749c10-837a-4ab2-9cd3-0159c6bc3860"],
Cell[465893, 9878, 10460, 184, 240, "Output",ExpressionUUID->"6c04c193-e4db-41f0-a3e2-968bdb66aa68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476390, 10067, 320, 10, 32, "Input",ExpressionUUID->"42d32fd3-2d81-43d5-af36-688edfe804da"],
Cell[476713, 10079, 10435, 184, 240, "Output",ExpressionUUID->"fc646633-0e0d-4e57-8327-5c4a6aab9c2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487185, 10268, 193, 4, 28, "Input",ExpressionUUID->"36639dd9-118e-4a6d-ad48-5520270d4a63"],
Cell[487381, 10274, 3930, 82, 212, "Output",ExpressionUUID->"6c3905c2-1d6d-4d50-8846-595366dc814a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[491348, 10361, 796, 21, 32, "Input",ExpressionUUID->"ae97362a-61c6-4ba7-8bb3-6e38307f45c6"],
Cell[492147, 10384, 10555, 185, 240, "Output",ExpressionUUID->"04187ff1-f9e5-4a40-a616-1e5da44ceb3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502739, 10574, 931, 26, 56, "Input",ExpressionUUID->"3bd6c125-c95a-4e64-9e50-b1d28968c72e"],
Cell[503673, 10602, 14584, 252, 250, 10342, 182, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"812a5726-ec5a-4325-8c6f-fa89536ef36e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[518294, 10859, 232, 5, 28, "Input",ExpressionUUID->"0b7dfc1b-f392-45d2-a418-33a14b2ad5da"],
Cell[518529, 10866, 174, 3, 32, "Output",ExpressionUUID->"7df6a107-1b49-4974-8c00-e8714c3e14ec"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[518752, 10875, 157, 3, 53, "Subsection",ExpressionUUID->"5bfbf0be-4365-4a32-a7eb-23e547aa54b5"],
Cell[518912, 10880, 596, 17, 28, "Input",ExpressionUUID->"3a4d238d-dd83-438f-afe1-80512b691814"],
Cell[CellGroupData[{
Cell[519533, 10901, 283, 5, 28, "Input",ExpressionUUID->"80ab641a-824f-45c1-ab65-c108e66969aa"],
Cell[519819, 10908, 256, 5, 376, "Output",ExpressionUUID->"fb88a6c1-16f6-4243-ad01-ac193adc9327"]
}, Open  ]],
Cell[520090, 10916, 983, 27, 105, "Input",ExpressionUUID->"08409b37-e189-48ee-b5bc-b3cd75d11838"],
Cell[CellGroupData[{
Cell[521098, 10947, 242, 5, 28, "Input",ExpressionUUID->"25b32b47-895b-4ed1-bf28-3c9141399d75"],
Cell[521343, 10954, 561, 10, 377, "Output",ExpressionUUID->"35cb2847-2b33-4829-9aa1-d5117e6d4d99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[521941, 10969, 404, 9, 28, "Input",ExpressionUUID->"4843592b-549b-482b-9ede-d469e23251c4"],
Cell[522348, 10980, 2202, 44, 113, "Output",ExpressionUUID->"90c525e6-3c6a-4e68-9517-9cf597ca1848"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[524611, 11031, 161, 3, 53, "Subtitle",ExpressionUUID->"a7f8ee4a-2f2f-4b45-846b-f0523951bf95"],
Cell[524775, 11036, 2515, 64, 122, "Text",ExpressionUUID->"ff052e03-c870-4309-bc31-1569c3d86e6a"],
Cell[527293, 11102, 171, 3, 34, "Text",ExpressionUUID->"125abbf6-4fa0-4457-b003-02323285dafc"]
}, Open  ]]
}, Open  ]]
}
]
*)

